[
  {
    "objectID": "competition.html",
    "href": "competition.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "competition.html#title-2-header",
    "href": "competition.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project3.html",
    "href": "Cleansing_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html",
    "href": "Cleansing_Projects/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project4.html",
    "href": "Cleansing_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project2.html",
    "href": "Full_Stack/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 2"
    ]
  },
  {
    "objectID": "Full_Stack/project5.html",
    "href": "Full_Stack/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project3.html",
    "href": "Competition/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 3"
    ]
  },
  {
    "objectID": "Competition/project1.html",
    "href": "Competition/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 1"
    ]
  },
  {
    "objectID": "Competition/project4.html",
    "href": "Competition/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 4"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project2.html",
    "href": "Cleansing_Exploration/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project5.html",
    "href": "Cleansing_Exploration/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "story_telling.html",
    "href": "story_telling.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "story_telling.html#title-2-header",
    "href": "story_telling.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Machine_Learning/project2.html",
    "href": "Machine_Learning/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 2"
    ]
  },
  {
    "objectID": "Machine_Learning/project5.html",
    "href": "Machine_Learning/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 5"
    ]
  },
  {
    "objectID": "cleansing.html",
    "href": "cleansing.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "cleansing.html#title-2-header",
    "href": "cleansing.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "exploration.html#title-2-header",
    "href": "exploration.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Story_Telling/project2.html",
    "href": "Story_Telling/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 2"
    ]
  },
  {
    "objectID": "Story_Telling/project5.html",
    "href": "Story_Telling/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 5"
    ]
  },
  {
    "objectID": "Story_Telling/project4.html",
    "href": "Story_Telling/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 4"
    ]
  },
  {
    "objectID": "Story_Telling/project1.html",
    "href": "Story_Telling/project1.html",
    "title": "Derek Doelling - Data Science Portfolio",
    "section": "",
    "text": "Back to top",
    "crumbs": [
      "Story Telling",
      "Project 1"
    ]
  },
  {
    "objectID": "Story_Telling/project3.html",
    "href": "Story_Telling/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 3"
    ]
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Derek Doelling’s Resume",
    "section": "",
    "text": "Data Scientist and Data Analyst\n\nLinkedin Profile\n\n\n\nAttending Brigham Young University - Idaho\n\n\nClinical trials related to pharmaceuticals\n\n\n\n\n2022-2025 Brigham Young University - Idaho Major: Data Science Minor: Biology"
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Derek Doelling’s Resume",
    "section": "",
    "text": "Attending Brigham Young University - Idaho\n\n\nClinical trials related to pharmaceuticals"
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Derek Doelling’s Resume",
    "section": "",
    "text": "2022-2025 Brigham Young University - Idaho Major: Data Science Minor: Biology"
  },
  {
    "objectID": "resume.html#awards",
    "href": "resume.html#awards",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "2012 President, Royal Society, London, UK\nAssociate, French Academy of Science, Paris, France"
  },
  {
    "objectID": "resume.html#publications",
    "href": "resume.html#publications",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001"
  },
  {
    "objectID": "resume.html#occupation",
    "href": "resume.html#occupation",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "Machine_Learning/project4.html",
    "href": "Machine_Learning/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 4"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html",
    "href": "Machine_Learning/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project3.html",
    "href": "Machine_Learning/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 3"
    ]
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "ml.html#title-2-header",
    "href": "ml.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project4.html",
    "href": "Cleansing_Exploration/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project1.html",
    "href": "Cleansing_Exploration/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project3.html",
    "href": "Cleansing_Exploration/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Competition/project5.html",
    "href": "Competition/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project2.html",
    "href": "Competition/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 2"
    ]
  },
  {
    "objectID": "Full_Stack/project4.html",
    "href": "Full_Stack/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project1.html",
    "href": "Full_Stack/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 1"
    ]
  },
  {
    "objectID": "Full_Stack/project3.html",
    "href": "Full_Stack/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project5.html",
    "href": "Cleansing_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 5"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project2.html",
    "href": "Cleansing_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 2"
    ]
  },
  {
    "objectID": "full_stack.html",
    "href": "full_stack.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "full_stack.html#title-2-header",
    "href": "full_stack.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/IBCspring.html",
    "href": "Cleansing_Exploration/IBCspring.html",
    "title": "IBC Analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(directlabels)\nlibrary(ggrepel)\nlibrary(gapminder)\nlibrary(ggthemes)\nlibrary(scales)\nlibrary(plotly)\nlibrary(pander)\n\ndata &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive - BYU-Idaho\\\\Documents\\\\Data Science Society\\\\IBC Historical Data.csv\")\nCode\nper_dec &lt;- function(x) {\n  numeric_values &lt;- as.numeric(gsub(\"%\", \"\", x))\n  \n  numeric_values / 100\n}\nCode\nibc &lt;- data %&gt;% \n  mutate(\n    `Gross Margin` = per_dec(data$`Gross Margin`), \n    `Net Income Margin` = per_dec(data$`Net Income Margin`))\n\nibc &lt;- ibc[-c(1, 5, 7:10, 12:21), ]\n\nibc &lt;- rename(ibc, net_income = \"Net Income\")\n\nibc_semester &lt;- ibc %&gt;% \n  group_by(Smstr)\n\nibc_semester$Smstr &lt;- factor(ibc_semester$Smstr, levels = c(\"Fall\", \"Winter\", \"Spring\"))\n\nibc_category &lt;- ibc %&gt;% \n  group_by(Category)\n\nibc_year &lt;- ibc %&gt;% \n  group_by(Year)",
    "crumbs": [
      "Project 2"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/IBCspring.html#background",
    "href": "Cleansing_Exploration/IBCspring.html#background",
    "title": "IBC Analysis",
    "section": "Background",
    "text": "Background\nAt Brigham Young University-Idaho, IBC is a program where students run their own businesses on campus with a loan from the university. The professor in charge of IBC has requested an analysis of data from the past couple of years. Specifically, he wants to know which businesses perform the best, whether the semester influences business success, and if female students have a positive impact on the businesses.\nIn the context of this statistical examination, we have set the threshold for statistical significance at an alpha level of 0.1. Upon conducting individual ANOVA analyses, we observe that the residuals versus fitted values plot demonstrates a consistent variance across each vertical cluster of data points. This is indicative of the homoscedasticity assumption being reasonably satisfied.\nFurthermore, the Quantile-Quantile (Q-Q) Plot exhibits a reasonable degree of normality, although some deviations are noted at the extremities. This warrants a degree of caution in interpreting the results.\nFor illustrative purposes, we will provide one such assumption plot as a representative example. However, it is important to note that the pattern observed is generally consistent across all ANOVA analyses conducted.",
    "crumbs": [
      "Project 2"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/IBCspring.html#individual-analysis",
    "href": "Cleansing_Exploration/IBCspring.html#individual-analysis",
    "title": "IBC Analysis",
    "section": "Individual Analysis",
    "text": "Individual Analysis\n\nSemester vs. Revenue\n\n\nCode\nsemester_aov &lt;- aov(Revenue ~ Smstr, ibc_semester)\nsummary(semester_aov)\n\n\n             Df    Sum Sq  Mean Sq F value Pr(&gt;F)\nSmstr         2 6.578e+07 32890323   1.184  0.308\nResiduals   186 5.167e+09 27779127               \n\n\nCode\npar(mfrow = c(1,2))\nplot(semester_aov, which = 1:2)\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart1 &lt;- ggplot(ibc_semester, aes(x=Smstr, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Revenue\", title=\"Fall Semester Experiences the Highest Median of Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart1)\n\n\n\n\n\n\nWhile the Fall semester may exhibit a higher median revenue, the Winter semester demonstrates a greater variability in revenue. However, with a p-value of 0.308, the differences of in mean revenue between the semesters are not statistically significant.\n\n\nSemester vs. Net Income\n\n\nCode\nchart2 &lt;- ggplot(ibc_semester, aes(x=Smstr, y=net_income)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Net Income\", title= \"Spring Semester's Median Net Income is in the Negatives\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart2)\n\n\n\n\n\n\nThe median net income for the Spring semester is actually negative, while the Fall semester boasts a median net income of $408. However, the p-value of 0.148 obtained from the ANOVA test suggests that the differences in mean revenue across semesters are not statistically significant.\n\n\nCategory vs. Revenue\n\n\nCode\nchart3 &lt;- ggplot(ibc_category, aes(x=Category, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Category\", y=\"Revenue\", title=\"Food/Drink Businesses Earn More Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart3)\n\n\n\n\n\n\nStatistical analysis indicates that businesses in the Food/Drink sector generate a higher average revenue compared to other types of businesses with Apparel in second place.\n\n\nCategory vs. Net Income\n\n\nCode\nchart4 &lt;- ggplot(ibc_category, aes(x=Category, y=net_income)) +\n  geom_boxplot() +\n  labs(x=\"Category\", y=\"Net Income\", title=\"Apparel Businesses Have the Highest Median Net INcome\" ) +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart4)\n\n\n\n\n\n\nInterestingly, the differences in mean net income across various business types are not statistically significant. However, it is noteworthy that businesses in the Apparel sector appear to have a higher net income compared to others.\n\n\nYear vs. Revenue\n\n\nCode\nchart5 &lt;- ggplot(ibc_year, aes(x=Year, y=Revenue, group=Year)) +\n  geom_boxplot() +\n  labs(x=\"Year\", y=\"Revenue\", title = \"Median Revenue Has Decreased Ever Since 2017\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart5)\n\n\n\n\n\n\nUnsurprisingly, the period from 2020 to 2022 recorded the lowest revenue across an eight-year span, a downturn largely attributable to the global pandemic. Notably, there appears to be a significant decline in the median revenue following the year 2016.\n\n\nCost of Goods Sold vs. Net Income\n\n\nCode\ncogs &lt;- ibc %&gt;% \n  drop_na(COGS, net_income)\n\ncogs$`Company Name`[is.na(cogs$`Company Name`)] &lt;- \"Unknown\"\n\nibc_lm &lt;- lm(net_income ~ COGS, data=cogs)\nsummary(ibc_lm)\n\n\n\nCall:\nlm(formula = net_income ~ COGS, data = cogs)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8035.9  -931.5   -50.3   734.9  6130.4 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -407.29678  209.78081  -1.942   0.0537 .  \nCOGS           0.24913    0.05027   4.956 1.62e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1727 on 185 degrees of freedom\nMultiple R-squared:  0.1172,    Adjusted R-squared:  0.1124 \nF-statistic: 24.56 on 1 and 185 DF,  p-value: 1.619e-06\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm,which=1:2)\nplot(ibc_lm$residuals)\n\n\n\n\n\n\n\n\n\nThe assumption plot for Residuals vs Fitted raises some concerns as the data points are predominantly clustered towards the far left. Additionally, the Quantile-Quantile (Q-Q) Plot exhibits deviations at both ends, indicating potential departures from normality.\n\n\nCode\nchart6 &lt;- ggplot(cogs, aes(x = COGS, y = net_income)) +\n  geom_point()+\n  geom_smooth(method = lm, formula = y~x, se = FALSE) +\n  labs(x= \"Cost of Goods Sold\", y = \"Net Income\", title = \"More Input = More Output\") +\n  scale_y_continuous(labels = dollar_format()) +\n  scale_x_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10)) +\n  annotate('text', x = 15000, y = 8000, label = 'Wing Shack', size = 3.5, color = 'red') +\n  annotate('text', x = 5000, y = -8000, label = '43 North', size = 3.5, color = 'red') \n\nchart6\n\n\n\n\n\n\n\n\n\nAccording to the linear model, there appears to be a positive correlation between the investment in goods and the subsequent returns. Notably, ‘43 North’ and ‘Wing Shack’ emerge as outliers in this analysis. As most companies tend to maintain low Cost of Goods Sold (COGS), our dataset is somewhat limited in terms of businesses with high COGS. However, within the scope of the available data, we can discern a significant relationship between the cost of goods sold and net income.\n\n\nCode\npeople &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\Downloads\\\\registration_cleaned_sp22_f23_joined_with_business_name (2).csv\")\n\nbusinesses &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\Downloads\\\\IBC Historical Data.csv\")\n\npeople &lt;- people %&gt;% \n  drop_na(\"Business me\")\n\nbusiness &lt;- businesses %&gt;% \n  drop_na(\"Company Name\")\n\ndf &lt;- left_join(people, business, by = c(\"Business me\" = \"Company Name\"))\n\ngender &lt;- df %&gt;%\n  group_by(`Business me`) %&gt;%\n  mutate(\n    females = sum(`Gender` == 'Female', na.rm = TRUE), \n    males = sum(`Gender` == 'Male', na.rm = TRUE)\n  )\n\ndfdf &lt;- gender %&gt;%\n  group_by(females) %&gt;%\n  mutate(females = as.factor(females))\n\ndfdf1 &lt;- gender %&gt;%\n  group_by(males) %&gt;%\n  mutate(males = as.factor(males))\n\ndf1 &lt;- gender %&gt;%\n  group_by(females) %&gt;%\n  summarise(\n    med_net_income = median(`Net Income`, na.rm = TRUE), \n    avg_net_income = mean(`Net Income`, na.rm = TRUE), \n    sum_net_income = sum(`Net Income`, na.rm = TRUE)\n  )\n\ndf2 &lt;- gender %&gt;%\n  group_by(males) %&gt;%\n  summarise(\n    med_net_income = median(`Net Income`, na.rm = TRUE), \n    avg_net_income = mean(`Net Income`, na.rm = TRUE), \n    sum_net_income = sum(`Net Income`, na.rm = TRUE)\n  )\n\nbusinesses$Smstr &lt;- factor(businesses$Smstr, levels = c(\"Fall\", \"Winter\", \"Spring\"))\n\nfood &lt;- businesses %&gt;% \n  filter(Category == \"Food/Drink\") %&gt;% \n  group_by(Smstr)",
    "crumbs": [
      "Project 2"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/IBCspring.html#semester-vs.-revenuesemester-vs.-net-income-for-fooddrink-businesses",
    "href": "Cleansing_Exploration/IBCspring.html#semester-vs.-revenuesemester-vs.-net-income-for-fooddrink-businesses",
    "title": "IBC Analysis",
    "section": "Semester vs. Revenue/Semester vs. Net Income for Food/Drink Businesses",
    "text": "Semester vs. Revenue/Semester vs. Net Income for Food/Drink Businesses\n\n\nCode\nchart8 &lt;- ggplot(food, aes(x=Smstr, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Revenue\", title=\"Winter Semester Earns the Highest Median Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart8)\n\n\n\n\n\n\n\n\nCode\nchart7 &lt;- ggplot(food, aes(x=Smstr, y=`Net Income`)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Net Income\", title=\"Fall Semester Earns a Positive Median Net Income\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart7)\n\n\n\n\n\n\nIntriguingly, the Winter semester records the highest median revenue, while the Spring semester significantly outperforms others in terms of median net income. Despite the higher sales in Winter, the Fall semester may yield greater profits, potentially due to variations in student population. A more comprehensive analysis could be conducted if data on student population for each semester were available. This would allow for a proportional normalization of the data, thereby providing a more accurate comparison across semesters.",
    "crumbs": [
      "Project 2"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/IBCspring.html#females-in-business",
    "href": "Cleansing_Exploration/IBCspring.html#females-in-business",
    "title": "IBC Analysis",
    "section": "Females in Business",
    "text": "Females in Business\nFemale presence in companies\n\n\nCode\npander(summary(gender$females))\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n4\n5\n7\n6.598\n8\n9\n\n\n\n\n\nMale presence in companies\n\n\nCode\npander(summary(gender$males))\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n7\n8\n9\n9.256\n10\n12\n\n\n\n\n\n\n\nCode\ngender$`Business me`[is.na(gender$`Business me`)] &lt;- \"Unknown\"\n\ng &lt;- gender %&gt;% \n  group_by(`Business me`) %&gt;% \n  mutate(\n    total = females + males, \n    prop_female = females / total) %&gt;% \n  distinct(`Business me`, .keep_all = TRUE) %&gt;% \n  mutate(\n    median_rev = median(Revenue), \n    median_net = median(`Net Income`))\n\n\n\nProportion of Females vs. Median Revenue\n\n\nCode\nibc_lm2 &lt;- lm(median_rev ~ prop_female, data=g)\nsummary(ibc_lm2)\n\n\n\nCall:\nlm(formula = median_rev ~ prop_female, data = g)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -5917  -3923  -1340   2984  10088 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)     5700       4473   1.274    0.215\nprop_female     8897      10766   0.826    0.417\n\nResidual standard error: 4819 on 23 degrees of freedom\n  (1 observation deleted due to missingness)\nMultiple R-squared:  0.02883,   Adjusted R-squared:  -0.01339 \nF-statistic: 0.6829 on 1 and 23 DF,  p-value: 0.4171\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm2,which=1:2)\nplot(ibc_lm2$residuals)\n\n\n\n\n\n\n\n\n\nThe criteria for linear regression appear to be satisfactorily fulfilled. The Residuals vs Fitted plot exhibits a seemingly random distribution, indicating homoscedasticity. The Q-Q Plot, while demonstrating a slight right skew, largely adheres to the normality assumption. Furthermore, the Residuals vs Order plot suggests that the residuals are independent, reinforcing the validity of our model.\n\n\nCode\nchart9 &lt;- ggplot(g, aes(x=prop_female, y=median_rev)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Proportion of Females\", y = \"Median Revenue\", title=\"Females Bring In More Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -5, size = 10))\n\nchart9\n\n\n\n\n\n\n\n\n\nThe graph illustrates a linear escalation in revenue corresponding to an increase in the proportion of females. Nonetheless, the correlation between the proportion of females and median revenue does not appear to be significantly meaningful\n\n\nProportion of Females vs. Median Net Income\n\n\nCode\nibc_lm3 &lt;- lm(median_net ~ prop_female, data=g)\nsummary(ibc_lm3)\n\n\n\nCall:\nlm(formula = median_net ~ prop_female, data = g)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2938.6 -1322.9  -513.8   694.1  4798.4 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)   -307.2     1784.4  -0.172    0.865\nprop_female   3870.0     4295.3   0.901    0.377\n\nResidual standard error: 1922 on 23 degrees of freedom\n  (1 observation deleted due to missingness)\nMultiple R-squared:  0.03409,   Adjusted R-squared:  -0.007905 \nF-statistic: 0.8118 on 1 and 23 DF,  p-value: 0.3769\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm3,which=1:2)\nplot(ibc_lm3$residuals)\n\n\n\n\n\n\n\n\n\nThe sole area of concern is that the Q-Q Plot exhibits a pronounced right skew.\n\n\nCode\nchart10 &lt;- ggplot(g, aes(x=prop_female, y=median_net)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Proportion of Females\", y = \"Median Net Income\", title=\"Women Contribute to a Higher Net Income\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -5, size = 10))\n\nchart10\n\n\n\n\n\n\n\n\n\nOnce again, the graph suggests that an increase in the proportion of females aligns with a rise in median net income. However, the statistical significance of this relationship appears to be negligible.",
    "crumbs": [
      "Project 2"
    ]
  },
  {
    "objectID": "Story_Telling/Project.html",
    "href": "Story_Telling/Project.html",
    "title": "Medicine Mosaic",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(plotly)\nlibrary(RColorBrewer)"
  },
  {
    "objectID": "Story_Telling/Project.html#background",
    "href": "Story_Telling/Project.html#background",
    "title": "Medicine Mosaic",
    "section": "Background",
    "text": "Background\nMy initial career aspiration was to become a pharmacist, and I pursued a major in biology during the first two years of my bachelor’s degree. However, I soon realized that chemistry wasn’t my strong suit. Nonetheless, my passion for pharmaceuticals and medicine continues to drive my curiosity. In an attempt to blend my interest in data analysis with pharmacy, I delved into a dataset containing information on thousands of medications. You can find the original dataset at: https://www.kaggle.com/datasets/singhnavjot2062001/11000-medicine-details. The original dataset contained nine columns: Medicine Name (string), Composition (string), Uses (string), Side Effects (string), Image Url (string), Manufacturer (string), Excellent Review (numeric), Average Review (numeric), and Poor Review (numeric). After putting in a lot of effort, I managed to create useful charts from the data.\n\n\nCode\ndrugs &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive - BYU-Idaho\\\\Documents\\\\DS 350\\\\DS350_SP24_Doelling_Dere\\\\week_14\\\\medicine info.csv\")\n\n\n\n\nCode\n# Makes new composition columns\n\nsplit_composition &lt;- function(df, column_to_split, separator) {\n  \n  max_compositions &lt;- max(str_count(df[[column_to_split]], separator) + 1)\n  \n  \n  new_columns &lt;- paste0(\"Composition_\", seq_len(max_compositions))\n  \n  \n  df %&gt;%\n    separate(column_to_split, into = new_columns, sep = separator, fill = \"right\", extra = \"merge\")\n\n}\n\n\ndrugs1 &lt;- split_composition(drugs, \"Composition\", \"\\\\+\")\n\ncols &lt;- c(\"Composition_1\", \"Composition_2\", \"Composition_3\", \"Composition_4\", \"Composition_5\", \"Composition_6\", \"Composition_7\", \"Composition_8\", \"Composition_9\")\n\ndrugs1 &lt;- drugs1 %&gt;% \n  mutate(across(all_of(cols), str_trim))\n\ndrugs1$Composition_Count &lt;- rowSums(!is.na(drugs1[cols]))\n\n\n\n\nCode\n# Split into dosages\n\nsplit_dosage &lt;- function(df, column_to_split, separator) {\n \n  df &lt;- df %&gt;%\n    separate(column_to_split, into = paste0(column_to_split, \"_amount\", seq_len(2)), sep = separator, remove = TRUE, fill = \"right\")\n  \n  return(df)\n}\n\ndrugs2 &lt;- split_dosage(drugs1, \"Composition_1\", \"\\\\(\") %&gt;% \n  rename(\"Composition_1\" = \"Composition_1_amount1\", \"Dosage_Amount_1\" = \"Composition_1_amount2\") %&gt;% \n  mutate(Dosage_Amount_1 = str_replace_all(Dosage_Amount_1, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_2\", \"\\\\(\") %&gt;% \n  rename(\"Composition_2\" = \"Composition_2_amount1\", \"Dosage_Amount_2\" = \"Composition_2_amount2\") %&gt;% \n  mutate(Dosage_Amount_2 = str_replace_all(Dosage_Amount_2, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_3\", \"\\\\(\") %&gt;% \n  rename(\"Composition_3\" = \"Composition_3_amount1\", \"Dosage_Amount_3\" = \"Composition_3_amount2\") %&gt;% \n  mutate(Dosage_Amount_3 = str_replace_all(Dosage_Amount_3, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_4\", \"\\\\(\") %&gt;% \n  rename(\"Composition_4\" = \"Composition_4_amount1\", \"Dosage_Amount_4\" = \"Composition_4_amount2\") %&gt;% \n  mutate(Dosage_Amount_4 = str_replace_all(Dosage_Amount_4, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_5\", \"\\\\(\") %&gt;% \n  rename(\"Composition_5\" = \"Composition_5_amount1\", \"Dosage_Amount_5\" = \"Composition_5_amount2\") %&gt;% \n  mutate(Dosage_Amount_5 = str_replace_all(Dosage_Amount_5, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_6\", \"\\\\(\") %&gt;% \n  rename(\"Composition_6\" = \"Composition_6_amount1\", \"Dosage_Amount_6\" = \"Composition_6_amount2\") %&gt;% \n  mutate(Dosage_Amount_6 = str_replace_all(Dosage_Amount_6, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_7\", \"\\\\(\") %&gt;% \n  rename(\"Composition_7\" = \"Composition_7_amount1\", \"Dosage_Amount_7\" = \"Composition_7_amount2\") %&gt;% \n  mutate(Dosage_Amount_7 = str_replace_all(Dosage_Amount_7, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_8\", \"\\\\(\") %&gt;% \n  rename(\"Composition_8\" = \"Composition_8_amount1\", \"Dosage_Amount_8\" = \"Composition_8_amount2\") %&gt;% \n  mutate(Dosage_Amount_8 = str_replace_all(Dosage_Amount_8, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_9\", \"\\\\(\") %&gt;% \n  rename(\"Composition_9\" = \"Composition_9_amount1\", \"Dosage_Amount_9\" = \"Composition_9_amount2\") %&gt;% \n  mutate(Dosage_Amount_9 = str_replace_all(Dosage_Amount_9, \"\\\\)\", \"\"))\n\n\n\n\nCode\n# Split dosage unit\n\nsplit_unit &lt;- function(df, unit_column) {\n  number &lt;- str_extract(unit_column, \"\\\\d+$\")  \n  new_column_name &lt;- paste0('Dosage_Amount_', number)\n  units_column_name &lt;- paste0('Units_', number)\n  \n  df &lt;- df %&gt;%\n    tidyr::separate(unit_column, into = c(new_column_name, units_column_name), sep = \"(?&lt;=\\\\d)(?=[%a-zA-Z])\", extra = \"merge\")\n  \n  \n  df[[new_column_name]] &lt;- as.numeric(df[[new_column_name]])\n  \n    df &lt;- df %&gt;%\n    mutate_all(~ifelse(. == \"None\", \"None\", .))\n  \n  return(df)\n}\n\ndrugs3 &lt;- split_unit(drugs2, \"Dosage_Amount_1\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_2\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_3\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_4\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_5\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_6\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_7\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_8\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_9\")\n\n\n\n\nCode\n# Remove Treatment of and Prevention of\n\nsplit_treatment &lt;- function(df, uses_column) {\n  df &lt;- df %&gt;%\n    mutate({{uses_column}} := str_replace_all({{uses_column}}, \"Treatment of|Prevention of\", \"\")) %&gt;%\n    mutate({{uses_column}} := str_trim({{uses_column}}))\n}\n\ndrugs4 &lt;- split_treatment(drugs3, Uses)\n\n\n\n\nCode\n# Separate into multiple uses and counts side effects\n\ndrugs5 &lt;- drugs4 %&gt;% \n  mutate(Treats = str_split(Uses, pattern=\"(?&lt;=\\\\s)(?=[A-Z])\"),\n         count_side_effects = str_count(Side_effects, pattern=\"(?&lt;=\\\\s)(?=[A-Z])\")+1) %&gt;% \n  unnest(Treats)"
  },
  {
    "objectID": "Story_Telling/Project.html#analysis",
    "href": "Story_Telling/Project.html#analysis",
    "title": "Medicine Mosaic",
    "section": "Analysis",
    "text": "Analysis\n\nChart 1\n\n\nCode\ngraph &lt;- drugs5 %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE) %&gt;% \n  filter(`Poor Review %` == 100) %&gt;% \n  select(Manufacturer, `Poor Review %`) %&gt;% \n  group_by(Manufacturer) %&gt;% \n  mutate(bad_review = n()) %&gt;% \n  distinct(Manufacturer, .keep_all = TRUE) %&gt;% \n  arrange(desc(bad_review))\n\ngraph &lt;- graph[c(1, 2, 3, 4, 5), ] \n\ngraph &lt;- graph  %&gt;% \n  mutate(Manufacturer = fct_reorder(Manufacturer, bad_review)) %&gt;% \n  select(-`Poor Review %`)\n\n\n\n\nCode\ngraph$highlight &lt;- ifelse(graph$Manufacturer == \"Intas Pharmaceuticals Ltd\", \"red\", \"darkgrey\")\n\nggplot(graph, aes(x=reorder(Manufacturer, bad_review), y=bad_review, fill=highlight)) +\n  geom_col() +\n  scale_fill_identity() +\n  coord_flip() +\n  labs(x = \"\", y=\"Number of Poor Products\", title=\"Manufacturers with the Most Poor Rated Products\", subtitle = \"Intas Pharmaceuticals Ltd may produce many least favored medications\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        plot.subtitle = element_text(size = 10), \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.x = element_text(vjust = -3, size = 10))\n\n\n\n\n\n\n\n\n\nAccording to the graph, it seems that Intas Pharmaceuticals Ltd may be producing the least popular medications in terms of customer satisfaction. This could potentially have a negative impact on their business, as customers are more likely to choose medications from other manufacturers. Consequently, Intas Pharmaceuticals Ltd could incur losses from producing drugs that may not sell well.\n\n\nChart 2\n\n\nCode\ngraph1 &lt;- drugs5 %&gt;% \n  filter(Units_1 == \"mg\", \n         Treats == \"Pain relief\") %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE) %&gt;% \n  select(Composition_1, Dosage_Amount_1, `Excellent Review %`) %&gt;% \n  mutate(Composition_1 = as_factor(Composition_1)) %&gt;% \n  filter(Composition_1 == \"Etoricoxib \") %&gt;% \n  group_by(Dosage_Amount_1) %&gt;% \n  mutate(\n    avg_review = median(`Excellent Review %`), \n    Dosage_Amount_1 = fct_reorder(as_factor(Dosage_Amount_1), avg_review))\n\ngraph1 &lt;- graph1[c(1, 3, 11), ] \n\n\n\n\nCode\nggplot(graph1, aes(x = Dosage_Amount_1, y = avg_review)) +\n  geom_col() +\n  labs(x=\"Dosage Amount in mg\", y = \"Median Percentage of Excellent Reviews\", title = \"More the Merrier?\", subtitle = \"Comparing dosage amounts for Etoricoxib, a pain relief drug\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10)) +\n  annotate(\"segment\", x = \"60\", xend = \"90\", y = 40, yend = 55, colour = \"red\", size=1, alpha=1, arrow=arrow())\n\n\n\n\n\n\n\n\n\nI wanted to investigate if higher dosages would yield better results. I calculated the median percentage of positive reviews for each available dosage of Etoricoxib, a pain relief medication. I chose Etoricoxib because it had a reasonable number of dosage options. Based on the graph, it appears that this is indeed the case, at least for Etoricoxib.\n\n\nChart 3\n\n\nCode\ngraph2 &lt;- drugs5 %&gt;% \n  mutate(\n    Treats = as_factor(Treats)) %&gt;% \n  group_by(Treats) %&gt;% \n  select(Treats, count_side_effects) %&gt;% \n  distinct(Treats, .keep_all = TRUE) %&gt;% \n  mutate(\n    Treats = str_to_lower(Treats))\n\ncategorize_treats &lt;- function(input) {\n  if (str_detect(input, \"cancer\")) {\n    return(\"Cancer Treatments\") }\n  if (str_detect(input, \"anxiety|depression|obsessive|bipolar|schizophrenia|mood|eating|traumatic\")) {\n    return(\"Mental Health\") }\n  if (str_detect(input, \"heart|cholesterol|angina|hypotension|hypertension|cardiac\")) {\n    return(\"Heart Related\") }\n  if (str_detect(input, \"bacteria|infection|viral|virus\")) {\n    return(\"Bacterial/Viral\") }\n  if (str_detect(input, \"pain|inflammation|irritation|osteoporosis|vomit|headache|nausea|migraine|burn\")) {\n    return(\"Antimetics/Pain\") }\n  if (str_detect(input, \"disease|disorder\")) {\n    return(\"Disease Related/Disorder Related\") }\n  else return(\"Other\")\n}\n\ngraph2$Treats &lt;- sapply(graph2$Treats, categorize_treats)\n\ngraph3 &lt;- graph2 %&gt;% \n  mutate(\n    avg_sides = mean(count_side_effects), \n    Treats = fct_reorder(Treats, avg_sides)) %&gt;% \n  distinct(Treats, .keep_all = TRUE)\n\n\n\n\nCode\nggplot(graph3, aes(reorder(x=Treats, avg_sides), y=avg_sides, fill=Treats)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(y=\"Average Number of Side Effects\", x = \"Medication Class\", title=\"What Medication Class Causes the Most Side Effects?\", subtitle=\"Mental health medications and cancer treatments have\\n the most by far\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        legend.position = \"none\", \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10)) +\n  geom_hline(yintercept = 6.6, linetype=\"dashed\", color='black')\n\n\n\n\n\n\n\n\n\nIt’s noteworthy that medications for mental health conditions like anxiety, depression, and OCD, as well as cancer treatments, tend to cause almost double the amount of side effects compared to other types of drugs. This is likely because cancer treatments are usually more intensive and demanding, and targeting brain chemicals is not an easy task.\n\n\nChart 4\n\n\nCode\ngraph4 &lt;- drugs5 %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE)\n\ngraph4$average_rating &lt;- (graph4$`Excellent Review %`* 3 + graph4$`Average Review %` * 2 + graph4$`Poor Review %`* 1) / 100\n\ngraph4$Composition_1 &lt;- replace_na(graph4$Composition_1, \"None\")\ngraph4$Composition_2 &lt;- replace_na(graph4$Composition_2, \"None\")\ngraph4$Composition_3 &lt;- replace_na(graph4$Composition_3, \"None\")\ngraph4$Composition_4 &lt;- replace_na(graph4$Composition_4, \"None\")\ngraph4$Composition_5 &lt;- replace_na(graph4$Composition_5, \"None\")\ngraph4$Composition_6 &lt;- replace_na(graph4$Composition_6, \"None\")\ngraph4$Composition_7 &lt;- replace_na(graph4$Composition_7, \"None\")\ngraph4$Composition_8 &lt;- replace_na(graph4$Composition_8, \"None\")\ngraph4$Composition_9 &lt;- replace_na(graph4$Composition_9, \"None\")\n\nfit &lt;- lm(average_rating ~ Composition_Count, data = graph4)\nnewdata &lt;- data.frame(Composition_Count = range(graph4$Composition_Count))\nnewdata$average_rating &lt;- predict(fit, newdata)\n\n\n\n\nCode\nchart &lt;- ggplot(graph4, aes(x=Composition_Count, y=average_rating, text = paste(\"Medication:\", `Medicine Name`, \"\\nUse:\", Treats, \"\\nChemicals:\", Composition_1, Composition_2, Composition_3, Composition_4, Composition_5, Composition_6, Composition_7, Composition_8, Composition_9))) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Number of Chemical Compositions\", y = \"Average Rating\", title = \"More Chemicals the Better\") +\n  scale_x_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9)) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        legend.position = \"none\", \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10))\n\nchart &lt;- ggplotly(chart)\nchart &lt;- chart %&gt;% add_lines(x = ~Composition_Count, y = ~average_rating, data = newdata)\n\nchart\n\n\n\n\n\n\nI conducted a study to investigate whether including more chemical compositions in a medication leads to higher customer satisfaction. I analyzed the average rating for each medication based on three review categories: excellent, average, and poor. To calculate the average rating, I multiplied the number of excellent reviews by 3, average reviews by 2, and poor reviews by 1. Then, I added these three numbers together and divided the sum by 100. After reviewing the data, it appears that, in general, medications with more chemical compositions tend to have slightly higher levels of customer satisfaction. One potential explanation for the increased customer satisfaction is that the additional chemicals may serve to stabilize the others or prevent them from producing adverse effects. However, it’s important to note that there are only a few medications with more than 5 chemicals compared to those with less than 5, which could be influencing the data."
  },
  {
    "objectID": "rnaseq.html",
    "href": "rnaseq.html",
    "title": "RNA Sequence Analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(rhdf5)\nlibrary(tximport) \nlibrary(ensembldb)\nlibrary(biomaRt)\nlibrary(edgeR)\nlibrary(matrixStats)\nlibrary(cowplot)\nlibrary(DT)\nlibrary(gt)\nlibrary(plotly)\nlibrary(limma)\nlibrary(IsoformSwitchAnalyzeR)\nlibrary(RColorBrewer)\nlibrary(gplots)\nlibrary(d3heatmap)\nlibrary(GSEABase)\nlibrary(Biobase) \nlibrary(gprofiler2) \nlibrary(clusterProfiler) \nlibrary(msigdbr) \nlibrary(enrichplot)\nlibrary(EnsDb.Hsapiens.v86)\nlibrary(GSVA)\nlibrary(ggforce)"
  },
  {
    "objectID": "rnaseq.html#introduction",
    "href": "rnaseq.html#introduction",
    "title": "RNA Sequence Analysis",
    "section": "Introduction",
    "text": "Introduction\nWe will be analyzing Hereditary Hemorrhagic Telangiectasia Syndrome or HHT RNA-seq data. HHT patients develop arteriovenous malformations (AVMs) known as telangiectasia in the nose, mouth, and gastrointestinal tract. The telangiectasia are comprised of fragile vessels that are susceptible to rupture and hemorrhage, which can cause nosebleeds or more serious symptoms depending on the location. It is prevalent in one case per 5,000–8,000 individuals \n We want to find which specific genes contribute to the development of HHT and what roles do they play? The following links are to the research paper and the dataset used in this analysis.\nThis research project aims to improve the studying of rare diseases, such as hereditary hemorrhagic telangiectasia (HHT), using cells derived from patients. The researchers focused on understanding how cells respond to specific genetic mutations called premature termination codons (PTCs).\nThe study involved obtaining blood outgrowth endothelial cells (BOECs) from two healthy patients (control group) and two pre-genotyped HHT patients (experimental group).\nRNA was extracted from multiple samples of BOECs from both healthy and HHT patients. These cells were then grown under two different conditions: with and without a specific growth factor. In total, there were two control/healthy groups and six experimental/disease groups.\n\nLoad in the Data\n\n\nCode\ntargets &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\studydesign.csv\")\n\ncounts &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\Data.csv\")\n\nTx &lt;- transcripts(EnsDb.Hsapiens.v86, columns=c(\"gene_id\", \"gene_name\"))\n\nTx &lt;- as_tibble(Tx)\n\nTx &lt;- dplyr::rename(Tx, target_id = gene_id)\n\nTx &lt;- dplyr::select(Tx, \"target_id\", \"gene_name\")\n\ndf &lt;- left_join(counts, Tx, by = c(\"Ensembl Transcript ID\" = \"target_id\"))\n\ndistinct &lt;- distinct(df)\n\ndata &lt;- distinct %&gt;% \n  group_by(gene_name)\n\ndata &lt;- data %&gt;% \n  mutate_all(funs(replace(., .==\".\", 0)))\n\ndata$`hht 1.1` &lt;- as.numeric(data$`hht 1.1`)\ndata$`hht 1.2` &lt;- as.numeric(data$`hht 1.2`)\ndata$`hht 2.1` &lt;- as.numeric(data$`hht 2.1`)\ndata$`hht 2.2` &lt;- as.numeric(data$`hht 2.2`)\ndata$`hht 3.1` &lt;- as.numeric(data$`hht 3.1`)\ndata$`hht 3.2` &lt;- as.numeric(data$`hht 3.2`)"
  },
  {
    "objectID": "rnaseq.html#data-wrangling",
    "href": "rnaseq.html#data-wrangling",
    "title": "RNA Sequence Analysis",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\n\nCode\na &lt;- data %&gt;% \n  select(-`Ensembl Transcript ID`)\n\nb &lt;- a %&gt;%\n  group_by(gene_name) %&gt;%\n  summarise_if(is.numeric, sum, na.rm = TRUE)\n\nc &lt;- as.data.frame(b)\n\nrownames(c) &lt;- c$gene_name\n\nmyDGEList &lt;- DGEList(c)\n\nsampleLabels &lt;- targets$sample\n\nlog2.cpm &lt;- cpm(myDGEList, log=TRUE)\n\nlog2.cpm.df &lt;- as_tibble(log2.cpm, rownames = \"geneID\")\ncolnames(log2.cpm.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.df.pivot &lt;- pivot_longer(log2.cpm.df, \n                                  cols = -1,\n                                  names_to = \"samples\",\n                                  values_to = \"expression\")\n\np1 &lt;- ggplot(log2.cpm.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"unfiltered, non-normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\n\ncpm &lt;- cpm(myDGEList)\nkeepers &lt;- rowSums(cpm&gt;1)&gt;=2\nmyDGEList.filtered &lt;- myDGEList[keepers,]\n\nlog2.cpm.filtered &lt;- cpm(myDGEList.filtered, log=TRUE)\nlog2.cpm.filtered.df &lt;- as_tibble(log2.cpm.filtered, rownames = \"geneID\")\ncolnames(log2.cpm.filtered.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.filtered.df.pivot &lt;- pivot_longer(log2.cpm.filtered.df,\n                                           cols = -1,\n                                           names_to = \"samples\",\n                                           values_to = \"expression\") \n\np2 &lt;- ggplot(log2.cpm.filtered.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"filtered, non-normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\n\nmyDGEList.filtered.norm &lt;- calcNormFactors(myDGEList.filtered, method = \"TMM\")\nlog2.cpm.filtered.norm &lt;- cpm(myDGEList.filtered.norm, log=TRUE)\nlog2.cpm.filtered.norm.df &lt;- as_tibble(log2.cpm.filtered.norm, rownames = \"geneID\")\ncolnames(log2.cpm.filtered.norm.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.filtered.norm.df.pivot &lt;- pivot_longer(log2.cpm.filtered.norm.df,\n                                                cols = -1,\n                                                names_to = \"samples\",\n                                                values_to = \"expression\")\n\np3 &lt;- ggplot(log2.cpm.filtered.norm.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"filtered, TMM normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\nplot_grid(p1, p2, p3, labels = c('A', 'B', 'C'), label_size = 12)"
  },
  {
    "objectID": "rnaseq.html#data-exploration",
    "href": "rnaseq.html#data-exploration",
    "title": "RNA Sequence Analysis",
    "section": "Data Exploration",
    "text": "Data Exploration\n\n\nCode\ngroup &lt;- targets$group\ngroup &lt;- factor(group)\n\npca.res &lt;- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)\npc.var &lt;- pca.res$sdev^2\npc.per &lt;- round(pc.var/sum(pc.var)*100, 1) \npca.res.df &lt;- as_tibble(pca.res$x)\npca.plot &lt;- ggplot(pca.res.df) +\n  aes(x=PC1, y=PC2, label=sampleLabels, color = group) +\n  geom_point(size=4) +\n  stat_ellipse() +\n  xlab(paste0(\"PC1 (\",pc.per[1],\"%\",\")\")) + \n  ylab(paste0(\"PC2 (\",pc.per[2],\"%\",\")\")) +\n  labs(title=\"PCA plot\") +\n  coord_fixed() +\n  theme_bw()\n\nggplotly(pca.plot)\n\n\n\n\n\n\nCode\nlog2.cpm.filtered.norm.df &lt;- log2.cpm.filtered.norm.df %&gt;% \n  rename(hht1_1 = `hht 1 .1`, hht1_2 = `hht 1.2`, hht2_1 = `hht 2.1`, hht2_2 = `hht 2.2`, hht3_1 = `hht 3.1`, hht3_2 = `hht 3.2`, control1 = `control 1`, control2 = `control 2`)\n\nmydata.df &lt;- mutate(log2.cpm.filtered.norm.df,\n                    healthy.AVG = (control1 + control2)/2, \n                    disease.AVG = (hht1_1 + hht1_2 + hht2_1 + hht2_2 + hht3_1 + hht3_2)/6,\n                    LogFC = (disease.AVG - healthy.AVG)) %&gt;% \n  mutate_if(is.numeric, round, 2)\n\nmydata.sort &lt;- mydata.df %&gt;%\n  dplyr::arrange(desc(LogFC)) %&gt;% \n  dplyr::select(geneID, LogFC)\n\ndatatable(mydata.df[,c(1,10:12)], \n          extensions = c('KeyTable', \"FixedHeader\"), \n          filter = 'top',\n          options = list(keys = TRUE, \n                        searchHighlight = TRUE, \n                        pageLength = 10, \n                         dom = \"Blfrtip\", \n                         buttons = c(\"copy\", \"csv\", \"excel\"),\n                         lengthMenu = c(\"10\", \"25\", \"50\", \"100\")))\n\n\n\n\n\n\nCode\ndistance &lt;- dist(t(log2.cpm.filtered.norm), method = \"maximum\")\nclusters &lt;- hclust(distance, method = \"single\")\nplot(clusters, labels=sampleLabels)\n\n\n\n\n\n\n\n\n\nCode\npca.res &lt;- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)\n#ls(pca.res)\n#summary(pca.res) \n#pca.res$rotation \n#pca.res$x\nscreeplot(pca.res)\ntext(x=0.7, y=1700, labels = \"47.5%\", cex=0.7)\ntext(x=1.9, y=900, labels = \"21.2%\", cex=0.7)\ntext(x=3.1, y=750, labels = \"17.9%\", cex=0.7)\ntext(x=4.3, y=350, labels = \"7.4%\", cex=0.7)\ntext(x=5.6, y=130, labels = \"2.1%\", cex=0.7)\ntext(x=6.8, y=130, labels = \"2.0%\", cex=0.7)\ntext(x=7.9, y=130, labels = \"1.9%\", cex=0.7)\ntext(x=9.2, y=70, labels = \"0.0%\", cex=0.7)\n\n\n\n\n\n\n\n\n\nCode\npc.var&lt;-pca.res$sdev^2 \npc.per&lt;-round(pc.var/sum(pc.var)*100, 1) \n#pc.per\n\npca.res.df &lt;- as_tibble(pca.res$x)\nggplot(pca.res.df) +\n  aes(x=PC2, y=PC3, label=sampleLabels) +\n  geom_point(size=4) +\n  geom_label() +\n  stat_ellipse() +\n  xlab(paste0(\"PC2 (\",pc.per[1],\"%\",\")\")) + \n  ylab(paste0(\"PC3 (\",pc.per[2],\"%\",\")\")) +\n  labs(title=\"PCA plot\") +\n  coord_fixed() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\npca.res.df &lt;- pca.res$x[,1:4] %&gt;%\n  as_tibble() %&gt;%\n  add_column(sample = sampleLabels,\n             group = group)\n\npca.pivot &lt;- pivot_longer(pca.res.df, \n                          cols = PC1:PC4, \n                          names_to = \"PC\", \n                          values_to = \"loadings\")\nggplot(pca.pivot) +\n  aes(x=sample, y=loadings, fill=group) + \n  geom_bar(stat=\"identity\") +\n  facet_wrap(~PC) +\n  labs(title=\"PCA 'small multiples' plot\") +\n  theme_bw() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\nCode\nmydata.df &lt;- mutate(log2.cpm.filtered.norm.df,\n                    healthy.AVG = (control1 + control2)/2, \n                    disease.AVG = (hht1_1 + hht1_2 + hht2_1 + hht2_2 + hht3_1 + hht3_2)/6,\n                    LogFC = (disease.AVG - healthy.AVG)) %&gt;% \n  mutate_if(is.numeric, round, 2)\n\n#mydata.sort &lt;- mydata.df %&gt;%\n  #dplyr::arrange(desc(LogFC)) %&gt;% \n  #dplyr::select(geneID, LogFC)\n\n#gt(mydata.sort)\n\nmydata.filter &lt;- mydata.df %&gt;% \n  dplyr::filter(geneID == \"SMAD4\"|geneID == \"ENG\"|geneID == \"ACVRL1\"|geneID == \"SMOC2\") %&gt;% \n  dplyr::select(geneID, healthy.AVG, disease.AVG, LogFC) %&gt;% \n  dplyr::arrange((LogFC))\n\n#gt(mydata.filter)\n\n#myplot &lt;- ggplot(mydata.df) + \n  #aes(x=healthy.AVG, y=disease.AVG) +\n  #geom_point(shape=16, size=1) +\n  #ggtitle(\"disease vs. healthy\") +\n  #theme_bw()\n\n#ggplotly(myplot)\n\nmyplot &lt;- ggplot(mydata.df) +\n  aes(x=healthy.AVG, y=disease.AVG, \n     text = paste(\"Symbol:\", geneID)) +\n  geom_point(shape=16, size=1) +\n  ggtitle(\"Disease vs. Healthy\") +\n  theme_bw()\n  #annotate('text', x = 6, y = -4, label = 'SMAD4', size = 3, color = 'red') +\n  #annotate('text', x = 7, y = -3, label = 'ENG', size = 3, color = 'red') +\n  #annotate('text', x = 9, y = -4, label = 'ACVRL1', size = 3, color = 'red')\n#myplot\nmyplotly &lt;- ggplotly(myplot)\n\nmyplot_plotly &lt;- add_trace(myplotly, x = ~c(6, 9.3, 9.3, 6),  # x-coordinates of the circle\n  y = ~c(-4, -4, -2.5, -2.5),  # y-coordinates of the circle\n  fill = \"none\",  # fill the circle\n  mode = \"lines\")\nmyplot_plotly"
  },
  {
    "objectID": "rnaseq.html#differential-gene-expression",
    "href": "rnaseq.html#differential-gene-expression",
    "title": "RNA Sequence Analysis",
    "section": "Differential Gene Expression",
    "text": "Differential Gene Expression\n\n\nCode\ngroup &lt;- factor(targets$group)\ndesign &lt;- model.matrix(~0 + group)\ncolnames(design) &lt;- levels(group)\n\nv.DEGList.filtered.norm &lt;- voom(myDGEList.filtered.norm, design, plot = FALSE)\nfit &lt;- lmFit(v.DEGList.filtered.norm, design)\ncontrast.matrix &lt;- makeContrasts(infection = disease - healthy,\n                                 levels=design)\n\nfits &lt;- contrasts.fit(fit, contrast.matrix)\nebFit &lt;- eBayes(fits)\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=40000, sort.by=\"logFC\")\nmyTopHits.df &lt;- myTopHits %&gt;%\n  as_tibble(rownames = \"geneID\")\n\nvplot &lt;- ggplot(myTopHits.df) +\n  aes(y=-log10(adj.P.Val), x=logFC, text = paste(\"Symbol:\", geneID)) +\n  geom_point(size=2) +\n  geom_hline(yintercept = -log10(0.01), linetype=\"longdash\", colour=\"grey\", linewidth=1) +\n  geom_vline(xintercept = 1, linetype=\"longdash\", colour=\"#BE684D\", linewidth=1) +\n  geom_vline(xintercept = -1, linetype=\"longdash\", colour=\"#2C467A\", linewidth=1) +\n  annotate(\"rect\", xmin = 1, xmax = 12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#BE684D\") +\n  annotate(\"rect\", xmin = -1, xmax = -12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#2C467A\") +\n  labs(title=\"Volcano plot\") +\n  theme_bw()\n\nggplotly(vplot)\n\n\n\n\n\n\nCode\nvplot &lt;- ggplot(myTopHits.df) +\n  aes(y=-log10(adj.P.Val), x=logFC, text = paste(\"Symbol:\", geneID)) +\n  geom_point(size=2) +\n  geom_hline(yintercept = -log10(0.01), linetype=\"longdash\", colour=\"grey\", linewidth=1) +\n  geom_vline(xintercept = 1, linetype=\"longdash\", colour=\"#BE684D\", linewidth=1) +\n  geom_vline(xintercept = -1, linetype=\"longdash\", colour=\"#2C467A\", linewidth=1) +\n  #annotate(\"rect\", xmin = 1, xmax = 12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#BE684D\") +\n  #annotate(\"rect\", xmin = -1, xmax = -12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#2C467A\") +\n  labs(title=\"Volcano plot\") +\n  theme_bw()\n\nggplotly(vplot)\n\n\n\n\n\n\n\n\nCode\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.05, lfc=1)\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\ndiffGenes.df &lt;- as_tibble(diffGenes, rownames = \"geneID\")\n#datatable(diffGenes.df,\n          #extensions = c('KeyTable', \"FixedHeader\"),\n          #caption = 'Table 1: DEGs in hereditary hemorrhagic telangiectasia',\n          #options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  #formatRound(columns=c(2:11), digits=2)\n\ngroup &lt;- factor(targets$group)\ndesign &lt;- model.matrix(~0 + group)\ncolnames(design) &lt;- levels(group)\n\nv.DEGList.filtered.norm &lt;- voom(myDGEList.filtered.norm, design, plot = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- lmFit(v.DEGList.filtered.norm, design)\n\ncontrast.matrix &lt;- makeContrasts(infection = disease - healthy,\n                                 levels=design)\n\nfits &lt;- contrasts.fit(fit, contrast.matrix)\n\nebFit &lt;- eBayes(fits)\n\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=1000, sort.by=\"P\")\n\nmyTopHits.df &lt;- myTopHits %&gt;%\n  as_tibble(rownames = \"geneID\")\n\n#gt(myTopHits.df)\n\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.01, lfc=1)\n\n#head(results)\nsummary(results)\n\n\n       infection\nDown          33\nNotSig     15987\nUp            11\n\n\nCode\nvennDiagram(results, include=\"up\")\n\n\n\n\n\n\n\n\n\nCode\nhead(v.DEGList.filtered.norm$E)\n\n\n         control 1 control 2    hht 1.1   hht 1.2      hht 2.1   hht 2.2\n7SK       3.472236  3.290154  1.4731989 1.3637896  3.351844812 3.2251807\nA1BG-AS1  1.140556  1.523354  0.9687348 0.5537862  1.043332227 0.8596644\nA2M       4.085489  3.681536  7.1690221 6.9275506  7.464539644 7.4982462\nA2ML1    -1.337039  0.186553 -1.8293292 0.6740180 -0.008812131 1.6890183\nA4GALT    4.310393  4.224691  4.7237089 4.8314617  4.155793371 4.2604368\nAAAS      4.665635  4.660797  4.6485903 4.6936389  4.539587622 4.6821253\n           hht 3.1   hht 3.2\n7SK      1.0911818 0.9380777\nA1BG-AS1 1.5496218 1.7211547\nA2M      3.4765089 3.4991400\nA2ML1    0.7728034 1.5567386\nA4GALT   4.7231803 4.8493136\nAAAS     4.5521180 4.5642138\n\n\nCode\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\n\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\nhead(diffGenes)\n\n\n           control 1 control 2  hht 1 .1   hht 1.2   hht 2.1   hht 2.2\nAC073130.3  3.442540  3.554620  1.492421  1.928598  1.872470  1.827697\nACVRL1      8.750189  8.653991 -5.592370 -5.502627 -5.390163 -5.304130\nALDOC       3.562433  3.578118  2.335686  2.537436  1.793928  1.827697\nAR          4.734646  4.735844  3.278388  3.513360  3.602844  3.585952\nCAND2       3.856947  4.084054  2.749242  2.743860  2.485870  3.084719\nCBX8        2.960119  2.717915  1.074558  1.213160  1.599817  1.736741\n             hht 3.1   hht 3.2\nAC073130.3  2.277802  2.016747\nACVRL1     -5.573912 -5.506875\nALDOC       2.385267  2.471475\nAR          3.664249  3.624437\nCAND2       2.601269  2.784017\nCBX8        1.549622  1.556739\n\n\nCode\ndim(diffGenes)\n\n\n[1] 44  8\n\n\nCode\ndiffGenes.df &lt;- as_tibble(diffGenes, rownames = \"geneID\")\n\ndatatable(diffGenes.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Table 1: DEGs in hereditary hemorrhagic telangiectasia',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2:11), digits=2)\n\n\n\n\n\n\nCode\nwrite_tsv(diffGenes.df,\"DiffGenes.txt\")\n\ntargets.mod &lt;- targets %&gt;%\n  dplyr::rename(sampleID = sample, condition = group) %&gt;%\n  dplyr::select(sampleID, condition)"
  },
  {
    "objectID": "rnaseq.html#module-identification",
    "href": "rnaseq.html#module-identification",
    "title": "RNA Sequence Analysis",
    "section": "Module Identification",
    "text": "Module Identification\n\n\nCode\nmyheatcolors &lt;- rev(brewer.pal(name=\"RdBu\", n=11))\nmyotherheatcolors &lt;- rev(brewer.pal(name=\"Spectral\", n=11))\nclustRows &lt;- hclust(as.dist(1-cor(t(diffGenes), method=\"pearson\")), method=\"complete\") \nclustColumns &lt;- hclust(as.dist(1-cor(diffGenes, method=\"spearman\")), method=\"complete\")\nmodule.assign &lt;- cutree(clustRows, k=2)\nmodule.color &lt;- rainbow(length(unique(module.assign)), start=0.1, end=0.9) \nmodule.color &lt;- module.color[as.vector(module.assign)] \nheatmap.2(diffGenes, \n          Rowv=as.dendrogram(clustRows), \n          Colv=as.dendrogram(clustColumns),\n          RowSideColors=module.color,\n          col=myotherheatcolors, scale='row', labRow=NA,\n          density.info=\"none\", trace=\"none\",  \n          cexRow=1, cexCol=1, margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 2 \nmyModule_up &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub_up &lt;- hclust(as.dist(1-cor(t(myModule_up), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule_up, \n          Rowv=as.dendrogram(hrsub_up), \n          Colv=NA, \n          labRow = NA,\n          col=myheatcolors, scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 1 \nmyModule_down &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub_down &lt;- hclust(as.dist(1-cor(t(myModule_down), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule_down, \n          Rowv=as.dendrogram(hrsub_down), \n          Colv=NA, \n          labRow = NA,\n          col=myheatcolors, scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmyheatcolors1 &lt;- bluered(75) \nmyheatcolors2 &lt;- colorRampPalette(colors=c(\"blue\",\"white\",\"red\"))(100)\nmyheatcolors3 &lt;- brewer.pal(name=\"RdBu\", n=11)\nmyheatcolors3 &lt;- c(\"#fed976\", \"#268f9c\")\n\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.01, lfc=1)\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\n#dim(diffGenes)\nclustRows &lt;- hclust(as.dist(1-cor(t(diffGenes), method=\"pearson\")), method=\"complete\") \nclustColumns &lt;- hclust(as.dist(1-cor(diffGenes, method=\"spearman\")), method=\"complete\") \nmodule.assign &lt;- cutree(clustRows, k=2)\nmodule.color &lt;- rainbow(length(unique(module.assign)), start=0.1, end=0.9) \nmodule.color &lt;- module.color[as.vector(module.assign)] \nheatmap.2(diffGenes, \n          Rowv=as.dendrogram(clustRows), \n          Colv=as.dendrogram(clustColumns),\n          RowSideColors=module.color,\n          col=rev(myheatcolors1), scale='row', labRow=NA,\n          density.info=\"none\", trace=\"none\",  \n          cexRow=1, cexCol=1, margins=c(8,20)) \n\n\n\n\n\n\n\n\n\nCode\nd3heatmap(diffGenes,\n          colors = myheatcolors1,\n          Rowv=as.dendrogram(clustRows),\n          row_side_colors = module.color,\n          scale='row')\n\n\n\n\n\n\nCode\ncolnames(diffGenes) &lt;- targets$group\n\ndiffGenes.AVG &lt;- avearrays(diffGenes)\n\nnames(module.color) &lt;- names(module.assign) \n\nmodule.assign.df &lt;- as_tibble(as.list(module.assign))\nmodule.assign.pivot &lt;- pivot_longer(module.assign.df, \n                                    cols = everything(), \n                                    names_to = \"geneID\", \n                                    values_to = \"module\")\n\nmodule.assign.pivot &lt;- module.assign.pivot %&gt;%\n  mutate(moduleColor = case_when(\n    module == 1 ~ \"#FF9900\",\n    module == 2 ~ \"#FF0099\"))\n\nggplot(module.assign.pivot) +\n  aes(module) +\n  geom_bar(aes(fill=moduleColor)) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 2\nmyModule &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub &lt;- hclust(as.dist(1-cor(t(myModule), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule, \n          Rowv=as.dendrogram(hrsub), \n          Colv=NA, \n          labRow = NA,\n          col=rev(myheatcolors1), scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20)) \n\n\n\n\n\n\n\n\n\nCode\nmoduleSymbols &lt;- tibble(geneID = rev(hrsub$labels[hrsub$order]))\nmoduleData &lt;- diffGenes[moduleSymbols$geneID,]\nmoduleData.df &lt;- as_tibble(moduleData, rownames = \"geneSymbol\")\nwrite_tsv(moduleData.df,\"module_upRegulated.tsv\")"
  },
  {
    "objectID": "rnaseq.html#functional-enrichment-analysis",
    "href": "rnaseq.html#functional-enrichment-analysis",
    "title": "RNA Sequence Analysis",
    "section": "Functional Enrichment Analysis",
    "text": "Functional Enrichment Analysis\n\n\nCode\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=100, sort.by=\"AveExpr\")\n\ngost.res &lt;- gost(rownames(myTopHits), organism = \"hsapiens\", correction_method = \"fdr\")\n\ngostplot(gost.res, interactive = TRUE, capped = TRUE)\n\n\n\n\n\n\nCode\nmygostplot &lt;- gostplot(gost.res, interactive = FALSE, capped = TRUE)\n\n#publish_gostplot(\n  #mygostplot, \n  #highlight_terms = c(\"REAC:R-HSA-9662851\", \"REAC:R-HSA-9824443\", \"REAC:R-HSA-9664407\", \"REAC:R-HSA-9658195\", \"REAC:R-HSA-9664417\"),\n  #filename = NULL,\n  #width = NA,\n  #height = NA)\n\nC2CP &lt;- read.gmt(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\c2.all.v2023.2.Hs.symbols.gmt\")\n\nmydata.df.sub &lt;- dplyr::select(mydata.df, geneID, LogFC)\n\nmydata.gsea &lt;- mydata.df.sub$LogFC\nnames(mydata.gsea) &lt;- as.character(mydata.df.sub$geneID)\nmydata.gsea &lt;- sort(mydata.gsea, decreasing = TRUE)\n\nset.seed(123) \nmyGSEA.res &lt;- GSEA(mydata.gsea, TERM2GENE=C2CP, verbose=FALSE) \nmyGSEA.df &lt;- as_tibble(myGSEA.res@result)\n\ndatatable(myGSEA.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Signatures enriched in leishmaniasis',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2:10), digits=2)\n\n\n\n\n\n\nCode\ngseaplot2(myGSEA.res,\n          geneSetID = c(1, 2, 3), \n          pvalue_table = FALSE, \n          \n)\n\n\n\n\n\n\n\n\n\nCode\nmyGSEA.df &lt;- myGSEA.df %&gt;%\n  mutate(phenotype = case_when(\n    NES &gt; 0 ~ \"disease\",\n    NES &lt; 0 ~ \"healthy\"))\n\nggplot(myGSEA.df[1:20,], aes(x=phenotype, y=ID)) +\n  geom_point(aes(size=setSize, color = NES, alpha=-log10(p.adjust))) +\n  scale_color_gradient(low=\"blue\", high=\"red\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nmySig &lt;- rownames(myTopHits) \nmySig2 &lt;- sample((rownames(v.DEGList.filtered.norm$E)), size = 50, replace = FALSE)\ncollection &lt;- list(real = mySig, fake = mySig2)\n\ncamera.res &lt;- camera(v.DEGList.filtered.norm$E, collection, design, contrast.matrix[,1])\ncamera.df &lt;- as_tibble(camera.res, rownames = \"setName\")\n#camera.df\n\nmroast(v.DEGList.filtered.norm$E, collection, design, contrast=1)\n\n\n\n  \n\n\n\nCode\nC2CP &lt;- getGmt(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\c2.all.v2023.2.Hs.symbols.gmt\", geneIdType=SymbolIdentifier())\n\nC2CP &lt;- geneIds(C2CP)\ncamera.res &lt;- camera(v.DEGList.filtered.norm$E, C2CP, design, contrast.matrix[,1])\ncamera.df &lt;- as_tibble(camera.res, rownames = \"setName\")\ncamera.df\n\n\n\n  \n\n\n\nCode\ncamera.df &lt;- dplyr::filter(camera.df, FDR&lt;=0.01)\n\ndatatable(camera.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Signatures enriched in HHT',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2,4,5), digits=2)\n\n\n\n\n\n\nCode\ncamera.df &lt;- camera.df %&gt;%\n  mutate(phenotype = case_when(\n    Direction == \"Up\" ~ \"disease\",\n    Direction == \"Down\" ~ \"healthy\"))\n\nggplot(camera.df[1:25,], aes(x=phenotype, y=setName)) +\n  geom_point(aes(size=NGenes, color = Direction, alpha=-log10(FDR))) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\ngsvapar &lt;- gsvaParam(exprData = v.DEGList.filtered.norm$E,\n                     geneSets = C2CP,\n                     minSize=5, maxSize=500,\n                     maxDiff=TRUE)\n\n#GSVA.res.C2CP &lt;- gsva(gsvapar)\n\n#fit.C2CP &lt;- lmFit(GSVA.res.C2CP, design)\n#ebFit.C2CP &lt;- eBayes(fit.C2CP)\n\n#topPaths.C2CP &lt;- topTable(ebFit.C2CP, adjust =\"BH\", coef=1, number=50, sort.by=\"logFC\")\n#res.C2CP &lt;- decideTests(ebFit.C2CP, method=\"global\", adjust.method=\"BH\", p.value=0.05, lfc=0.5)\n\n#summary(res.C2CP)\n\n#diffSets.C2CP &lt;- GSVA.res.C2CP[res.C2CP[,1] !=0,]\n#head(diffSets.C2CP)\n#dim(diffSets.C2CP)\n\n#hr.C2CP &lt;- hclust(as.dist(1-cor(t(diffSets.C2CP), method=\"pearson\")), method=\"complete\") \n#hc.C2CP &lt;- hclust(as.dist(1-cor(diffSets.C2CP, method=\"spearman\")), method=\"complete\") \n\n#mycl.C2CP &lt;- cutree(hr.C2CP, k=2)\n#mycolhc.C2CP &lt;- rainbow(length(unique(mycl.C2CP)), start=0.1, end=0.9)\n#mycolhc.C2CP &lt;- mycolhc.C2CP[as.vector(mycl.C2CP)]\n\n#myheatcol &lt;- colorRampPalette(colors=c(\"yellow\",\"white\",\"blue\"))(100)\n\n#heatmap.2(diffSets.C2CP,\n          #Rowv=as.dendrogram(hr.C2CP),\n          #Colv=NA,\n          #col=myheatcol, scale=\"row\",\n          #density.info=\"none\", trace=\"none\",\n          #cexRow=0.9, cexCol=1, margins=c(10,14))"
  },
  {
    "objectID": "Project.html",
    "href": "Project.html",
    "title": "Medicine Mosaic",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(plotly)\nlibrary(RColorBrewer)"
  },
  {
    "objectID": "Project.html#background",
    "href": "Project.html#background",
    "title": "Medicine Mosaic",
    "section": "Background",
    "text": "Background\nMy initial career aspiration was to become a pharmacist, and I pursued a major in biology during the first two years of my bachelor’s degree. However, I soon realized that chemistry wasn’t my strong suit. Nonetheless, my passion for pharmaceuticals and medicine continues to drive my curiosity. In an attempt to blend my interest in data analysis with pharmacy, I delved into a dataset containing information on thousands of medications. You can find the original dataset at: https://www.kaggle.com/datasets/singhnavjot2062001/11000-medicine-details. The original dataset contained nine columns: Medicine Name (string), Composition (string), Uses (string), Side Effects (string), Image Url (string), Manufacturer (string), Excellent Review (numeric), Average Review (numeric), and Poor Review (numeric). After putting in a lot of effort, I managed to create useful charts from the data.\n\n\nCode\ndrugs &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive - BYU-Idaho\\\\Documents\\\\DS 350\\\\DS350_SP24_Doelling_Dere\\\\week_14\\\\medicine info.csv\")\n\n\n\n\nCode\n# Makes new composition columns\n\nsplit_composition &lt;- function(df, column_to_split, separator) {\n  \n  max_compositions &lt;- max(str_count(df[[column_to_split]], separator) + 1)\n  \n  \n  new_columns &lt;- paste0(\"Composition_\", seq_len(max_compositions))\n  \n  \n  df %&gt;%\n    separate(column_to_split, into = new_columns, sep = separator, fill = \"right\", extra = \"merge\")\n\n}\n\n\ndrugs1 &lt;- split_composition(drugs, \"Composition\", \"\\\\+\")\n\ncols &lt;- c(\"Composition_1\", \"Composition_2\", \"Composition_3\", \"Composition_4\", \"Composition_5\", \"Composition_6\", \"Composition_7\", \"Composition_8\", \"Composition_9\")\n\ndrugs1 &lt;- drugs1 %&gt;% \n  mutate(across(all_of(cols), str_trim))\n\ndrugs1$Composition_Count &lt;- rowSums(!is.na(drugs1[cols]))\n\n\n\n\nCode\n# Split into dosages\n\nsplit_dosage &lt;- function(df, column_to_split, separator) {\n \n  df &lt;- df %&gt;%\n    separate(column_to_split, into = paste0(column_to_split, \"_amount\", seq_len(2)), sep = separator, remove = TRUE, fill = \"right\")\n  \n  return(df)\n}\n\ndrugs2 &lt;- split_dosage(drugs1, \"Composition_1\", \"\\\\(\") %&gt;% \n  rename(\"Composition_1\" = \"Composition_1_amount1\", \"Dosage_Amount_1\" = \"Composition_1_amount2\") %&gt;% \n  mutate(Dosage_Amount_1 = str_replace_all(Dosage_Amount_1, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_2\", \"\\\\(\") %&gt;% \n  rename(\"Composition_2\" = \"Composition_2_amount1\", \"Dosage_Amount_2\" = \"Composition_2_amount2\") %&gt;% \n  mutate(Dosage_Amount_2 = str_replace_all(Dosage_Amount_2, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_3\", \"\\\\(\") %&gt;% \n  rename(\"Composition_3\" = \"Composition_3_amount1\", \"Dosage_Amount_3\" = \"Composition_3_amount2\") %&gt;% \n  mutate(Dosage_Amount_3 = str_replace_all(Dosage_Amount_3, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_4\", \"\\\\(\") %&gt;% \n  rename(\"Composition_4\" = \"Composition_4_amount1\", \"Dosage_Amount_4\" = \"Composition_4_amount2\") %&gt;% \n  mutate(Dosage_Amount_4 = str_replace_all(Dosage_Amount_4, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_5\", \"\\\\(\") %&gt;% \n  rename(\"Composition_5\" = \"Composition_5_amount1\", \"Dosage_Amount_5\" = \"Composition_5_amount2\") %&gt;% \n  mutate(Dosage_Amount_5 = str_replace_all(Dosage_Amount_5, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_6\", \"\\\\(\") %&gt;% \n  rename(\"Composition_6\" = \"Composition_6_amount1\", \"Dosage_Amount_6\" = \"Composition_6_amount2\") %&gt;% \n  mutate(Dosage_Amount_6 = str_replace_all(Dosage_Amount_6, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_7\", \"\\\\(\") %&gt;% \n  rename(\"Composition_7\" = \"Composition_7_amount1\", \"Dosage_Amount_7\" = \"Composition_7_amount2\") %&gt;% \n  mutate(Dosage_Amount_7 = str_replace_all(Dosage_Amount_7, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_8\", \"\\\\(\") %&gt;% \n  rename(\"Composition_8\" = \"Composition_8_amount1\", \"Dosage_Amount_8\" = \"Composition_8_amount2\") %&gt;% \n  mutate(Dosage_Amount_8 = str_replace_all(Dosage_Amount_8, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_9\", \"\\\\(\") %&gt;% \n  rename(\"Composition_9\" = \"Composition_9_amount1\", \"Dosage_Amount_9\" = \"Composition_9_amount2\") %&gt;% \n  mutate(Dosage_Amount_9 = str_replace_all(Dosage_Amount_9, \"\\\\)\", \"\"))\n\n\n\n\nCode\n# Split dosage unit\n\nsplit_unit &lt;- function(df, unit_column) {\n  number &lt;- str_extract(unit_column, \"\\\\d+$\")  \n  new_column_name &lt;- paste0('Dosage_Amount_', number)\n  units_column_name &lt;- paste0('Units_', number)\n  \n  df &lt;- df %&gt;%\n    tidyr::separate(unit_column, into = c(new_column_name, units_column_name), sep = \"(?&lt;=\\\\d)(?=[%a-zA-Z])\", extra = \"merge\")\n  \n  \n  df[[new_column_name]] &lt;- as.numeric(df[[new_column_name]])\n  \n    df &lt;- df %&gt;%\n    mutate_all(~ifelse(. == \"None\", \"None\", .))\n  \n  return(df)\n}\n\ndrugs3 &lt;- split_unit(drugs2, \"Dosage_Amount_1\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_2\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_3\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_4\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_5\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_6\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_7\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_8\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_9\")\n\n\n\n\nCode\n# Remove Treatment of and Prevention of\n\nsplit_treatment &lt;- function(df, uses_column) {\n  df &lt;- df %&gt;%\n    mutate({{uses_column}} := str_replace_all({{uses_column}}, \"Treatment of|Prevention of\", \"\")) %&gt;%\n    mutate({{uses_column}} := str_trim({{uses_column}}))\n}\n\ndrugs4 &lt;- split_treatment(drugs3, Uses)\n\n\n\n\nCode\n# Separate into multiple uses and counts side effects\n\ndrugs5 &lt;- drugs4 %&gt;% \n  mutate(Treats = str_split(Uses, pattern=\"(?&lt;=\\\\s)(?=[A-Z])\"),\n         count_side_effects = str_count(Side_effects, pattern=\"(?&lt;=\\\\s)(?=[A-Z])\")+1) %&gt;% \n  unnest(Treats)"
  },
  {
    "objectID": "Project.html#analysis",
    "href": "Project.html#analysis",
    "title": "Medicine Mosaic",
    "section": "Analysis",
    "text": "Analysis\n\nChart 1\n\n\nCode\ngraph &lt;- drugs5 %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE) %&gt;% \n  filter(`Poor Review %` == 100) %&gt;% \n  select(Manufacturer, `Poor Review %`) %&gt;% \n  group_by(Manufacturer) %&gt;% \n  mutate(bad_review = n()) %&gt;% \n  distinct(Manufacturer, .keep_all = TRUE) %&gt;% \n  arrange(desc(bad_review))\n\ngraph &lt;- graph[c(1, 2, 3, 4, 5), ] \n\ngraph &lt;- graph  %&gt;% \n  mutate(Manufacturer = fct_reorder(Manufacturer, bad_review)) %&gt;% \n  select(-`Poor Review %`)\n\n\n\n\nCode\ngraph$highlight &lt;- ifelse(graph$Manufacturer == \"Intas Pharmaceuticals Ltd\", \"red\", \"darkgrey\")\n\nggplot(graph, aes(x=reorder(Manufacturer, bad_review), y=bad_review, fill=highlight)) +\n  geom_col() +\n  scale_fill_identity() +\n  coord_flip() +\n  labs(x = \"\", y=\"Number of Poor Products\", title=\"Manufacturers with the Most Poor Rated Products\", subtitle = \"Intas Pharmaceuticals Ltd may produce many least favored medications\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        plot.subtitle = element_text(size = 10), \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.x = element_text(vjust = -3, size = 10))\n\n\n\n\n\n\n\n\n\nAccording to the graph, it seems that Intas Pharmaceuticals Ltd may be producing the least popular medications in terms of customer satisfaction. This could potentially have a negative impact on their business, as customers are more likely to choose medications from other manufacturers. Consequently, Intas Pharmaceuticals Ltd could incur losses from producing drugs that may not sell well.\n\n\nChart 2\n\n\nCode\ngraph1 &lt;- drugs5 %&gt;% \n  filter(Units_1 == \"mg\", \n         Treats == \"Pain relief\") %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE) %&gt;% \n  select(Composition_1, Dosage_Amount_1, `Excellent Review %`) %&gt;% \n  mutate(Composition_1 = as_factor(Composition_1)) %&gt;% \n  filter(Composition_1 == \"Etoricoxib \") %&gt;% \n  group_by(Dosage_Amount_1) %&gt;% \n  mutate(\n    avg_review = median(`Excellent Review %`), \n    Dosage_Amount_1 = fct_reorder(as_factor(Dosage_Amount_1), avg_review))\n\ngraph1 &lt;- graph1[c(1, 3, 11), ] \n\n\n\n\nCode\nggplot(graph1, aes(x = Dosage_Amount_1, y = avg_review)) +\n  geom_col() +\n  labs(x=\"Dosage Amount in mg\", y = \"Median Percentage of Excellent Reviews\", title = \"More the Merrier?\", subtitle = \"Comparing dosage amounts for Etoricoxib, a pain relief drug\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10)) +\n  annotate(\"segment\", x = \"60\", xend = \"90\", y = 40, yend = 55, colour = \"red\", size=1, alpha=1, arrow=arrow())\n\n\n\n\n\n\n\n\n\nI wanted to investigate if higher dosages would yield better results. I calculated the median percentage of positive reviews for each available dosage of Etoricoxib, a pain relief medication. I chose Etoricoxib because it had a reasonable number of dosage options. Based on the graph, it appears that this is indeed the case, at least for Etoricoxib.\n\n\nChart 3\n\n\nCode\ngraph2 &lt;- drugs5 %&gt;% \n  mutate(\n    Treats = as_factor(Treats)) %&gt;% \n  group_by(Treats) %&gt;% \n  select(Treats, count_side_effects) %&gt;% \n  distinct(Treats, .keep_all = TRUE) %&gt;% \n  mutate(\n    Treats = str_to_lower(Treats))\n\ncategorize_treats &lt;- function(input) {\n  if (str_detect(input, \"cancer\")) {\n    return(\"Cancer Treatments\") }\n  if (str_detect(input, \"anxiety|depression|obsessive|bipolar|schizophrenia|mood|eating|traumatic\")) {\n    return(\"Mental Health\") }\n  if (str_detect(input, \"heart|cholesterol|angina|hypotension|hypertension|cardiac\")) {\n    return(\"Heart Related\") }\n  if (str_detect(input, \"bacteria|infection|viral|virus\")) {\n    return(\"Bacterial/Viral\") }\n  if (str_detect(input, \"pain|inflammation|irritation|osteoporosis|vomit|headache|nausea|migraine|burn\")) {\n    return(\"Antimetics/Pain\") }\n  if (str_detect(input, \"disease|disorder\")) {\n    return(\"Disease Related/Disorder Related\") }\n  else return(\"Other\")\n}\n\ngraph2$Treats &lt;- sapply(graph2$Treats, categorize_treats)\n\ngraph3 &lt;- graph2 %&gt;% \n  mutate(\n    avg_sides = mean(count_side_effects), \n    Treats = fct_reorder(Treats, avg_sides)) %&gt;% \n  distinct(Treats, .keep_all = TRUE)\n\n\n\n\nCode\nggplot(graph3, aes(reorder(x=Treats, avg_sides), y=avg_sides, fill=Treats)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(y=\"Average Number of Side Effects\", x = \"Medication Class\", title=\"What Medication Class Causes the Most Side Effects?\", subtitle=\"Mental health medications and cancer treatments have\\n the most by far\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        legend.position = \"none\", \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10)) +\n  geom_hline(yintercept = 6.6, linetype=\"dashed\", color='black')\n\n\n\n\n\n\n\n\n\nIt’s noteworthy that medications for mental health conditions like anxiety, depression, and OCD, as well as cancer treatments, tend to cause almost double the amount of side effects compared to other types of drugs. This is likely because cancer treatments are usually more intensive and demanding, and targeting brain chemicals is not an easy task.\n\n\nChart 4\n\n\nCode\ngraph4 &lt;- drugs5 %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE)\n\ngraph4$average_rating &lt;- (graph4$`Excellent Review %`* 3 + graph4$`Average Review %` * 2 + graph4$`Poor Review %`* 1) / 100\n\ngraph4$Composition_1 &lt;- replace_na(graph4$Composition_1, \"None\")\ngraph4$Composition_2 &lt;- replace_na(graph4$Composition_2, \"None\")\ngraph4$Composition_3 &lt;- replace_na(graph4$Composition_3, \"None\")\ngraph4$Composition_4 &lt;- replace_na(graph4$Composition_4, \"None\")\ngraph4$Composition_5 &lt;- replace_na(graph4$Composition_5, \"None\")\ngraph4$Composition_6 &lt;- replace_na(graph4$Composition_6, \"None\")\ngraph4$Composition_7 &lt;- replace_na(graph4$Composition_7, \"None\")\ngraph4$Composition_8 &lt;- replace_na(graph4$Composition_8, \"None\")\ngraph4$Composition_9 &lt;- replace_na(graph4$Composition_9, \"None\")\n\nfit &lt;- lm(average_rating ~ Composition_Count, data = graph4)\nnewdata &lt;- data.frame(Composition_Count = range(graph4$Composition_Count))\nnewdata$average_rating &lt;- predict(fit, newdata)\n\n\n\n\nCode\nchart &lt;- ggplot(graph4, aes(x=Composition_Count, y=average_rating, text = paste(\"Medication:\", `Medicine Name`, \"\\nUse:\", Treats, \"\\nChemicals:\", Composition_1, Composition_2, Composition_3, Composition_4, Composition_5, Composition_6, Composition_7, Composition_8, Composition_9))) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Number of Chemical Compositions\", y = \"Average Rating\", title = \"More Chemicals the Better\") +\n  scale_x_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9)) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        legend.position = \"none\", \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10))\n\nchart &lt;- ggplotly(chart)\nchart &lt;- chart %&gt;% add_lines(x = ~Composition_Count, y = ~average_rating, data = newdata)\n\nchart\n\n\n\n\n\n\nI conducted a study to investigate whether including more chemical compositions in a medication leads to higher customer satisfaction. I analyzed the average rating for each medication based on three review categories: excellent, average, and poor. To calculate the average rating, I multiplied the number of excellent reviews by 3, average reviews by 2, and poor reviews by 1. Then, I added these three numbers together and divided the sum by 100. After reviewing the data, it appears that, in general, medications with more chemical compositions tend to have slightly higher levels of customer satisfaction. One potential explanation for the increased customer satisfaction is that the additional chemicals may serve to stabilize the others or prevent them from producing adverse effects. However, it’s important to note that there are only a few medications with more than 5 chemicals compared to those with less than 5, which could be influencing the data."
  },
  {
    "objectID": "IBCspring.html",
    "href": "IBCspring.html",
    "title": "IBC Analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(directlabels)\nlibrary(ggrepel)\nlibrary(gapminder)\nlibrary(ggthemes)\nlibrary(scales)\nlibrary(plotly)\nlibrary(pander)\n\ndata &lt;- read_csv(\"https://raw.githubusercontent.com/DerekDoelling/DerekDoelling.github.io/main/IBC%20Historical%20Data.csv\")\nCode\nper_dec &lt;- function(x) {\n  numeric_values &lt;- as.numeric(gsub(\"%\", \"\", x))\n  \n  numeric_values / 100\n}\nCode\nibc &lt;- data %&gt;% \n  mutate(\n    `Gross Margin` = per_dec(data$`Gross Margin`), \n    `Net Income Margin` = per_dec(data$`Net Income Margin`))\n\nibc &lt;- ibc[-c(1, 5, 7:10, 12:21), ]\n\nibc &lt;- rename(ibc, net_income = \"Net Income\")\n\nibc_semester &lt;- ibc %&gt;% \n  group_by(Smstr)\n\nibc_semester$Smstr &lt;- factor(ibc_semester$Smstr, levels = c(\"Fall\", \"Winter\", \"Spring\"))\n\nibc_category &lt;- ibc %&gt;% \n  group_by(Category)\n\nibc_year &lt;- ibc %&gt;% \n  group_by(Year)"
  },
  {
    "objectID": "IBCspring.html#background",
    "href": "IBCspring.html#background",
    "title": "IBC Analysis",
    "section": "Background",
    "text": "Background\nAt Brigham Young University-Idaho, IBC is a program where students run their own businesses on campus with a loan from the university. The professor in charge of IBC has requested an analysis of data from the past couple of years. Specifically, he wants to know which businesses perform the best, whether the semester influences business success, and if female students have a positive impact on the businesses.\nIn the context of this statistical examination, we have set the threshold for statistical significance at an alpha level of 0.1. Upon conducting individual ANOVA analyses, we observe that the residuals versus fitted values plot demonstrates a consistent variance across each vertical cluster of data points. This is indicative of the homoscedasticity assumption being reasonably satisfied.\nFurthermore, the Quantile-Quantile (Q-Q) Plot exhibits a reasonable degree of normality, although some deviations are noted at the extremities. This warrants a degree of caution in interpreting the results.\nFor illustrative purposes, we will provide one such assumption plot as a representative example. However, it is important to note that the pattern observed is generally consistent across all ANOVA analyses conducted."
  },
  {
    "objectID": "IBCspring.html#individual-analysis",
    "href": "IBCspring.html#individual-analysis",
    "title": "IBC Analysis",
    "section": "Individual Analysis",
    "text": "Individual Analysis\n\nSemester vs. Revenue\n\n\nCode\nsemester_aov &lt;- aov(Revenue ~ Smstr, ibc_semester)\nsummary(semester_aov)\n\n\n             Df    Sum Sq  Mean Sq F value Pr(&gt;F)\nSmstr         2 6.578e+07 32890323   1.184  0.308\nResiduals   186 5.167e+09 27779127               \n\n\nCode\npar(mfrow = c(1,2))\nplot(semester_aov, which = 1:2)\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart1 &lt;- ggplot(ibc_semester, aes(x=Smstr, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Revenue\", title=\"Fall Semester Experiences the Highest Median of Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart1)\n\n\n\n\n\n\nWhile the Fall semester may exhibit a higher median revenue, the Winter semester demonstrates a greater variability in revenue. However, with a p-value of 0.308, the differences of in mean revenue between the semesters are not statistically significant.\n\n\nSemester vs. Net Income\n\n\nCode\nchart2 &lt;- ggplot(ibc_semester, aes(x=Smstr, y=net_income)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Net Income\", title= \"Spring Semester's Median Net Income is in the Negatives\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart2)\n\n\n\n\n\n\nThe median net income for the Spring semester is actually negative, while the Fall semester boasts a median net income of $408. However, the p-value of 0.148 obtained from the ANOVA test suggests that the differences in mean revenue across semesters are not statistically significant.\n\n\nCategory vs. Revenue\n\n\nCode\nchart3 &lt;- ggplot(ibc_category, aes(x=Category, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Category\", y=\"Revenue\", title=\"Food/Drink Businesses Earn More Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart3)\n\n\n\n\n\n\nStatistical analysis indicates that businesses in the Food/Drink sector generate a higher average revenue compared to other types of businesses with Apparel in second place.\n\n\nCategory vs. Net Income\n\n\nCode\nchart4 &lt;- ggplot(ibc_category, aes(x=Category, y=net_income)) +\n  geom_boxplot() +\n  labs(x=\"Category\", y=\"Net Income\", title=\"Apparel Businesses Have the Highest Median Net INcome\" ) +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart4)\n\n\n\n\n\n\nInterestingly, the differences in mean net income across various business types are not statistically significant. However, it is noteworthy that businesses in the Apparel sector appear to have a higher net income compared to others.\n\n\nYear vs. Revenue\n\n\nCode\nchart5 &lt;- ggplot(ibc_year, aes(x=Year, y=Revenue, group=Year)) +\n  geom_boxplot() +\n  labs(x=\"Year\", y=\"Revenue\", title = \"Median Revenue Has Decreased Ever Since 2017\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart5)\n\n\n\n\n\n\nUnsurprisingly, the period from 2020 to 2022 recorded the lowest revenue across an eight-year span, a downturn largely attributable to the global pandemic. Notably, there appears to be a significant decline in the median revenue following the year 2016.\n\n\nCost of Goods Sold vs. Net Income\n\n\nCode\ncogs &lt;- ibc %&gt;% \n  drop_na(COGS, net_income)\n\ncogs$`Company Name`[is.na(cogs$`Company Name`)] &lt;- \"Unknown\"\n\nibc_lm &lt;- lm(net_income ~ COGS, data=cogs)\nsummary(ibc_lm)\n\n\n\nCall:\nlm(formula = net_income ~ COGS, data = cogs)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8035.9  -931.5   -50.3   734.9  6130.4 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -407.29678  209.78081  -1.942   0.0537 .  \nCOGS           0.24913    0.05027   4.956 1.62e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1727 on 185 degrees of freedom\nMultiple R-squared:  0.1172,    Adjusted R-squared:  0.1124 \nF-statistic: 24.56 on 1 and 185 DF,  p-value: 1.619e-06\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm,which=1:2)\nplot(ibc_lm$residuals)\n\n\n\n\n\n\n\n\n\nThe assumption plot for Residuals vs Fitted raises some concerns as the data points are predominantly clustered towards the far left. Additionally, the Quantile-Quantile (Q-Q) Plot exhibits deviations at both ends, indicating potential departures from normality.\n\n\nCode\nchart6 &lt;- ggplot(cogs, aes(x = COGS, y = net_income)) +\n  geom_point()+\n  geom_smooth(method = lm, formula = y~x, se = FALSE) +\n  labs(x= \"Cost of Goods Sold\", y = \"Net Income\", title = \"More Input = More Output\") +\n  scale_y_continuous(labels = dollar_format()) +\n  scale_x_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10)) +\n  annotate('text', x = 15000, y = 8000, label = 'Wing Shack', size = 3.5, color = 'red') +\n  annotate('text', x = 5000, y = -8000, label = '43 North', size = 3.5, color = 'red') \n\nchart6\n\n\n\n\n\n\n\n\n\nAccording to the linear model, there appears to be a positive correlation between the investment in goods and the subsequent returns. Notably, ‘43 North’ and ‘Wing Shack’ emerge as outliers in this analysis. As most companies tend to maintain low Cost of Goods Sold (COGS), our dataset is somewhat limited in terms of businesses with high COGS. However, within the scope of the available data, we can discern a significant relationship between the cost of goods sold and net income.\n\n\nCode\npeople &lt;- read_csv(\"https://raw.githubusercontent.com/DerekDoelling/DerekDoelling.github.io/main/registration_cleaned_sp22_f23_joined_with_business_name%20(2).csv\")\n\nbusinesses &lt;- read_csv(\"https://raw.githubusercontent.com/DerekDoelling/DerekDoelling.github.io/main/IBC%20Historical%20Data.csv\")\n\npeople &lt;- people %&gt;% \n  drop_na(\"Business me\")\n\nbusiness &lt;- businesses %&gt;% \n  drop_na(\"Company Name\")\n\ndf &lt;- left_join(people, business, by = c(\"Business me\" = \"Company Name\"))\n\ngender &lt;- df %&gt;%\n  group_by(`Business me`) %&gt;%\n  mutate(\n    females = sum(`Gender` == 'Female', na.rm = TRUE), \n    males = sum(`Gender` == 'Male', na.rm = TRUE)\n  )\n\ndfdf &lt;- gender %&gt;%\n  group_by(females) %&gt;%\n  mutate(females = as.factor(females))\n\ndfdf1 &lt;- gender %&gt;%\n  group_by(males) %&gt;%\n  mutate(males = as.factor(males))\n\ndf1 &lt;- gender %&gt;%\n  group_by(females) %&gt;%\n  summarise(\n    med_net_income = median(`Net Income`, na.rm = TRUE), \n    avg_net_income = mean(`Net Income`, na.rm = TRUE), \n    sum_net_income = sum(`Net Income`, na.rm = TRUE)\n  )\n\ndf2 &lt;- gender %&gt;%\n  group_by(males) %&gt;%\n  summarise(\n    med_net_income = median(`Net Income`, na.rm = TRUE), \n    avg_net_income = mean(`Net Income`, na.rm = TRUE), \n    sum_net_income = sum(`Net Income`, na.rm = TRUE)\n  )\n\nbusinesses$Smstr &lt;- factor(businesses$Smstr, levels = c(\"Fall\", \"Winter\", \"Spring\"))\n\nfood &lt;- businesses %&gt;% \n  filter(Category == \"Food/Drink\") %&gt;% \n  group_by(Smstr)"
  },
  {
    "objectID": "IBCspring.html#semester-vs.-revenuesemester-vs.-net-income-for-fooddrink-businesses",
    "href": "IBCspring.html#semester-vs.-revenuesemester-vs.-net-income-for-fooddrink-businesses",
    "title": "IBC Analysis",
    "section": "Semester vs. Revenue/Semester vs. Net Income for Food/Drink Businesses",
    "text": "Semester vs. Revenue/Semester vs. Net Income for Food/Drink Businesses\n\n\nCode\nchart8 &lt;- ggplot(food, aes(x=Smstr, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Revenue\", title=\"Winter Semester Earns the Highest Median Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart8)\n\n\n\n\n\n\n\n\nCode\nchart7 &lt;- ggplot(food, aes(x=Smstr, y=`Net Income`)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Net Income\", title=\"Fall Semester Earns a Positive Median Net Income\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart7)\n\n\n\n\n\n\nIntriguingly, the Winter semester records the highest median revenue, while the Spring semester significantly outperforms others in terms of median net income. Despite the higher sales in Winter, the Fall semester may yield greater profits, potentially due to variations in student population. A more comprehensive analysis could be conducted if data on student population for each semester were available. This would allow for a proportional normalization of the data, thereby providing a more accurate comparison across semesters."
  },
  {
    "objectID": "IBCspring.html#females-in-business",
    "href": "IBCspring.html#females-in-business",
    "title": "IBC Analysis",
    "section": "Females in Business",
    "text": "Females in Business\nFemale presence in companies\n\n\nCode\npander(summary(gender$females))\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n4\n5\n7\n6.598\n8\n9\n\n\n\n\n\nMale presence in companies\n\n\nCode\npander(summary(gender$males))\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n7\n8\n9\n9.256\n10\n12\n\n\n\n\n\n\n\nCode\ngender$`Business me`[is.na(gender$`Business me`)] &lt;- \"Unknown\"\n\ng &lt;- gender %&gt;% \n  group_by(`Business me`) %&gt;% \n  mutate(\n    total = females + males, \n    prop_female = females / total) %&gt;% \n  distinct(`Business me`, .keep_all = TRUE) %&gt;% \n  mutate(\n    median_rev = median(Revenue), \n    median_net = median(`Net Income`))\n\n\n\nProportion of Females vs. Median Revenue\n\n\nCode\nibc_lm2 &lt;- lm(median_rev ~ prop_female, data=g)\nsummary(ibc_lm2)\n\n\n\nCall:\nlm(formula = median_rev ~ prop_female, data = g)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -5917  -3923  -1340   2984  10088 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)     5700       4473   1.274    0.215\nprop_female     8897      10766   0.826    0.417\n\nResidual standard error: 4819 on 23 degrees of freedom\n  (1 observation deleted due to missingness)\nMultiple R-squared:  0.02883,   Adjusted R-squared:  -0.01339 \nF-statistic: 0.6829 on 1 and 23 DF,  p-value: 0.4171\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm2,which=1:2)\nplot(ibc_lm2$residuals)\n\n\n\n\n\n\n\n\n\nThe criteria for linear regression appear to be satisfactorily fulfilled. The Residuals vs Fitted plot exhibits a seemingly random distribution, indicating homoscedasticity. The Q-Q Plot, while demonstrating a slight right skew, largely adheres to the normality assumption. Furthermore, the Residuals vs Order plot suggests that the residuals are independent, reinforcing the validity of our model.\n\n\nCode\nchart9 &lt;- ggplot(g, aes(x=prop_female, y=median_rev)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Proportion of Females\", y = \"Median Revenue\", title=\"Females Bring In More Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -5, size = 10))\n\nchart9\n\n\n\n\n\n\n\n\n\nThe graph illustrates a linear escalation in revenue corresponding to an increase in the proportion of females. Nonetheless, the correlation between the proportion of females and median revenue does not appear to be significantly meaningful\n\n\nProportion of Females vs. Median Net Income\n\n\nCode\nibc_lm3 &lt;- lm(median_net ~ prop_female, data=g)\nsummary(ibc_lm3)\n\n\n\nCall:\nlm(formula = median_net ~ prop_female, data = g)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2938.6 -1322.9  -513.8   694.1  4798.4 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)   -307.2     1784.4  -0.172    0.865\nprop_female   3870.0     4295.3   0.901    0.377\n\nResidual standard error: 1922 on 23 degrees of freedom\n  (1 observation deleted due to missingness)\nMultiple R-squared:  0.03409,   Adjusted R-squared:  -0.007905 \nF-statistic: 0.8118 on 1 and 23 DF,  p-value: 0.3769\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm3,which=1:2)\nplot(ibc_lm3$residuals)\n\n\n\n\n\n\n\n\n\nThe sole area of concern is that the Q-Q Plot exhibits a pronounced right skew.\n\n\nCode\nchart10 &lt;- ggplot(g, aes(x=prop_female, y=median_net)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Proportion of Females\", y = \"Median Net Income\", title=\"Women Contribute to a Higher Net Income\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -5, size = 10))\n\nchart10\n\n\n\n\n\n\n\n\n\nOnce again, the graph suggests that an increase in the proportion of females aligns with a rise in median net income. However, the statistical significance of this relationship appears to be negligible."
  },
  {
    "objectID": "rnaseq.html#findings",
    "href": "rnaseq.html#findings",
    "title": "RNA Sequence Analysis",
    "section": "Findings",
    "text": "Findings\nIn our research, we discovered that SMAD4, ENG, and ACVRL1 are the genes that exhibit the most variation in their number of transcriptions between healthy patients and patients with HHT. Further investigation revealed that these three genes are part of a single pathway known as the transforming growth factor beta (TGF-β) signaling pathway. Initially thought to promote cell growth like other growth factors, it was later understood that the transforming growth factor serves as a dual-purpose regulator that can either impede or promote cell proliferation (growth and division).\n\n\nSMAD4\nThe human SMAD4 (MADH4) plays a key role in transmitting signals from the TGF-beta group of cytokines. When components of the Smad signaling pathway are mutated or deleted, certain human tumors can resist the growth-suppressing signals of TGF-beta or similar substances.\n\n\nENG\nENG, also known as endoglin, is expressed in blood vessels and plays key roles in cell proliferation, migration, and capillary formation.\n\n\nACVRL1\nACVRL1 is responsible for producing a type I cell-surface receptor that interacts with the TGF-beta superfamily of ligands. Through the signaling receptor ACVRL1, ENG can promote the TGFβ family signaling."
  },
  {
    "objectID": "rnaseq.html#conclusion",
    "href": "rnaseq.html#conclusion",
    "title": "RNA Sequence Analysis",
    "section": "Conclusion",
    "text": "Conclusion\nAccording to the analysis of this RNA sequence, it is evident that alterations in the transcription levels of SMAD4, endoglin, and ACVRL1 may lead to abnormalities in blood vessel formation in the human body, increasing the susceptibility to hemorrhag since these three genes are primarily involved in cell proliferation, especially in endothelial cells.\n\nReferences\nRossi, Elisa, et al. “Endoglin as an Adhesion Molecule in Mature and Progenitor Endothelial Cells: A Function beyond TGF-β.” Frontiers, Frontiers, 14 Jan. 2019, www.frontiersin.org/articles/10.3389/fmed.2019.00010/full.\nGariballa, N., Badawi, S., & Ali, B. R. (2024). Endoglin mutants retained in the endoplasmic reticulum exacerbate loss of function in hereditary hemorrhagic telangiectasia type 1 (HHT1) by exerting dominant negative effects on the wild type allele. Traffic, 25(1). https://doi.org/10.1111/tra.12928 Jones, J. B., & Kern, S. E. (2000). Functional mapping of the MH1 DNA-binding domain of DPC4/SMAD4. Nucleic acids research, 28(12), 2363–2368. https://doi.org/10.1093/nar/28.12.2363\nde Caestecker, M. P., Hemmati, P., Larisch-Bloch, S., Ajmera, R., Roberts, A. B., & Lechleider, R. J. (1997). Characterization of functional domains within Smad4/DPC4. The Journal of biological chemistry, 272(21), 13690–13696. https://doi.org/10.1074/jbc.272.21.13690\nWan, R., Feng, J., & Tang, L. (2021). Consequences of Mutations and Abnormal Expression of SMAD4 in Tumors and T Cells. OncoTargets and therapy, 14, 2531–2540. https://doi.org/10.2147/OTT.S297855\nKuang, C., & Chen, Y. (2004). Tumor-derived C-terminal mutations of Smad4 with decreased DNA binding activity and enhanced intramolecular interaction. Oncogene, 23(5), 1021–1029. https://doi.org/10.1038/sj.onc.1207219\nShovlin, C. L., Hughes, J. M. B., Scott, J., Seidman, C. E., & Seidman, J. G. (1997). Characterization of endoglin and identification of novel mutations in Hereditary hemorrhagic telangiectasia. The American Journal of Human Genetics, 61(1), 68–79. https://doi.org/10.1086/513906\nZhao, M., Mishra, L., Deng, C.X. (2018). The role of TGF-β/SMAD4 signaling in cancer. International Journal of Biological Sciences, 14(2), 111-123. https://doi.org/10.7150/ijbs.23230.\nErrasti Díaz, S., Peñalva, M., Recio-Poveda, L., Vilches, S., Casado-Vela, J., Pérez Pérez, J., Botella, L. M., Albiñana, V., & Cuesta, A. M. (2022). A Novel Splicing Mutation in the ACVRL1/ALK1 Gene as a Cause of HHT2. Journal of clinical medicine, 11(11), 3053. https://doi.org/10.3390/jcm11113053\nKritharis, Athena, Hanny Al-Samkari, and David J. Kuter. “Hereditary hemorrhagic telangiectasia: diagnosis and management from the hematologist’s perspective.” Haematologica 103.9 (2018): 1433.\nChaudhury, A., & Howe, P. H. (2009). The tale of transforming growth factor-beta (TGFbeta) signaling: a soigné enigma. IUBMB life, 61(10), 929–939. https://doi.org/10.1002/iub.239\nChin, D., Boyle, G. M., Parsons, P. G., & Coman, W. B. (2004). What is transforming growth factor-beta (TGF-beta)?. British journal of plastic surgery, 57(3), 215–221. https://doi.org/10.1016/j.bjps.2003.12.012"
  },
  {
    "objectID": "site_libs/d3v3-3.5.3/CONTRIBUTING.html",
    "href": "site_libs/d3v3-3.5.3/CONTRIBUTING.html",
    "title": "Contributing",
    "section": "",
    "text": "If you’re looking for ways to contribute, please peruse open issues. The icebox is a good place to find ideas that are not currently in development. If you already have an idea, please check past issues to see whether your idea or a similar one was previously discussed.\nBefore submitting a pull request, consider implementing a live example first, say using bl.ocks.org. Real-world use cases go a long way to demonstrating the usefulness of a proposed feature. The more complex a feature’s implementation, the more usefulness it should provide. Share your demo using the #d3js tag on Twitter or by sending it to the d3-js Google group.\nIf your proposed feature does not involve changing core functionality, consider submitting it instead as a D3 plugin. New core features should be for general use, whereas plugins are suitable for more specialized use cases. When in doubt, it’s easier to start with a plugin before “graduating” to core.\nTo contribute new documentation or add examples to the gallery, just edit the Wiki!\n\n\n\nClick the “Fork” button to create your personal fork of the D3 repository.\nAfter cloning your fork of the D3 repository in the terminal, run npm install to install D3’s dependencies.\nCreate a new branch for your new feature. For example: git checkout -b my-awesome-feature. A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature.\nThe d3.js and d3.min.js files are built from source files in the src directory. Do not edit d3.js directly. Instead, edit the source files, and then run make to build the generated files.\nUse make test to run tests and verify your changes. If you are adding a new feature, you should add new tests! If you are changing existing functionality, make sure the existing tests run, or update them as appropriate.\nSign D3’s Individual Contributor License Agreement. Unless you are submitting a trivial patch (such as fixing a typo), this form is needed to verify that you are able to contribute.\nSubmit your pull request, and good luck!"
  },
  {
    "objectID": "site_libs/d3v3-3.5.3/CONTRIBUTING.html#how-to-submit-a-pull-request",
    "href": "site_libs/d3v3-3.5.3/CONTRIBUTING.html#how-to-submit-a-pull-request",
    "title": "Contributing",
    "section": "",
    "text": "Click the “Fork” button to create your personal fork of the D3 repository.\nAfter cloning your fork of the D3 repository in the terminal, run npm install to install D3’s dependencies.\nCreate a new branch for your new feature. For example: git checkout -b my-awesome-feature. A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature.\nThe d3.js and d3.min.js files are built from source files in the src directory. Do not edit d3.js directly. Instead, edit the source files, and then run make to build the generated files.\nUse make test to run tests and verify your changes. If you are adding a new feature, you should add new tests! If you are changing existing functionality, make sure the existing tests run, or update them as appropriate.\nSign D3’s Individual Contributor License Agreement. Unless you are submitting a trivial patch (such as fixing a typo), this form is needed to verify that you are able to contribute.\nSubmit your pull request, and good luck!"
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html",
    "href": "Cleansing_Exploration/rnaseq.html",
    "title": "RNA Sequence Analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(rhdf5)\nlibrary(tximport) \nlibrary(ensembldb)\nlibrary(biomaRt)\nlibrary(edgeR)\nlibrary(matrixStats)\nlibrary(cowplot)\nlibrary(DT)\nlibrary(gt)\nlibrary(plotly)\nlibrary(limma)\nlibrary(IsoformSwitchAnalyzeR)\nlibrary(RColorBrewer)\nlibrary(gplots)\nlibrary(d3heatmap)\nlibrary(GSEABase)\nlibrary(Biobase) \nlibrary(gprofiler2) \nlibrary(clusterProfiler) \nlibrary(msigdbr) \nlibrary(enrichplot)\nlibrary(EnsDb.Hsapiens.v86)\nlibrary(GSVA)\nlibrary(ggforce)",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#introduction",
    "href": "Cleansing_Exploration/rnaseq.html#introduction",
    "title": "RNA Sequence Analysis",
    "section": "Introduction",
    "text": "Introduction\nWe will be analyzing Hereditary Hemorrhagic Telangiectasia Syndrome or HHT RNA-seq data. HHT patients develop arteriovenous malformations (AVMs) known as telangiectasia in the nose, mouth, and gastrointestinal tract. The telangiectasia are comprised of fragile vessels that are susceptible to rupture and hemorrhage, which can cause nosebleeds or more serious symptoms depending on the location. It is prevalent in one case per 5,000–8,000 individuals \n We want to find which specific genes contribute to the development of HHT and what roles do they play? The following links are to the research paper and the dataset used in this analysis.\nThis research project aims to improve the studying of rare diseases, such as hereditary hemorrhagic telangiectasia (HHT), using cells derived from patients. The researchers focused on understanding how cells respond to specific genetic mutations called premature termination codons (PTCs).\nThe study involved obtaining blood outgrowth endothelial cells (BOECs) from two healthy patients (control group) and two pre-genotyped HHT patients (experimental group).\nRNA was extracted from multiple samples of BOECs from both healthy and HHT patients. These cells were then grown under two different conditions: with and without a specific growth factor. In total, there were two control/healthy groups and six experimental/disease groups.\n\nLoad in the Data\n\n\nCode\ntargets &lt;- read_csv(\"https://raw.githubusercontent.com/DerekDoelling/DerekDoelling.github.io/main/studydesign.csv\")\n\ncounts &lt;- read_csv(\"https://raw.githubusercontent.com/DerekDoelling/DerekDoelling.github.io/main/Data.csv\")\n\nTx &lt;- transcripts(EnsDb.Hsapiens.v86, columns=c(\"gene_id\", \"gene_name\"))\n\nTx &lt;- as_tibble(Tx)\n\nTx &lt;- dplyr::rename(Tx, target_id = gene_id)\n\nTx &lt;- dplyr::select(Tx, \"target_id\", \"gene_name\")\n\ndf &lt;- left_join(counts, Tx, by = c(\"Ensembl Transcript ID\" = \"target_id\"))\n\ndistinct &lt;- distinct(df)\n\ndata &lt;- distinct %&gt;% \n  group_by(gene_name)\n\ndata &lt;- data %&gt;% \n  mutate_all(funs(replace(., .==\".\", 0)))\n\ndata$`hht 1.1` &lt;- as.numeric(data$`hht 1.1`)\ndata$`hht 1.2` &lt;- as.numeric(data$`hht 1.2`)\ndata$`hht 2.1` &lt;- as.numeric(data$`hht 2.1`)\ndata$`hht 2.2` &lt;- as.numeric(data$`hht 2.2`)\ndata$`hht 3.1` &lt;- as.numeric(data$`hht 3.1`)\ndata$`hht 3.2` &lt;- as.numeric(data$`hht 3.2`)",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#data-wrangling",
    "href": "Cleansing_Exploration/rnaseq.html#data-wrangling",
    "title": "RNA Sequence Analysis",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\n\nCode\na &lt;- data %&gt;% \n  select(-`Ensembl Transcript ID`)\n\nb &lt;- a %&gt;%\n  group_by(gene_name) %&gt;%\n  summarise_if(is.numeric, sum, na.rm = TRUE)\n\nc &lt;- as.data.frame(b)\n\nrownames(c) &lt;- c$gene_name\n\nmyDGEList &lt;- DGEList(c)\n\nsampleLabels &lt;- targets$sample\n\nlog2.cpm &lt;- cpm(myDGEList, log=TRUE)\n\nlog2.cpm.df &lt;- as_tibble(log2.cpm, rownames = \"geneID\")\ncolnames(log2.cpm.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.df.pivot &lt;- pivot_longer(log2.cpm.df, \n                                  cols = -1,\n                                  names_to = \"samples\",\n                                  values_to = \"expression\")\n\np1 &lt;- ggplot(log2.cpm.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"unfiltered, non-normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\n\ncpm &lt;- cpm(myDGEList)\nkeepers &lt;- rowSums(cpm&gt;1)&gt;=2\nmyDGEList.filtered &lt;- myDGEList[keepers,]\n\nlog2.cpm.filtered &lt;- cpm(myDGEList.filtered, log=TRUE)\nlog2.cpm.filtered.df &lt;- as_tibble(log2.cpm.filtered, rownames = \"geneID\")\ncolnames(log2.cpm.filtered.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.filtered.df.pivot &lt;- pivot_longer(log2.cpm.filtered.df,\n                                           cols = -1,\n                                           names_to = \"samples\",\n                                           values_to = \"expression\") \n\np2 &lt;- ggplot(log2.cpm.filtered.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"filtered, non-normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\n\nmyDGEList.filtered.norm &lt;- calcNormFactors(myDGEList.filtered, method = \"TMM\")\nlog2.cpm.filtered.norm &lt;- cpm(myDGEList.filtered.norm, log=TRUE)\nlog2.cpm.filtered.norm.df &lt;- as_tibble(log2.cpm.filtered.norm, rownames = \"geneID\")\ncolnames(log2.cpm.filtered.norm.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.filtered.norm.df.pivot &lt;- pivot_longer(log2.cpm.filtered.norm.df,\n                                                cols = -1,\n                                                names_to = \"samples\",\n                                                values_to = \"expression\")\n\np3 &lt;- ggplot(log2.cpm.filtered.norm.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"filtered, TMM normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\nplot_grid(p1, p2, p3, labels = c('A', 'B', 'C'), label_size = 12)",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#data-exploration",
    "href": "Cleansing_Exploration/rnaseq.html#data-exploration",
    "title": "RNA Sequence Analysis",
    "section": "Data Exploration",
    "text": "Data Exploration\n\n\nCode\ngroup &lt;- targets$group\ngroup &lt;- factor(group)\n\npca.res &lt;- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)\npc.var &lt;- pca.res$sdev^2\npc.per &lt;- round(pc.var/sum(pc.var)*100, 1) \npca.res.df &lt;- as_tibble(pca.res$x)\npca.plot &lt;- ggplot(pca.res.df) +\n  aes(x=PC1, y=PC2, label=sampleLabels, color = group) +\n  geom_point(size=4) +\n  stat_ellipse() +\n  xlab(paste0(\"PC1 (\",pc.per[1],\"%\",\")\")) + \n  ylab(paste0(\"PC2 (\",pc.per[2],\"%\",\")\")) +\n  labs(title=\"PCA plot\") +\n  coord_fixed() +\n  theme_bw()\n\nggplotly(pca.plot)\n\n\n\n\n\n\nCode\nlog2.cpm.filtered.norm.df &lt;- log2.cpm.filtered.norm.df %&gt;% \n  rename(hht1_1 = `hht 1 .1`, hht1_2 = `hht 1.2`, hht2_1 = `hht 2.1`, hht2_2 = `hht 2.2`, hht3_1 = `hht 3.1`, hht3_2 = `hht 3.2`, control1 = `control 1`, control2 = `control 2`)\n\nmydata.df &lt;- mutate(log2.cpm.filtered.norm.df,\n                    healthy.AVG = (control1 + control2)/2, \n                    disease.AVG = (hht1_1 + hht1_2 + hht2_1 + hht2_2 + hht3_1 + hht3_2)/6,\n                    LogFC = (disease.AVG - healthy.AVG)) %&gt;% \n  mutate_if(is.numeric, round, 2)\n\nmydata.sort &lt;- mydata.df %&gt;%\n  dplyr::arrange(desc(LogFC)) %&gt;% \n  dplyr::select(geneID, LogFC)\n\ndatatable(mydata.df[,c(1,10:12)], \n          extensions = c('KeyTable', \"FixedHeader\"), \n          filter = 'top',\n          options = list(keys = TRUE, \n                        searchHighlight = TRUE, \n                        pageLength = 10, \n                         dom = \"Blfrtip\", \n                         buttons = c(\"copy\", \"csv\", \"excel\"),\n                         lengthMenu = c(\"10\", \"25\", \"50\", \"100\")))\n\n\n\n\n\n\nCode\ndistance &lt;- dist(t(log2.cpm.filtered.norm), method = \"maximum\")\nclusters &lt;- hclust(distance, method = \"single\")\nplot(clusters, labels=sampleLabels)\n\n\n\n\n\n\n\n\n\nCode\npca.res &lt;- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)\n#ls(pca.res)\n#summary(pca.res) \n#pca.res$rotation \n#pca.res$x\nscreeplot(pca.res)\ntext(x=0.7, y=1700, labels = \"47.5%\", cex=0.7)\ntext(x=1.9, y=900, labels = \"21.2%\", cex=0.7)\ntext(x=3.1, y=750, labels = \"17.9%\", cex=0.7)\ntext(x=4.3, y=350, labels = \"7.4%\", cex=0.7)\ntext(x=5.6, y=130, labels = \"2.1%\", cex=0.7)\ntext(x=6.8, y=130, labels = \"2.0%\", cex=0.7)\ntext(x=7.9, y=130, labels = \"1.9%\", cex=0.7)\ntext(x=9.2, y=70, labels = \"0.0%\", cex=0.7)\n\n\n\n\n\n\n\n\n\nCode\npc.var&lt;-pca.res$sdev^2 \npc.per&lt;-round(pc.var/sum(pc.var)*100, 1) \n#pc.per\n\npca.res.df &lt;- as_tibble(pca.res$x)\nggplot(pca.res.df) +\n  aes(x=PC2, y=PC3, label=sampleLabels) +\n  geom_point(size=4) +\n  geom_label() +\n  stat_ellipse() +\n  xlab(paste0(\"PC2 (\",pc.per[1],\"%\",\")\")) + \n  ylab(paste0(\"PC3 (\",pc.per[2],\"%\",\")\")) +\n  labs(title=\"PCA plot\") +\n  coord_fixed() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\npca.res.df &lt;- pca.res$x[,1:4] %&gt;%\n  as_tibble() %&gt;%\n  add_column(sample = sampleLabels,\n             group = group)\n\npca.pivot &lt;- pivot_longer(pca.res.df, \n                          cols = PC1:PC4, \n                          names_to = \"PC\", \n                          values_to = \"loadings\")\nggplot(pca.pivot) +\n  aes(x=sample, y=loadings, fill=group) + \n  geom_bar(stat=\"identity\") +\n  facet_wrap(~PC) +\n  labs(title=\"PCA 'small multiples' plot\") +\n  theme_bw() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\nCode\nmydata.df &lt;- mutate(log2.cpm.filtered.norm.df,\n                    healthy.AVG = (control1 + control2)/2, \n                    disease.AVG = (hht1_1 + hht1_2 + hht2_1 + hht2_2 + hht3_1 + hht3_2)/6,\n                    LogFC = (disease.AVG - healthy.AVG)) %&gt;% \n  mutate_if(is.numeric, round, 2)\n\n#mydata.sort &lt;- mydata.df %&gt;%\n  #dplyr::arrange(desc(LogFC)) %&gt;% \n  #dplyr::select(geneID, LogFC)\n\n#gt(mydata.sort)\n\nmydata.filter &lt;- mydata.df %&gt;% \n  dplyr::filter(geneID == \"SMAD4\"|geneID == \"ENG\"|geneID == \"ACVRL1\"|geneID == \"SMOC2\") %&gt;% \n  dplyr::select(geneID, healthy.AVG, disease.AVG, LogFC) %&gt;% \n  dplyr::arrange((LogFC))\n\n#gt(mydata.filter)\n\n#myplot &lt;- ggplot(mydata.df) + \n  #aes(x=healthy.AVG, y=disease.AVG) +\n  #geom_point(shape=16, size=1) +\n  #ggtitle(\"disease vs. healthy\") +\n  #theme_bw()\n\n#ggplotly(myplot)\n\nmyplot &lt;- ggplot(mydata.df) +\n  aes(x=healthy.AVG, y=disease.AVG, \n     text = paste(\"Symbol:\", geneID)) +\n  geom_point(shape=16, size=1) +\n  ggtitle(\"Disease vs. Healthy\") +\n  theme_bw()\n  #annotate('text', x = 6, y = -4, label = 'SMAD4', size = 3, color = 'red') +\n  #annotate('text', x = 7, y = -3, label = 'ENG', size = 3, color = 'red') +\n  #annotate('text', x = 9, y = -4, label = 'ACVRL1', size = 3, color = 'red')\n#myplot\nmyplotly &lt;- ggplotly(myplot)\n\nmyplot_plotly &lt;- add_trace(myplotly, x = ~c(6, 9.3, 9.3, 6),  # x-coordinates of the circle\n  y = ~c(-4, -4, -2.5, -2.5),  # y-coordinates of the circle\n  fill = \"none\",  # fill the circle\n  mode = \"lines\")\nmyplot_plotly",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#differential-gene-expression",
    "href": "Cleansing_Exploration/rnaseq.html#differential-gene-expression",
    "title": "RNA Sequence Analysis",
    "section": "Differential Gene Expression",
    "text": "Differential Gene Expression\n\n\nCode\ngroup &lt;- factor(targets$group)\ndesign &lt;- model.matrix(~0 + group)\ncolnames(design) &lt;- levels(group)\n\nv.DEGList.filtered.norm &lt;- voom(myDGEList.filtered.norm, design, plot = FALSE)\nfit &lt;- lmFit(v.DEGList.filtered.norm, design)\ncontrast.matrix &lt;- makeContrasts(infection = disease - healthy,\n                                 levels=design)\n\nfits &lt;- contrasts.fit(fit, contrast.matrix)\nebFit &lt;- eBayes(fits)\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=40000, sort.by=\"logFC\")\nmyTopHits.df &lt;- myTopHits %&gt;%\n  as_tibble(rownames = \"geneID\")\n\nvplot &lt;- ggplot(myTopHits.df) +\n  aes(y=-log10(adj.P.Val), x=logFC, text = paste(\"Symbol:\", geneID)) +\n  geom_point(size=2) +\n  geom_hline(yintercept = -log10(0.01), linetype=\"longdash\", colour=\"grey\", linewidth=1) +\n  geom_vline(xintercept = 1, linetype=\"longdash\", colour=\"#BE684D\", linewidth=1) +\n  geom_vline(xintercept = -1, linetype=\"longdash\", colour=\"#2C467A\", linewidth=1) +\n  annotate(\"rect\", xmin = 1, xmax = 12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#BE684D\") +\n  annotate(\"rect\", xmin = -1, xmax = -12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#2C467A\") +\n  labs(title=\"Volcano plot\") +\n  theme_bw()\n\nggplotly(vplot)\n\n\n\n\n\n\nCode\nvplot &lt;- ggplot(myTopHits.df) +\n  aes(y=-log10(adj.P.Val), x=logFC, text = paste(\"Symbol:\", geneID)) +\n  geom_point(size=2) +\n  geom_hline(yintercept = -log10(0.01), linetype=\"longdash\", colour=\"grey\", linewidth=1) +\n  geom_vline(xintercept = 1, linetype=\"longdash\", colour=\"#BE684D\", linewidth=1) +\n  geom_vline(xintercept = -1, linetype=\"longdash\", colour=\"#2C467A\", linewidth=1) +\n  #annotate(\"rect\", xmin = 1, xmax = 12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#BE684D\") +\n  #annotate(\"rect\", xmin = -1, xmax = -12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#2C467A\") +\n  labs(title=\"Volcano plot\") +\n  theme_bw()\n\nggplotly(vplot)\n\n\n\n\n\n\n\n\nCode\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.05, lfc=1)\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\ndiffGenes.df &lt;- as_tibble(diffGenes, rownames = \"geneID\")\n#datatable(diffGenes.df,\n          #extensions = c('KeyTable', \"FixedHeader\"),\n          #caption = 'Table 1: DEGs in hereditary hemorrhagic telangiectasia',\n          #options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  #formatRound(columns=c(2:11), digits=2)\n\ngroup &lt;- factor(targets$group)\ndesign &lt;- model.matrix(~0 + group)\ncolnames(design) &lt;- levels(group)\n\nv.DEGList.filtered.norm &lt;- voom(myDGEList.filtered.norm, design, plot = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- lmFit(v.DEGList.filtered.norm, design)\n\ncontrast.matrix &lt;- makeContrasts(infection = disease - healthy,\n                                 levels=design)\n\nfits &lt;- contrasts.fit(fit, contrast.matrix)\n\nebFit &lt;- eBayes(fits)\n\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=1000, sort.by=\"P\")\n\nmyTopHits.df &lt;- myTopHits %&gt;%\n  as_tibble(rownames = \"geneID\")\n\n#gt(myTopHits.df)\n\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.01, lfc=1)\n\n#head(results)\nsummary(results)\n\n\n       infection\nDown          33\nNotSig     15987\nUp            11\n\n\nCode\nvennDiagram(results, include=\"up\")\n\n\n\n\n\n\n\n\n\nCode\nhead(v.DEGList.filtered.norm$E)\n\n\n         control 1 control 2    hht 1.1   hht 1.2      hht 2.1   hht 2.2\n7SK       3.472236  3.290154  1.4731989 1.3637896  3.351844812 3.2251807\nA1BG-AS1  1.140556  1.523354  0.9687348 0.5537862  1.043332227 0.8596644\nA2M       4.085489  3.681536  7.1690221 6.9275506  7.464539644 7.4982462\nA2ML1    -1.337039  0.186553 -1.8293292 0.6740180 -0.008812131 1.6890183\nA4GALT    4.310393  4.224691  4.7237089 4.8314617  4.155793371 4.2604368\nAAAS      4.665635  4.660797  4.6485903 4.6936389  4.539587622 4.6821253\n           hht 3.1   hht 3.2\n7SK      1.0911818 0.9380777\nA1BG-AS1 1.5496218 1.7211547\nA2M      3.4765089 3.4991400\nA2ML1    0.7728034 1.5567386\nA4GALT   4.7231803 4.8493136\nAAAS     4.5521180 4.5642138\n\n\nCode\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\n\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\nhead(diffGenes)\n\n\n           control 1 control 2  hht 1 .1   hht 1.2   hht 2.1   hht 2.2\nAC073130.3  3.442540  3.554620  1.492421  1.928598  1.872470  1.827697\nACVRL1      8.750189  8.653991 -5.592370 -5.502627 -5.390163 -5.304130\nALDOC       3.562433  3.578118  2.335686  2.537436  1.793928  1.827697\nAR          4.734646  4.735844  3.278388  3.513360  3.602844  3.585952\nCAND2       3.856947  4.084054  2.749242  2.743860  2.485870  3.084719\nCBX8        2.960119  2.717915  1.074558  1.213160  1.599817  1.736741\n             hht 3.1   hht 3.2\nAC073130.3  2.277802  2.016747\nACVRL1     -5.573912 -5.506875\nALDOC       2.385267  2.471475\nAR          3.664249  3.624437\nCAND2       2.601269  2.784017\nCBX8        1.549622  1.556739\n\n\nCode\ndim(diffGenes)\n\n\n[1] 44  8\n\n\nCode\ndiffGenes.df &lt;- as_tibble(diffGenes, rownames = \"geneID\")\n\ndatatable(diffGenes.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Table 1: DEGs in hereditary hemorrhagic telangiectasia',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2:11), digits=2)\n\n\n\n\n\n\nCode\nwrite_tsv(diffGenes.df,\"DiffGenes.txt\")\n\ntargets.mod &lt;- targets %&gt;%\n  dplyr::rename(sampleID = sample, condition = group) %&gt;%\n  dplyr::select(sampleID, condition)",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#module-identification",
    "href": "Cleansing_Exploration/rnaseq.html#module-identification",
    "title": "RNA Sequence Analysis",
    "section": "Module Identification",
    "text": "Module Identification\n\n\nCode\nmyheatcolors &lt;- rev(brewer.pal(name=\"RdBu\", n=11))\nmyotherheatcolors &lt;- rev(brewer.pal(name=\"Spectral\", n=11))\nclustRows &lt;- hclust(as.dist(1-cor(t(diffGenes), method=\"pearson\")), method=\"complete\") \nclustColumns &lt;- hclust(as.dist(1-cor(diffGenes, method=\"spearman\")), method=\"complete\")\nmodule.assign &lt;- cutree(clustRows, k=2)\nmodule.color &lt;- rainbow(length(unique(module.assign)), start=0.1, end=0.9) \nmodule.color &lt;- module.color[as.vector(module.assign)] \nheatmap.2(diffGenes, \n          Rowv=as.dendrogram(clustRows), \n          Colv=as.dendrogram(clustColumns),\n          RowSideColors=module.color,\n          col=myotherheatcolors, scale='row', labRow=NA,\n          density.info=\"none\", trace=\"none\",  \n          cexRow=1, cexCol=1, margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 2 \nmyModule_up &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub_up &lt;- hclust(as.dist(1-cor(t(myModule_up), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule_up, \n          Rowv=as.dendrogram(hrsub_up), \n          Colv=NA, \n          labRow = NA,\n          col=myheatcolors, scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 1 \nmyModule_down &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub_down &lt;- hclust(as.dist(1-cor(t(myModule_down), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule_down, \n          Rowv=as.dendrogram(hrsub_down), \n          Colv=NA, \n          labRow = NA,\n          col=myheatcolors, scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmyheatcolors1 &lt;- bluered(75) \nmyheatcolors2 &lt;- colorRampPalette(colors=c(\"blue\",\"white\",\"red\"))(100)\nmyheatcolors3 &lt;- brewer.pal(name=\"RdBu\", n=11)\nmyheatcolors3 &lt;- c(\"#fed976\", \"#268f9c\")\n\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.01, lfc=1)\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\n#dim(diffGenes)\nclustRows &lt;- hclust(as.dist(1-cor(t(diffGenes), method=\"pearson\")), method=\"complete\") \nclustColumns &lt;- hclust(as.dist(1-cor(diffGenes, method=\"spearman\")), method=\"complete\") \nmodule.assign &lt;- cutree(clustRows, k=2)\nmodule.color &lt;- rainbow(length(unique(module.assign)), start=0.1, end=0.9) \nmodule.color &lt;- module.color[as.vector(module.assign)] \nheatmap.2(diffGenes, \n          Rowv=as.dendrogram(clustRows), \n          Colv=as.dendrogram(clustColumns),\n          RowSideColors=module.color,\n          col=rev(myheatcolors1), scale='row', labRow=NA,\n          density.info=\"none\", trace=\"none\",  \n          cexRow=1, cexCol=1, margins=c(8,20)) \n\n\n\n\n\n\n\n\n\nCode\nd3heatmap(diffGenes,\n          colors = myheatcolors1,\n          Rowv=as.dendrogram(clustRows),\n          row_side_colors = module.color,\n          scale='row')\n\n\n\n\n\n\nCode\ncolnames(diffGenes) &lt;- targets$group\n\ndiffGenes.AVG &lt;- avearrays(diffGenes)\n\nnames(module.color) &lt;- names(module.assign) \n\nmodule.assign.df &lt;- as_tibble(as.list(module.assign))\nmodule.assign.pivot &lt;- pivot_longer(module.assign.df, \n                                    cols = everything(), \n                                    names_to = \"geneID\", \n                                    values_to = \"module\")\n\nmodule.assign.pivot &lt;- module.assign.pivot %&gt;%\n  mutate(moduleColor = case_when(\n    module == 1 ~ \"#FF9900\",\n    module == 2 ~ \"#FF0099\"))\n\nggplot(module.assign.pivot) +\n  aes(module) +\n  geom_bar(aes(fill=moduleColor)) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 2\nmyModule &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub &lt;- hclust(as.dist(1-cor(t(myModule), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule, \n          Rowv=as.dendrogram(hrsub), \n          Colv=NA, \n          labRow = NA,\n          col=rev(myheatcolors1), scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20)) \n\n\n\n\n\n\n\n\n\nCode\nmoduleSymbols &lt;- tibble(geneID = rev(hrsub$labels[hrsub$order]))\nmoduleData &lt;- diffGenes[moduleSymbols$geneID,]\nmoduleData.df &lt;- as_tibble(moduleData, rownames = \"geneSymbol\")\nwrite_tsv(moduleData.df,\"module_upRegulated.tsv\")",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#functional-enrichment-analysis",
    "href": "Cleansing_Exploration/rnaseq.html#functional-enrichment-analysis",
    "title": "RNA Sequence Analysis",
    "section": "Functional Enrichment Analysis",
    "text": "Functional Enrichment Analysis\n\n\nCode\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=100, sort.by=\"AveExpr\")\n\ngost.res &lt;- gost(rownames(myTopHits), organism = \"hsapiens\", correction_method = \"fdr\")\n\ngostplot(gost.res, interactive = TRUE, capped = TRUE)\n\n\n\n\n\n\nCode\nmygostplot &lt;- gostplot(gost.res, interactive = FALSE, capped = TRUE)\n\n#publish_gostplot(\n  #mygostplot, \n  #highlight_terms = c(\"REAC:R-HSA-9662851\", \"REAC:R-HSA-9824443\", \"REAC:R-HSA-9664407\", \"REAC:R-HSA-9658195\", \"REAC:R-HSA-9664417\"),\n  #filename = NULL,\n  #width = NA,\n  #height = NA)\n\nC2CP &lt;- read.gmt(\"https://raw.githubusercontent.com/DerekDoelling/DerekDoelling.github.io/main/c2.all.v2023.2.Hs.symbols.gmt\")\n\nmydata.df.sub &lt;- dplyr::select(mydata.df, geneID, LogFC)\n\nmydata.gsea &lt;- mydata.df.sub$LogFC\nnames(mydata.gsea) &lt;- as.character(mydata.df.sub$geneID)\nmydata.gsea &lt;- sort(mydata.gsea, decreasing = TRUE)\n\nset.seed(123) \nmyGSEA.res &lt;- GSEA(mydata.gsea, TERM2GENE=C2CP, verbose=FALSE) \nmyGSEA.df &lt;- as_tibble(myGSEA.res@result)\n\ndatatable(myGSEA.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Signatures enriched in leishmaniasis',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2:10), digits=2)\n\n\n\n\n\n\nCode\ngseaplot2(myGSEA.res,\n          geneSetID = c(1, 2, 3), \n          pvalue_table = FALSE, \n          \n)\n\n\n\n\n\n\n\n\n\nCode\nmyGSEA.df &lt;- myGSEA.df %&gt;%\n  mutate(phenotype = case_when(\n    NES &gt; 0 ~ \"disease\",\n    NES &lt; 0 ~ \"healthy\"))\n\nggplot(myGSEA.df[1:20,], aes(x=phenotype, y=ID)) +\n  geom_point(aes(size=setSize, color = NES, alpha=-log10(p.adjust))) +\n  scale_color_gradient(low=\"blue\", high=\"red\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nmySig &lt;- rownames(myTopHits) \nmySig2 &lt;- sample((rownames(v.DEGList.filtered.norm$E)), size = 50, replace = FALSE)\ncollection &lt;- list(real = mySig, fake = mySig2)\n\ncamera.res &lt;- camera(v.DEGList.filtered.norm$E, collection, design, contrast.matrix[,1])\ncamera.df &lt;- as_tibble(camera.res, rownames = \"setName\")\n#camera.df\n\nmroast(v.DEGList.filtered.norm$E, collection, design, contrast=1)\n\n\n\n  \n\n\n\nCode\nC2CP &lt;- getGmt(\"https://raw.githubusercontent.com/DerekDoelling/DerekDoelling.github.io/main/c2.all.v2023.2.Hs.symbols.gmt\", geneIdType=SymbolIdentifier())\n\nC2CP &lt;- geneIds(C2CP)\ncamera.res &lt;- camera(v.DEGList.filtered.norm$E, C2CP, design, contrast.matrix[,1])\ncamera.df &lt;- as_tibble(camera.res, rownames = \"setName\")\ncamera.df\n\n\n\n  \n\n\n\nCode\ncamera.df &lt;- dplyr::filter(camera.df, FDR&lt;=0.01)\n\ndatatable(camera.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Signatures enriched in HHT',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2,4,5), digits=2)\n\n\n\n\n\n\nCode\ncamera.df &lt;- camera.df %&gt;%\n  mutate(phenotype = case_when(\n    Direction == \"Up\" ~ \"disease\",\n    Direction == \"Down\" ~ \"healthy\"))\n\nggplot(camera.df[1:25,], aes(x=phenotype, y=setName)) +\n  geom_point(aes(size=NGenes, color = Direction, alpha=-log10(FDR))) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\ngsvapar &lt;- gsvaParam(exprData = v.DEGList.filtered.norm$E,\n                     geneSets = C2CP,\n                     minSize=5, maxSize=500,\n                     maxDiff=TRUE)\n\n#GSVA.res.C2CP &lt;- gsva(gsvapar)\n\n#fit.C2CP &lt;- lmFit(GSVA.res.C2CP, design)\n#ebFit.C2CP &lt;- eBayes(fit.C2CP)\n\n#topPaths.C2CP &lt;- topTable(ebFit.C2CP, adjust =\"BH\", coef=1, number=50, sort.by=\"logFC\")\n#res.C2CP &lt;- decideTests(ebFit.C2CP, method=\"global\", adjust.method=\"BH\", p.value=0.05, lfc=0.5)\n\n#summary(res.C2CP)\n\n#diffSets.C2CP &lt;- GSVA.res.C2CP[res.C2CP[,1] !=0,]\n#head(diffSets.C2CP)\n#dim(diffSets.C2CP)\n\n#hr.C2CP &lt;- hclust(as.dist(1-cor(t(diffSets.C2CP), method=\"pearson\")), method=\"complete\") \n#hc.C2CP &lt;- hclust(as.dist(1-cor(diffSets.C2CP, method=\"spearman\")), method=\"complete\") \n\n#mycl.C2CP &lt;- cutree(hr.C2CP, k=2)\n#mycolhc.C2CP &lt;- rainbow(length(unique(mycl.C2CP)), start=0.1, end=0.9)\n#mycolhc.C2CP &lt;- mycolhc.C2CP[as.vector(mycl.C2CP)]\n\n#myheatcol &lt;- colorRampPalette(colors=c(\"yellow\",\"white\",\"blue\"))(100)\n\n#heatmap.2(diffSets.C2CP,\n          #Rowv=as.dendrogram(hr.C2CP),\n          #Colv=NA,\n          #col=myheatcol, scale=\"row\",\n          #density.info=\"none\", trace=\"none\",\n          #cexRow=0.9, cexCol=1, margins=c(10,14))",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#findings",
    "href": "Cleansing_Exploration/rnaseq.html#findings",
    "title": "RNA Sequence Analysis",
    "section": "Findings",
    "text": "Findings\nIn our research, we discovered that SMAD4, ENG, and ACVRL1 are the genes that exhibit the most variation in their number of transcriptions between healthy patients and patients with HHT. Further investigation revealed that these three genes are part of a single pathway known as the transforming growth factor beta (TGF-β) signaling pathway. Initially thought to promote cell growth like other growth factors, it was later understood that the transforming growth factor serves as a dual-purpose regulator that can either impede or promote cell proliferation (growth and division).\n\n\nSMAD4\nThe human SMAD4 (MADH4) plays a key role in transmitting signals from the TGF-beta group of cytokines. When components of the Smad signaling pathway are mutated or deleted, certain human tumors can resist the growth-suppressing signals of TGF-beta or similar substances.\n\n\nENG\nENG, also known as endoglin, is expressed in blood vessels and plays key roles in cell proliferation, migration, and capillary formation.\n\n\nACVRL1\nACVRL1 is responsible for producing a type I cell-surface receptor that interacts with the TGF-beta superfamily of ligands. Through the signaling receptor ACVRL1, ENG can promote the TGFβ family signaling.",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/rnaseq.html#conclusion",
    "href": "Cleansing_Exploration/rnaseq.html#conclusion",
    "title": "RNA Sequence Analysis",
    "section": "Conclusion",
    "text": "Conclusion\nAccording to the analysis of this RNA sequence, it is evident that alterations in the transcription levels of SMAD4, endoglin, and ACVRL1 may lead to abnormalities in blood vessel formation in the human body, increasing the susceptibility to hemorrhag since these three genes are primarily involved in cell proliferation, especially in endothelial cells.\n\nReferences\nRossi, Elisa, et al. “Endoglin as an Adhesion Molecule in Mature and Progenitor Endothelial Cells: A Function beyond TGF-β.” Frontiers, Frontiers, 14 Jan. 2019, www.frontiersin.org/articles/10.3389/fmed.2019.00010/full.\nGariballa, N., Badawi, S., & Ali, B. R. (2024). Endoglin mutants retained in the endoplasmic reticulum exacerbate loss of function in hereditary hemorrhagic telangiectasia type 1 (HHT1) by exerting dominant negative effects on the wild type allele. Traffic, 25(1). https://doi.org/10.1111/tra.12928 Jones, J. B., & Kern, S. E. (2000). Functional mapping of the MH1 DNA-binding domain of DPC4/SMAD4. Nucleic acids research, 28(12), 2363–2368. https://doi.org/10.1093/nar/28.12.2363\nde Caestecker, M. P., Hemmati, P., Larisch-Bloch, S., Ajmera, R., Roberts, A. B., & Lechleider, R. J. (1997). Characterization of functional domains within Smad4/DPC4. The Journal of biological chemistry, 272(21), 13690–13696. https://doi.org/10.1074/jbc.272.21.13690\nWan, R., Feng, J., & Tang, L. (2021). Consequences of Mutations and Abnormal Expression of SMAD4 in Tumors and T Cells. OncoTargets and therapy, 14, 2531–2540. https://doi.org/10.2147/OTT.S297855\nKuang, C., & Chen, Y. (2004). Tumor-derived C-terminal mutations of Smad4 with decreased DNA binding activity and enhanced intramolecular interaction. Oncogene, 23(5), 1021–1029. https://doi.org/10.1038/sj.onc.1207219\nShovlin, C. L., Hughes, J. M. B., Scott, J., Seidman, C. E., & Seidman, J. G. (1997). Characterization of endoglin and identification of novel mutations in Hereditary hemorrhagic telangiectasia. The American Journal of Human Genetics, 61(1), 68–79. https://doi.org/10.1086/513906\nZhao, M., Mishra, L., Deng, C.X. (2018). The role of TGF-β/SMAD4 signaling in cancer. International Journal of Biological Sciences, 14(2), 111-123. https://doi.org/10.7150/ijbs.23230.\nErrasti Díaz, S., Peñalva, M., Recio-Poveda, L., Vilches, S., Casado-Vela, J., Pérez Pérez, J., Botella, L. M., Albiñana, V., & Cuesta, A. M. (2022). A Novel Splicing Mutation in the ACVRL1/ALK1 Gene as a Cause of HHT2. Journal of clinical medicine, 11(11), 3053. https://doi.org/10.3390/jcm11113053\nKritharis, Athena, Hanny Al-Samkari, and David J. Kuter. “Hereditary hemorrhagic telangiectasia: diagnosis and management from the hematologist’s perspective.” Haematologica 103.9 (2018): 1433.\nChaudhury, A., & Howe, P. H. (2009). The tale of transforming growth factor-beta (TGFbeta) signaling: a soigné enigma. IUBMB life, 61(10), 929–939. https://doi.org/10.1002/iub.239\nChin, D., Boyle, G. M., Parsons, P. G., & Coman, W. B. (2004). What is transforming growth factor-beta (TGF-beta)?. British journal of plastic surgery, 57(3), 215–221. https://doi.org/10.1016/j.bjps.2003.12.012",
    "crumbs": [
      "Project 1"
    ]
  },
  {
    "objectID": "rnaseq.html.html",
    "href": "rnaseq.html.html",
    "title": "RNA Sequence Analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(rhdf5)\nlibrary(tximport) \nlibrary(ensembldb)\nlibrary(biomaRt)\nlibrary(edgeR)\nlibrary(matrixStats)\nlibrary(cowplot)\nlibrary(DT)\nlibrary(gt)\nlibrary(plotly)\nlibrary(limma)\nlibrary(IsoformSwitchAnalyzeR)\nlibrary(RColorBrewer)\nlibrary(gplots)\nlibrary(d3heatmap)\nlibrary(GSEABase)\nlibrary(Biobase) \nlibrary(gprofiler2) \nlibrary(clusterProfiler) \nlibrary(msigdbr) \nlibrary(enrichplot)\nlibrary(EnsDb.Hsapiens.v86)\nlibrary(GSVA)\nlibrary(ggforce)"
  },
  {
    "objectID": "rnaseq.html.html#introduction",
    "href": "rnaseq.html.html#introduction",
    "title": "RNA Sequence Analysis",
    "section": "Introduction",
    "text": "Introduction\nWe will be analyzing Hereditary Hemorrhagic Telangiectasia Syndrome or HHT RNA-seq data. HHT patients develop arteriovenous malformations (AVMs) known as telangiectasia in the nose, mouth, and gastrointestinal tract. The telangiectasia are comprised of fragile vessels that are susceptible to rupture and hemorrhage, which can cause nosebleeds or more serious symptoms depending on the location. It is prevalent in one case per 5,000–8,000 individuals \n We want to find which specific genes contribute to the development of HHT and what roles do they play? The following links are to the research paper and the dataset used in this analysis.\nThis research project aims to improve the studying of rare diseases, such as hereditary hemorrhagic telangiectasia (HHT), using cells derived from patients. The researchers focused on understanding how cells respond to specific genetic mutations called premature termination codons (PTCs).\nThe study involved obtaining blood outgrowth endothelial cells (BOECs) from two healthy patients (control group) and two pre-genotyped HHT patients (experimental group).\nRNA was extracted from multiple samples of BOECs from both healthy and HHT patients. These cells were then grown under two different conditions: with and without a specific growth factor. In total, there were two control/healthy groups and six experimental/disease groups.\n\nLoad in the Data\n\n\nCode\ntargets &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\studydesign.csv\")\n\ncounts &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\Data.csv\")\n\nTx &lt;- transcripts(EnsDb.Hsapiens.v86, columns=c(\"gene_id\", \"gene_name\"))\n\nTx &lt;- as_tibble(Tx)\n\nTx &lt;- dplyr::rename(Tx, target_id = gene_id)\n\nTx &lt;- dplyr::select(Tx, \"target_id\", \"gene_name\")\n\ndf &lt;- left_join(counts, Tx, by = c(\"Ensembl Transcript ID\" = \"target_id\"))\n\ndistinct &lt;- distinct(df)\n\ndata &lt;- distinct %&gt;% \n  group_by(gene_name)\n\ndata &lt;- data %&gt;% \n  mutate_all(funs(replace(., .==\".\", 0)))\n\ndata$`hht 1.1` &lt;- as.numeric(data$`hht 1.1`)\ndata$`hht 1.2` &lt;- as.numeric(data$`hht 1.2`)\ndata$`hht 2.1` &lt;- as.numeric(data$`hht 2.1`)\ndata$`hht 2.2` &lt;- as.numeric(data$`hht 2.2`)\ndata$`hht 3.1` &lt;- as.numeric(data$`hht 3.1`)\ndata$`hht 3.2` &lt;- as.numeric(data$`hht 3.2`)"
  },
  {
    "objectID": "rnaseq.html.html#data-wrangling",
    "href": "rnaseq.html.html#data-wrangling",
    "title": "RNA Sequence Analysis",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\n\nCode\na &lt;- data %&gt;% \n  select(-`Ensembl Transcript ID`)\n\nb &lt;- a %&gt;%\n  group_by(gene_name) %&gt;%\n  summarise_if(is.numeric, sum, na.rm = TRUE)\n\nc &lt;- as.data.frame(b)\n\nrownames(c) &lt;- c$gene_name\n\nmyDGEList &lt;- DGEList(c)\n\nsampleLabels &lt;- targets$sample\n\nlog2.cpm &lt;- cpm(myDGEList, log=TRUE)\n\nlog2.cpm.df &lt;- as_tibble(log2.cpm, rownames = \"geneID\")\ncolnames(log2.cpm.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.df.pivot &lt;- pivot_longer(log2.cpm.df, \n                                  cols = -1,\n                                  names_to = \"samples\",\n                                  values_to = \"expression\")\n\np1 &lt;- ggplot(log2.cpm.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"unfiltered, non-normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\n\ncpm &lt;- cpm(myDGEList)\nkeepers &lt;- rowSums(cpm&gt;1)&gt;=2\nmyDGEList.filtered &lt;- myDGEList[keepers,]\n\nlog2.cpm.filtered &lt;- cpm(myDGEList.filtered, log=TRUE)\nlog2.cpm.filtered.df &lt;- as_tibble(log2.cpm.filtered, rownames = \"geneID\")\ncolnames(log2.cpm.filtered.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.filtered.df.pivot &lt;- pivot_longer(log2.cpm.filtered.df,\n                                           cols = -1,\n                                           names_to = \"samples\",\n                                           values_to = \"expression\") \n\np2 &lt;- ggplot(log2.cpm.filtered.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"filtered, non-normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\n\nmyDGEList.filtered.norm &lt;- calcNormFactors(myDGEList.filtered, method = \"TMM\")\nlog2.cpm.filtered.norm &lt;- cpm(myDGEList.filtered.norm, log=TRUE)\nlog2.cpm.filtered.norm.df &lt;- as_tibble(log2.cpm.filtered.norm, rownames = \"geneID\")\ncolnames(log2.cpm.filtered.norm.df) &lt;- c(\"geneID\", sampleLabels)\nlog2.cpm.filtered.norm.df.pivot &lt;- pivot_longer(log2.cpm.filtered.norm.df,\n                                                cols = -1,\n                                                names_to = \"samples\",\n                                                values_to = \"expression\")\n\np3 &lt;- ggplot(log2.cpm.filtered.norm.df.pivot) +\n  aes(x=samples, y=expression, fill=samples) +\n  geom_violin(trim = FALSE, show.legend = FALSE) +\n  stat_summary(fun = \"median\", \n               geom = \"point\", \n               shape = 95, \n               size = 10, \n               color = \"black\", \n               show.legend = FALSE) +\n  labs(y=\"log2 expression\", x = \"sample\",\n       title=\"Log2 Counts per Million (CPM)\",\n       subtitle=\"filtered, TMM normalized\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust =1))\n\nplot_grid(p1, p2, p3, labels = c('A', 'B', 'C'), label_size = 12)"
  },
  {
    "objectID": "rnaseq.html.html#data-exploration",
    "href": "rnaseq.html.html#data-exploration",
    "title": "RNA Sequence Analysis",
    "section": "Data Exploration",
    "text": "Data Exploration\n\n\nCode\ngroup &lt;- targets$group\ngroup &lt;- factor(group)\n\npca.res &lt;- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)\npc.var &lt;- pca.res$sdev^2\npc.per &lt;- round(pc.var/sum(pc.var)*100, 1) \npca.res.df &lt;- as_tibble(pca.res$x)\npca.plot &lt;- ggplot(pca.res.df) +\n  aes(x=PC1, y=PC2, label=sampleLabels, color = group) +\n  geom_point(size=4) +\n  stat_ellipse() +\n  xlab(paste0(\"PC1 (\",pc.per[1],\"%\",\")\")) + \n  ylab(paste0(\"PC2 (\",pc.per[2],\"%\",\")\")) +\n  labs(title=\"PCA plot\") +\n  coord_fixed() +\n  theme_bw()\n\nggplotly(pca.plot)\n\n\n\n\n\n\nCode\nlog2.cpm.filtered.norm.df &lt;- log2.cpm.filtered.norm.df %&gt;% \n  rename(hht1_1 = `hht 1 .1`, hht1_2 = `hht 1.2`, hht2_1 = `hht 2.1`, hht2_2 = `hht 2.2`, hht3_1 = `hht 3.1`, hht3_2 = `hht 3.2`, control1 = `control 1`, control2 = `control 2`)\n\nmydata.df &lt;- mutate(log2.cpm.filtered.norm.df,\n                    healthy.AVG = (control1 + control2)/2, \n                    disease.AVG = (hht1_1 + hht1_2 + hht2_1 + hht2_2 + hht3_1 + hht3_2)/6,\n                    LogFC = (disease.AVG - healthy.AVG)) %&gt;% \n  mutate_if(is.numeric, round, 2)\n\nmydata.sort &lt;- mydata.df %&gt;%\n  dplyr::arrange(desc(LogFC)) %&gt;% \n  dplyr::select(geneID, LogFC)\n\ndatatable(mydata.df[,c(1,10:12)], \n          extensions = c('KeyTable', \"FixedHeader\"), \n          filter = 'top',\n          options = list(keys = TRUE, \n                        searchHighlight = TRUE, \n                        pageLength = 10, \n                         dom = \"Blfrtip\", \n                         buttons = c(\"copy\", \"csv\", \"excel\"),\n                         lengthMenu = c(\"10\", \"25\", \"50\", \"100\")))\n\n\n\n\n\n\nCode\ndistance &lt;- dist(t(log2.cpm.filtered.norm), method = \"maximum\")\nclusters &lt;- hclust(distance, method = \"single\")\nplot(clusters, labels=sampleLabels)\n\n\n\n\n\n\n\n\n\nCode\npca.res &lt;- prcomp(t(log2.cpm.filtered.norm), scale.=F, retx=T)\n#ls(pca.res)\n#summary(pca.res) \n#pca.res$rotation \n#pca.res$x\nscreeplot(pca.res)\ntext(x=0.7, y=1700, labels = \"47.5%\", cex=0.7)\ntext(x=1.9, y=900, labels = \"21.2%\", cex=0.7)\ntext(x=3.1, y=750, labels = \"17.9%\", cex=0.7)\ntext(x=4.3, y=350, labels = \"7.4%\", cex=0.7)\ntext(x=5.6, y=130, labels = \"2.1%\", cex=0.7)\ntext(x=6.8, y=130, labels = \"2.0%\", cex=0.7)\ntext(x=7.9, y=130, labels = \"1.9%\", cex=0.7)\ntext(x=9.2, y=70, labels = \"0.0%\", cex=0.7)\n\n\n\n\n\n\n\n\n\nCode\npc.var&lt;-pca.res$sdev^2 \npc.per&lt;-round(pc.var/sum(pc.var)*100, 1) \n#pc.per\n\npca.res.df &lt;- as_tibble(pca.res$x)\nggplot(pca.res.df) +\n  aes(x=PC2, y=PC3, label=sampleLabels) +\n  geom_point(size=4) +\n  geom_label() +\n  stat_ellipse() +\n  xlab(paste0(\"PC2 (\",pc.per[1],\"%\",\")\")) + \n  ylab(paste0(\"PC3 (\",pc.per[2],\"%\",\")\")) +\n  labs(title=\"PCA plot\") +\n  coord_fixed() +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\npca.res.df &lt;- pca.res$x[,1:4] %&gt;%\n  as_tibble() %&gt;%\n  add_column(sample = sampleLabels,\n             group = group)\n\npca.pivot &lt;- pivot_longer(pca.res.df, \n                          cols = PC1:PC4, \n                          names_to = \"PC\", \n                          values_to = \"loadings\")\nggplot(pca.pivot) +\n  aes(x=sample, y=loadings, fill=group) + \n  geom_bar(stat=\"identity\") +\n  facet_wrap(~PC) +\n  labs(title=\"PCA 'small multiples' plot\") +\n  theme_bw() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\nCode\nmydata.df &lt;- mutate(log2.cpm.filtered.norm.df,\n                    healthy.AVG = (control1 + control2)/2, \n                    disease.AVG = (hht1_1 + hht1_2 + hht2_1 + hht2_2 + hht3_1 + hht3_2)/6,\n                    LogFC = (disease.AVG - healthy.AVG)) %&gt;% \n  mutate_if(is.numeric, round, 2)\n\n#mydata.sort &lt;- mydata.df %&gt;%\n  #dplyr::arrange(desc(LogFC)) %&gt;% \n  #dplyr::select(geneID, LogFC)\n\n#gt(mydata.sort)\n\nmydata.filter &lt;- mydata.df %&gt;% \n  dplyr::filter(geneID == \"SMAD4\"|geneID == \"ENG\"|geneID == \"ACVRL1\"|geneID == \"SMOC2\") %&gt;% \n  dplyr::select(geneID, healthy.AVG, disease.AVG, LogFC) %&gt;% \n  dplyr::arrange((LogFC))\n\n#gt(mydata.filter)\n\n#myplot &lt;- ggplot(mydata.df) + \n  #aes(x=healthy.AVG, y=disease.AVG) +\n  #geom_point(shape=16, size=1) +\n  #ggtitle(\"disease vs. healthy\") +\n  #theme_bw()\n\n#ggplotly(myplot)\n\nmyplot &lt;- ggplot(mydata.df) +\n  aes(x=healthy.AVG, y=disease.AVG, \n     text = paste(\"Symbol:\", geneID)) +\n  geom_point(shape=16, size=1) +\n  ggtitle(\"Disease vs. Healthy\") +\n  theme_bw()\n  #annotate('text', x = 6, y = -4, label = 'SMAD4', size = 3, color = 'red') +\n  #annotate('text', x = 7, y = -3, label = 'ENG', size = 3, color = 'red') +\n  #annotate('text', x = 9, y = -4, label = 'ACVRL1', size = 3, color = 'red')\n#myplot\nmyplotly &lt;- ggplotly(myplot)\n\nmyplot_plotly &lt;- add_trace(myplotly, x = ~c(6, 9.3, 9.3, 6),  # x-coordinates of the circle\n  y = ~c(-4, -4, -2.5, -2.5),  # y-coordinates of the circle\n  fill = \"none\",  # fill the circle\n  mode = \"lines\")\nmyplot_plotly"
  },
  {
    "objectID": "rnaseq.html.html#differential-gene-expression",
    "href": "rnaseq.html.html#differential-gene-expression",
    "title": "RNA Sequence Analysis",
    "section": "Differential Gene Expression",
    "text": "Differential Gene Expression\n\n\nCode\ngroup &lt;- factor(targets$group)\ndesign &lt;- model.matrix(~0 + group)\ncolnames(design) &lt;- levels(group)\n\nv.DEGList.filtered.norm &lt;- voom(myDGEList.filtered.norm, design, plot = FALSE)\nfit &lt;- lmFit(v.DEGList.filtered.norm, design)\ncontrast.matrix &lt;- makeContrasts(infection = disease - healthy,\n                                 levels=design)\n\nfits &lt;- contrasts.fit(fit, contrast.matrix)\nebFit &lt;- eBayes(fits)\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=40000, sort.by=\"logFC\")\nmyTopHits.df &lt;- myTopHits %&gt;%\n  as_tibble(rownames = \"geneID\")\n\nvplot &lt;- ggplot(myTopHits.df) +\n  aes(y=-log10(adj.P.Val), x=logFC, text = paste(\"Symbol:\", geneID)) +\n  geom_point(size=2) +\n  geom_hline(yintercept = -log10(0.01), linetype=\"longdash\", colour=\"grey\", linewidth=1) +\n  geom_vline(xintercept = 1, linetype=\"longdash\", colour=\"#BE684D\", linewidth=1) +\n  geom_vline(xintercept = -1, linetype=\"longdash\", colour=\"#2C467A\", linewidth=1) +\n  annotate(\"rect\", xmin = 1, xmax = 12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#BE684D\") +\n  annotate(\"rect\", xmin = -1, xmax = -12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#2C467A\") +\n  labs(title=\"Volcano plot\") +\n  theme_bw()\n\nggplotly(vplot)\n\n\n\n\n\n\nCode\nvplot &lt;- ggplot(myTopHits.df) +\n  aes(y=-log10(adj.P.Val), x=logFC, text = paste(\"Symbol:\", geneID)) +\n  geom_point(size=2) +\n  geom_hline(yintercept = -log10(0.01), linetype=\"longdash\", colour=\"grey\", linewidth=1) +\n  geom_vline(xintercept = 1, linetype=\"longdash\", colour=\"#BE684D\", linewidth=1) +\n  geom_vline(xintercept = -1, linetype=\"longdash\", colour=\"#2C467A\", linewidth=1) +\n  #annotate(\"rect\", xmin = 1, xmax = 12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#BE684D\") +\n  #annotate(\"rect\", xmin = -1, xmax = -12, ymin = -log10(0.01), ymax = 7.5, alpha=.2, fill=\"#2C467A\") +\n  labs(title=\"Volcano plot\") +\n  theme_bw()\n\nggplotly(vplot)\n\n\n\n\n\n\n\n\nCode\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.05, lfc=1)\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\ndiffGenes.df &lt;- as_tibble(diffGenes, rownames = \"geneID\")\n#datatable(diffGenes.df,\n          #extensions = c('KeyTable', \"FixedHeader\"),\n          #caption = 'Table 1: DEGs in hereditary hemorrhagic telangiectasia',\n          #options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  #formatRound(columns=c(2:11), digits=2)\n\ngroup &lt;- factor(targets$group)\ndesign &lt;- model.matrix(~0 + group)\ncolnames(design) &lt;- levels(group)\n\nv.DEGList.filtered.norm &lt;- voom(myDGEList.filtered.norm, design, plot = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nfit &lt;- lmFit(v.DEGList.filtered.norm, design)\n\ncontrast.matrix &lt;- makeContrasts(infection = disease - healthy,\n                                 levels=design)\n\nfits &lt;- contrasts.fit(fit, contrast.matrix)\n\nebFit &lt;- eBayes(fits)\n\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=1000, sort.by=\"P\")\n\nmyTopHits.df &lt;- myTopHits %&gt;%\n  as_tibble(rownames = \"geneID\")\n\n#gt(myTopHits.df)\n\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.01, lfc=1)\n\n#head(results)\nsummary(results)\n\n\n       infection\nDown          33\nNotSig     15987\nUp            11\n\n\nCode\nvennDiagram(results, include=\"up\")\n\n\n\n\n\n\n\n\n\nCode\nhead(v.DEGList.filtered.norm$E)\n\n\n         control 1 control 2    hht 1.1   hht 1.2      hht 2.1   hht 2.2\n7SK       3.472236  3.290154  1.4731989 1.3637896  3.351844812 3.2251807\nA1BG-AS1  1.140556  1.523354  0.9687348 0.5537862  1.043332227 0.8596644\nA2M       4.085489  3.681536  7.1690221 6.9275506  7.464539644 7.4982462\nA2ML1    -1.337039  0.186553 -1.8293292 0.6740180 -0.008812131 1.6890183\nA4GALT    4.310393  4.224691  4.7237089 4.8314617  4.155793371 4.2604368\nAAAS      4.665635  4.660797  4.6485903 4.6936389  4.539587622 4.6821253\n           hht 3.1   hht 3.2\n7SK      1.0911818 0.9380777\nA1BG-AS1 1.5496218 1.7211547\nA2M      3.4765089 3.4991400\nA2ML1    0.7728034 1.5567386\nA4GALT   4.7231803 4.8493136\nAAAS     4.5521180 4.5642138\n\n\nCode\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\n\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\nhead(diffGenes)\n\n\n           control 1 control 2  hht 1 .1   hht 1.2   hht 2.1   hht 2.2\nAC073130.3  3.442540  3.554620  1.492421  1.928598  1.872470  1.827697\nACVRL1      8.750189  8.653991 -5.592370 -5.502627 -5.390163 -5.304130\nALDOC       3.562433  3.578118  2.335686  2.537436  1.793928  1.827697\nAR          4.734646  4.735844  3.278388  3.513360  3.602844  3.585952\nCAND2       3.856947  4.084054  2.749242  2.743860  2.485870  3.084719\nCBX8        2.960119  2.717915  1.074558  1.213160  1.599817  1.736741\n             hht 3.1   hht 3.2\nAC073130.3  2.277802  2.016747\nACVRL1     -5.573912 -5.506875\nALDOC       2.385267  2.471475\nAR          3.664249  3.624437\nCAND2       2.601269  2.784017\nCBX8        1.549622  1.556739\n\n\nCode\ndim(diffGenes)\n\n\n[1] 44  8\n\n\nCode\ndiffGenes.df &lt;- as_tibble(diffGenes, rownames = \"geneID\")\n\ndatatable(diffGenes.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Table 1: DEGs in hereditary hemorrhagic telangiectasia',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2:11), digits=2)\n\n\n\n\n\n\nCode\nwrite_tsv(diffGenes.df,\"DiffGenes.txt\")\n\ntargets.mod &lt;- targets %&gt;%\n  dplyr::rename(sampleID = sample, condition = group) %&gt;%\n  dplyr::select(sampleID, condition)"
  },
  {
    "objectID": "rnaseq.html.html#module-identification",
    "href": "rnaseq.html.html#module-identification",
    "title": "RNA Sequence Analysis",
    "section": "Module Identification",
    "text": "Module Identification\n\n\nCode\nmyheatcolors &lt;- rev(brewer.pal(name=\"RdBu\", n=11))\nmyotherheatcolors &lt;- rev(brewer.pal(name=\"Spectral\", n=11))\nclustRows &lt;- hclust(as.dist(1-cor(t(diffGenes), method=\"pearson\")), method=\"complete\") \nclustColumns &lt;- hclust(as.dist(1-cor(diffGenes, method=\"spearman\")), method=\"complete\")\nmodule.assign &lt;- cutree(clustRows, k=2)\nmodule.color &lt;- rainbow(length(unique(module.assign)), start=0.1, end=0.9) \nmodule.color &lt;- module.color[as.vector(module.assign)] \nheatmap.2(diffGenes, \n          Rowv=as.dendrogram(clustRows), \n          Colv=as.dendrogram(clustColumns),\n          RowSideColors=module.color,\n          col=myotherheatcolors, scale='row', labRow=NA,\n          density.info=\"none\", trace=\"none\",  \n          cexRow=1, cexCol=1, margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 2 \nmyModule_up &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub_up &lt;- hclust(as.dist(1-cor(t(myModule_up), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule_up, \n          Rowv=as.dendrogram(hrsub_up), \n          Colv=NA, \n          labRow = NA,\n          col=myheatcolors, scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 1 \nmyModule_down &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub_down &lt;- hclust(as.dist(1-cor(t(myModule_down), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule_down, \n          Rowv=as.dendrogram(hrsub_down), \n          Colv=NA, \n          labRow = NA,\n          col=myheatcolors, scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20))\n\n\n\n\n\n\n\n\n\nCode\nmyheatcolors1 &lt;- bluered(75) \nmyheatcolors2 &lt;- colorRampPalette(colors=c(\"blue\",\"white\",\"red\"))(100)\nmyheatcolors3 &lt;- brewer.pal(name=\"RdBu\", n=11)\nmyheatcolors3 &lt;- c(\"#fed976\", \"#268f9c\")\n\nresults &lt;- decideTests(ebFit, method=\"global\", adjust.method=\"BH\", p.value=0.01, lfc=1)\ncolnames(v.DEGList.filtered.norm$E) &lt;- sampleLabels\ndiffGenes &lt;- v.DEGList.filtered.norm$E[results[,1] !=0,]\n#dim(diffGenes)\nclustRows &lt;- hclust(as.dist(1-cor(t(diffGenes), method=\"pearson\")), method=\"complete\") \nclustColumns &lt;- hclust(as.dist(1-cor(diffGenes, method=\"spearman\")), method=\"complete\") \nmodule.assign &lt;- cutree(clustRows, k=2)\nmodule.color &lt;- rainbow(length(unique(module.assign)), start=0.1, end=0.9) \nmodule.color &lt;- module.color[as.vector(module.assign)] \nheatmap.2(diffGenes, \n          Rowv=as.dendrogram(clustRows), \n          Colv=as.dendrogram(clustColumns),\n          RowSideColors=module.color,\n          col=rev(myheatcolors1), scale='row', labRow=NA,\n          density.info=\"none\", trace=\"none\",  \n          cexRow=1, cexCol=1, margins=c(8,20)) \n\n\n\n\n\n\n\n\n\nCode\nd3heatmap(diffGenes,\n          colors = myheatcolors1,\n          Rowv=as.dendrogram(clustRows),\n          row_side_colors = module.color,\n          scale='row')\n\n\n\n\n\n\nCode\ncolnames(diffGenes) &lt;- targets$group\n\ndiffGenes.AVG &lt;- avearrays(diffGenes)\n\nnames(module.color) &lt;- names(module.assign) \n\nmodule.assign.df &lt;- as_tibble(as.list(module.assign))\nmodule.assign.pivot &lt;- pivot_longer(module.assign.df, \n                                    cols = everything(), \n                                    names_to = \"geneID\", \n                                    values_to = \"module\")\n\nmodule.assign.pivot &lt;- module.assign.pivot %&gt;%\n  mutate(moduleColor = case_when(\n    module == 1 ~ \"#FF9900\",\n    module == 2 ~ \"#FF0099\"))\n\nggplot(module.assign.pivot) +\n  aes(module) +\n  geom_bar(aes(fill=moduleColor)) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nCode\nmodulePick &lt;- 2\nmyModule &lt;- diffGenes[names(module.assign[module.assign %in% modulePick]),] \nhrsub &lt;- hclust(as.dist(1-cor(t(myModule), method=\"pearson\")), method=\"complete\") \n\nheatmap.2(myModule, \n          Rowv=as.dendrogram(hrsub), \n          Colv=NA, \n          labRow = NA,\n          col=rev(myheatcolors1), scale=\"row\", \n          density.info=\"none\", trace=\"none\", \n          RowSideColors=module.color[module.assign%in%modulePick], margins=c(8,20)) \n\n\n\n\n\n\n\n\n\nCode\nmoduleSymbols &lt;- tibble(geneID = rev(hrsub$labels[hrsub$order]))\nmoduleData &lt;- diffGenes[moduleSymbols$geneID,]\nmoduleData.df &lt;- as_tibble(moduleData, rownames = \"geneSymbol\")\nwrite_tsv(moduleData.df,\"module_upRegulated.tsv\")"
  },
  {
    "objectID": "rnaseq.html.html#functional-enrichment-analysis",
    "href": "rnaseq.html.html#functional-enrichment-analysis",
    "title": "RNA Sequence Analysis",
    "section": "Functional Enrichment Analysis",
    "text": "Functional Enrichment Analysis\n\n\nCode\nmyTopHits &lt;- topTable(ebFit, adjust =\"BH\", coef=1, number=100, sort.by=\"AveExpr\")\n\ngost.res &lt;- gost(rownames(myTopHits), organism = \"hsapiens\", correction_method = \"fdr\")\n\ngostplot(gost.res, interactive = TRUE, capped = TRUE)\n\n\n\n\n\n\nCode\nmygostplot &lt;- gostplot(gost.res, interactive = FALSE, capped = TRUE)\n\n#publish_gostplot(\n  #mygostplot, \n  #highlight_terms = c(\"REAC:R-HSA-9662851\", \"REAC:R-HSA-9824443\", \"REAC:R-HSA-9664407\", \"REAC:R-HSA-9658195\", \"REAC:R-HSA-9664417\"),\n  #filename = NULL,\n  #width = NA,\n  #height = NA)\n\nC2CP &lt;- read.gmt(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\c2.all.v2023.2.Hs.symbols.gmt\")\n\nmydata.df.sub &lt;- dplyr::select(mydata.df, geneID, LogFC)\n\nmydata.gsea &lt;- mydata.df.sub$LogFC\nnames(mydata.gsea) &lt;- as.character(mydata.df.sub$geneID)\nmydata.gsea &lt;- sort(mydata.gsea, decreasing = TRUE)\n\nset.seed(123) \nmyGSEA.res &lt;- GSEA(mydata.gsea, TERM2GENE=C2CP, verbose=FALSE) \nmyGSEA.df &lt;- as_tibble(myGSEA.res@result)\n\ndatatable(myGSEA.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Signatures enriched in leishmaniasis',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2:10), digits=2)\n\n\n\n\n\n\nCode\ngseaplot2(myGSEA.res,\n          geneSetID = c(1, 2, 3), \n          pvalue_table = FALSE, \n          \n)\n\n\n\n\n\n\n\n\n\nCode\nmyGSEA.df &lt;- myGSEA.df %&gt;%\n  mutate(phenotype = case_when(\n    NES &gt; 0 ~ \"disease\",\n    NES &lt; 0 ~ \"healthy\"))\n\nggplot(myGSEA.df[1:20,], aes(x=phenotype, y=ID)) +\n  geom_point(aes(size=setSize, color = NES, alpha=-log10(p.adjust))) +\n  scale_color_gradient(low=\"blue\", high=\"red\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nmySig &lt;- rownames(myTopHits) \nmySig2 &lt;- sample((rownames(v.DEGList.filtered.norm$E)), size = 50, replace = FALSE)\ncollection &lt;- list(real = mySig, fake = mySig2)\n\ncamera.res &lt;- camera(v.DEGList.filtered.norm$E, collection, design, contrast.matrix[,1])\ncamera.df &lt;- as_tibble(camera.res, rownames = \"setName\")\n#camera.df\n\nmroast(v.DEGList.filtered.norm$E, collection, design, contrast=1)\n\n\n\n  \n\n\n\nCode\nC2CP &lt;- getGmt(\"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\DerekDoelling.github.io\\\\c2.all.v2023.2.Hs.symbols.gmt\", geneIdType=SymbolIdentifier())\n\nC2CP &lt;- geneIds(C2CP)\ncamera.res &lt;- camera(v.DEGList.filtered.norm$E, C2CP, design, contrast.matrix[,1])\ncamera.df &lt;- as_tibble(camera.res, rownames = \"setName\")\ncamera.df\n\n\n\n  \n\n\n\nCode\ncamera.df &lt;- dplyr::filter(camera.df, FDR&lt;=0.01)\n\ndatatable(camera.df,\n          extensions = c('KeyTable', \"FixedHeader\"),\n          caption = 'Signatures enriched in HHT',\n          options = list(keys = TRUE, searchHighlight = TRUE, pageLength = 10, lengthMenu = c(\"10\", \"25\", \"50\", \"100\"))) %&gt;%\n  formatRound(columns=c(2,4,5), digits=2)\n\n\n\n\n\n\nCode\ncamera.df &lt;- camera.df %&gt;%\n  mutate(phenotype = case_when(\n    Direction == \"Up\" ~ \"disease\",\n    Direction == \"Down\" ~ \"healthy\"))\n\nggplot(camera.df[1:25,], aes(x=phenotype, y=setName)) +\n  geom_point(aes(size=NGenes, color = Direction, alpha=-log10(FDR))) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\ngsvapar &lt;- gsvaParam(exprData = v.DEGList.filtered.norm$E,\n                     geneSets = C2CP,\n                     minSize=5, maxSize=500,\n                     maxDiff=TRUE)\n\n#GSVA.res.C2CP &lt;- gsva(gsvapar)\n\n#fit.C2CP &lt;- lmFit(GSVA.res.C2CP, design)\n#ebFit.C2CP &lt;- eBayes(fit.C2CP)\n\n#topPaths.C2CP &lt;- topTable(ebFit.C2CP, adjust =\"BH\", coef=1, number=50, sort.by=\"logFC\")\n#res.C2CP &lt;- decideTests(ebFit.C2CP, method=\"global\", adjust.method=\"BH\", p.value=0.05, lfc=0.5)\n\n#summary(res.C2CP)\n\n#diffSets.C2CP &lt;- GSVA.res.C2CP[res.C2CP[,1] !=0,]\n#head(diffSets.C2CP)\n#dim(diffSets.C2CP)\n\n#hr.C2CP &lt;- hclust(as.dist(1-cor(t(diffSets.C2CP), method=\"pearson\")), method=\"complete\") \n#hc.C2CP &lt;- hclust(as.dist(1-cor(diffSets.C2CP, method=\"spearman\")), method=\"complete\") \n\n#mycl.C2CP &lt;- cutree(hr.C2CP, k=2)\n#mycolhc.C2CP &lt;- rainbow(length(unique(mycl.C2CP)), start=0.1, end=0.9)\n#mycolhc.C2CP &lt;- mycolhc.C2CP[as.vector(mycl.C2CP)]\n\n#myheatcol &lt;- colorRampPalette(colors=c(\"yellow\",\"white\",\"blue\"))(100)\n\n#heatmap.2(diffSets.C2CP,\n          #Rowv=as.dendrogram(hr.C2CP),\n          #Colv=NA,\n          #col=myheatcol, scale=\"row\",\n          #density.info=\"none\", trace=\"none\",\n          #cexRow=0.9, cexCol=1, margins=c(10,14))"
  },
  {
    "objectID": "rnaseq.html.html#findings",
    "href": "rnaseq.html.html#findings",
    "title": "RNA Sequence Analysis",
    "section": "Findings",
    "text": "Findings\nIn our research, we discovered that SMAD4, ENG, and ACVRL1 are the genes that exhibit the most variation in their number of transcriptions between healthy patients and patients with HHT. Further investigation revealed that these three genes are part of a single pathway known as the transforming growth factor beta (TGF-β) signaling pathway. Initially thought to promote cell growth like other growth factors, it was later understood that the transforming growth factor serves as a dual-purpose regulator that can either impede or promote cell proliferation (growth and division).\n\n\nSMAD4\nThe human SMAD4 (MADH4) plays a key role in transmitting signals from the TGF-beta group of cytokines. When components of the Smad signaling pathway are mutated or deleted, certain human tumors can resist the growth-suppressing signals of TGF-beta or similar substances.\n\n\nENG\nENG, also known as endoglin, is expressed in blood vessels and plays key roles in cell proliferation, migration, and capillary formation.\n\n\nACVRL1\nACVRL1 is responsible for producing a type I cell-surface receptor that interacts with the TGF-beta superfamily of ligands. Through the signaling receptor ACVRL1, ENG can promote the TGFβ family signaling."
  },
  {
    "objectID": "rnaseq.html.html#conclusion",
    "href": "rnaseq.html.html#conclusion",
    "title": "RNA Sequence Analysis",
    "section": "Conclusion",
    "text": "Conclusion\nAccording to the analysis of this RNA sequence, it is evident that alterations in the transcription levels of SMAD4, endoglin, and ACVRL1 may lead to abnormalities in blood vessel formation in the human body, increasing the susceptibility to hemorrhag since these three genes are primarily involved in cell proliferation, especially in endothelial cells.\n\nReferences\nRossi, Elisa, et al. “Endoglin as an Adhesion Molecule in Mature and Progenitor Endothelial Cells: A Function beyond TGF-β.” Frontiers, Frontiers, 14 Jan. 2019, www.frontiersin.org/articles/10.3389/fmed.2019.00010/full.\nGariballa, N., Badawi, S., & Ali, B. R. (2024). Endoglin mutants retained in the endoplasmic reticulum exacerbate loss of function in hereditary hemorrhagic telangiectasia type 1 (HHT1) by exerting dominant negative effects on the wild type allele. Traffic, 25(1). https://doi.org/10.1111/tra.12928 Jones, J. B., & Kern, S. E. (2000). Functional mapping of the MH1 DNA-binding domain of DPC4/SMAD4. Nucleic acids research, 28(12), 2363–2368. https://doi.org/10.1093/nar/28.12.2363\nde Caestecker, M. P., Hemmati, P., Larisch-Bloch, S., Ajmera, R., Roberts, A. B., & Lechleider, R. J. (1997). Characterization of functional domains within Smad4/DPC4. The Journal of biological chemistry, 272(21), 13690–13696. https://doi.org/10.1074/jbc.272.21.13690\nWan, R., Feng, J., & Tang, L. (2021). Consequences of Mutations and Abnormal Expression of SMAD4 in Tumors and T Cells. OncoTargets and therapy, 14, 2531–2540. https://doi.org/10.2147/OTT.S297855\nKuang, C., & Chen, Y. (2004). Tumor-derived C-terminal mutations of Smad4 with decreased DNA binding activity and enhanced intramolecular interaction. Oncogene, 23(5), 1021–1029. https://doi.org/10.1038/sj.onc.1207219\nShovlin, C. L., Hughes, J. M. B., Scott, J., Seidman, C. E., & Seidman, J. G. (1997). Characterization of endoglin and identification of novel mutations in Hereditary hemorrhagic telangiectasia. The American Journal of Human Genetics, 61(1), 68–79. https://doi.org/10.1086/513906\nZhao, M., Mishra, L., Deng, C.X. (2018). The role of TGF-β/SMAD4 signaling in cancer. International Journal of Biological Sciences, 14(2), 111-123. https://doi.org/10.7150/ijbs.23230.\nErrasti Díaz, S., Peñalva, M., Recio-Poveda, L., Vilches, S., Casado-Vela, J., Pérez Pérez, J., Botella, L. M., Albiñana, V., & Cuesta, A. M. (2022). A Novel Splicing Mutation in the ACVRL1/ALK1 Gene as a Cause of HHT2. Journal of clinical medicine, 11(11), 3053. https://doi.org/10.3390/jcm11113053\nKritharis, Athena, Hanny Al-Samkari, and David J. Kuter. “Hereditary hemorrhagic telangiectasia: diagnosis and management from the hematologist’s perspective.” Haematologica 103.9 (2018): 1433.\nChaudhury, A., & Howe, P. H. (2009). The tale of transforming growth factor-beta (TGFbeta) signaling: a soigné enigma. IUBMB life, 61(10), 929–939. https://doi.org/10.1002/iub.239\nChin, D., Boyle, G. M., Parsons, P. G., & Coman, W. B. (2004). What is transforming growth factor-beta (TGF-beta)?. British journal of plastic surgery, 57(3), 215–221. https://doi.org/10.1016/j.bjps.2003.12.012"
  },
  {
    "objectID": "IBCspring.html.html",
    "href": "IBCspring.html.html",
    "title": "IBC Analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(directlabels)\nlibrary(ggrepel)\nlibrary(gapminder)\nlibrary(ggthemes)\nlibrary(scales)\nlibrary(plotly)\nlibrary(pander)\n\ndata &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive - BYU-Idaho\\\\Documents\\\\Data Science Society\\\\IBC Historical Data.csv\")\nCode\nper_dec &lt;- function(x) {\n  numeric_values &lt;- as.numeric(gsub(\"%\", \"\", x))\n  \n  numeric_values / 100\n}\nCode\nibc &lt;- data %&gt;% \n  mutate(\n    `Gross Margin` = per_dec(data$`Gross Margin`), \n    `Net Income Margin` = per_dec(data$`Net Income Margin`))\n\nibc &lt;- ibc[-c(1, 5, 7:10, 12:21), ]\n\nibc &lt;- rename(ibc, net_income = \"Net Income\")\n\nibc_semester &lt;- ibc %&gt;% \n  group_by(Smstr)\n\nibc_semester$Smstr &lt;- factor(ibc_semester$Smstr, levels = c(\"Fall\", \"Winter\", \"Spring\"))\n\nibc_category &lt;- ibc %&gt;% \n  group_by(Category)\n\nibc_year &lt;- ibc %&gt;% \n  group_by(Year)"
  },
  {
    "objectID": "IBCspring.html.html#background",
    "href": "IBCspring.html.html#background",
    "title": "IBC Analysis",
    "section": "Background",
    "text": "Background\nAt Brigham Young University-Idaho, IBC is a program where students run their own businesses on campus with a loan from the university. The professor in charge of IBC has requested an analysis of data from the past couple of years. Specifically, he wants to know which businesses perform the best, whether the semester influences business success, and if female students have a positive impact on the businesses.\nIn the context of this statistical examination, we have set the threshold for statistical significance at an alpha level of 0.1. Upon conducting individual ANOVA analyses, we observe that the residuals versus fitted values plot demonstrates a consistent variance across each vertical cluster of data points. This is indicative of the homoscedasticity assumption being reasonably satisfied.\nFurthermore, the Quantile-Quantile (Q-Q) Plot exhibits a reasonable degree of normality, although some deviations are noted at the extremities. This warrants a degree of caution in interpreting the results.\nFor illustrative purposes, we will provide one such assumption plot as a representative example. However, it is important to note that the pattern observed is generally consistent across all ANOVA analyses conducted."
  },
  {
    "objectID": "IBCspring.html.html#individual-analysis",
    "href": "IBCspring.html.html#individual-analysis",
    "title": "IBC Analysis",
    "section": "Individual Analysis",
    "text": "Individual Analysis\n\nSemester vs. Revenue\n\n\nCode\nsemester_aov &lt;- aov(Revenue ~ Smstr, ibc_semester)\nsummary(semester_aov)\n\n\n             Df    Sum Sq  Mean Sq F value Pr(&gt;F)\nSmstr         2 6.578e+07 32890323   1.184  0.308\nResiduals   186 5.167e+09 27779127               \n\n\nCode\npar(mfrow = c(1,2))\nplot(semester_aov, which = 1:2)\n\n\n\n\n\n\n\n\n\n\n\nCode\nchart1 &lt;- ggplot(ibc_semester, aes(x=Smstr, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Revenue\", title=\"Fall Semester Experiences the Highest Median of Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart1)\n\n\n\n\n\n\nWhile the Fall semester may exhibit a higher median revenue, the Winter semester demonstrates a greater variability in revenue. However, with a p-value of 0.308, the differences of in mean revenue between the semesters are not statistically significant.\n\n\nSemester vs. Net Income\n\n\nCode\nchart2 &lt;- ggplot(ibc_semester, aes(x=Smstr, y=net_income)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Net Income\", title= \"Spring Semester's Median Net Income is in the Negatives\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart2)\n\n\n\n\n\n\nThe median net income for the Spring semester is actually negative, while the Fall semester boasts a median net income of $408. However, the p-value of 0.148 obtained from the ANOVA test suggests that the differences in mean revenue across semesters are not statistically significant.\n\n\nCategory vs. Revenue\n\n\nCode\nchart3 &lt;- ggplot(ibc_category, aes(x=Category, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Category\", y=\"Revenue\", title=\"Food/Drink Businesses Earn More Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart3)\n\n\n\n\n\n\nStatistical analysis indicates that businesses in the Food/Drink sector generate a higher average revenue compared to other types of businesses with Apparel in second place.\n\n\nCategory vs. Net Income\n\n\nCode\nchart4 &lt;- ggplot(ibc_category, aes(x=Category, y=net_income)) +\n  geom_boxplot() +\n  labs(x=\"Category\", y=\"Net Income\", title=\"Apparel Businesses Have the Highest Median Net INcome\" ) +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart4)\n\n\n\n\n\n\nInterestingly, the differences in mean net income across various business types are not statistically significant. However, it is noteworthy that businesses in the Apparel sector appear to have a higher net income compared to others.\n\n\nYear vs. Revenue\n\n\nCode\nchart5 &lt;- ggplot(ibc_year, aes(x=Year, y=Revenue, group=Year)) +\n  geom_boxplot() +\n  labs(x=\"Year\", y=\"Revenue\", title = \"Median Revenue Has Decreased Ever Since 2017\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart5)\n\n\n\n\n\n\nUnsurprisingly, the period from 2020 to 2022 recorded the lowest revenue across an eight-year span, a downturn largely attributable to the global pandemic. Notably, there appears to be a significant decline in the median revenue following the year 2016.\n\n\nCost of Goods Sold vs. Net Income\n\n\nCode\ncogs &lt;- ibc %&gt;% \n  drop_na(COGS, net_income)\n\ncogs$`Company Name`[is.na(cogs$`Company Name`)] &lt;- \"Unknown\"\n\nibc_lm &lt;- lm(net_income ~ COGS, data=cogs)\nsummary(ibc_lm)\n\n\n\nCall:\nlm(formula = net_income ~ COGS, data = cogs)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8035.9  -931.5   -50.3   734.9  6130.4 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -407.29678  209.78081  -1.942   0.0537 .  \nCOGS           0.24913    0.05027   4.956 1.62e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1727 on 185 degrees of freedom\nMultiple R-squared:  0.1172,    Adjusted R-squared:  0.1124 \nF-statistic: 24.56 on 1 and 185 DF,  p-value: 1.619e-06\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm,which=1:2)\nplot(ibc_lm$residuals)\n\n\n\n\n\n\n\n\n\nThe assumption plot for Residuals vs Fitted raises some concerns as the data points are predominantly clustered towards the far left. Additionally, the Quantile-Quantile (Q-Q) Plot exhibits deviations at both ends, indicating potential departures from normality.\n\n\nCode\nchart6 &lt;- ggplot(cogs, aes(x = COGS, y = net_income)) +\n  geom_point()+\n  geom_smooth(method = lm, formula = y~x, se = FALSE) +\n  labs(x= \"Cost of Goods Sold\", y = \"Net Income\", title = \"More Input = More Output\") +\n  scale_y_continuous(labels = dollar_format()) +\n  scale_x_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10)) +\n  annotate('text', x = 15000, y = 8000, label = 'Wing Shack', size = 3.5, color = 'red') +\n  annotate('text', x = 5000, y = -8000, label = '43 North', size = 3.5, color = 'red') \n\nchart6\n\n\n\n\n\n\n\n\n\nAccording to the linear model, there appears to be a positive correlation between the investment in goods and the subsequent returns. Notably, ‘43 North’ and ‘Wing Shack’ emerge as outliers in this analysis. As most companies tend to maintain low Cost of Goods Sold (COGS), our dataset is somewhat limited in terms of businesses with high COGS. However, within the scope of the available data, we can discern a significant relationship between the cost of goods sold and net income.\n\n\nCode\npeople &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\Downloads\\\\registration_cleaned_sp22_f23_joined_with_business_name (2).csv\")\n\nbusinesses &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\Downloads\\\\IBC Historical Data.csv\")\n\npeople &lt;- people %&gt;% \n  drop_na(\"Business me\")\n\nbusiness &lt;- businesses %&gt;% \n  drop_na(\"Company Name\")\n\ndf &lt;- left_join(people, business, by = c(\"Business me\" = \"Company Name\"))\n\ngender &lt;- df %&gt;%\n  group_by(`Business me`) %&gt;%\n  mutate(\n    females = sum(`Gender` == 'Female', na.rm = TRUE), \n    males = sum(`Gender` == 'Male', na.rm = TRUE)\n  )\n\ndfdf &lt;- gender %&gt;%\n  group_by(females) %&gt;%\n  mutate(females = as.factor(females))\n\ndfdf1 &lt;- gender %&gt;%\n  group_by(males) %&gt;%\n  mutate(males = as.factor(males))\n\ndf1 &lt;- gender %&gt;%\n  group_by(females) %&gt;%\n  summarise(\n    med_net_income = median(`Net Income`, na.rm = TRUE), \n    avg_net_income = mean(`Net Income`, na.rm = TRUE), \n    sum_net_income = sum(`Net Income`, na.rm = TRUE)\n  )\n\ndf2 &lt;- gender %&gt;%\n  group_by(males) %&gt;%\n  summarise(\n    med_net_income = median(`Net Income`, na.rm = TRUE), \n    avg_net_income = mean(`Net Income`, na.rm = TRUE), \n    sum_net_income = sum(`Net Income`, na.rm = TRUE)\n  )\n\nbusinesses$Smstr &lt;- factor(businesses$Smstr, levels = c(\"Fall\", \"Winter\", \"Spring\"))\n\nfood &lt;- businesses %&gt;% \n  filter(Category == \"Food/Drink\") %&gt;% \n  group_by(Smstr)"
  },
  {
    "objectID": "IBCspring.html.html#semester-vs.-revenuesemester-vs.-net-income-for-fooddrink-businesses",
    "href": "IBCspring.html.html#semester-vs.-revenuesemester-vs.-net-income-for-fooddrink-businesses",
    "title": "IBC Analysis",
    "section": "Semester vs. Revenue/Semester vs. Net Income for Food/Drink Businesses",
    "text": "Semester vs. Revenue/Semester vs. Net Income for Food/Drink Businesses\n\n\nCode\nchart8 &lt;- ggplot(food, aes(x=Smstr, y=Revenue)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Revenue\", title=\"Winter Semester Earns the Highest Median Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart8)\n\n\n\n\n\n\n\n\nCode\nchart7 &lt;- ggplot(food, aes(x=Smstr, y=`Net Income`)) +\n  geom_boxplot() +\n  labs(x=\"Semester\", y=\"Net Income\", title=\"Fall Semester Earns a Positive Median Net Income\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -6, size = 10))\n\nggplotly(chart7)\n\n\n\n\n\n\nIntriguingly, the Winter semester records the highest median revenue, while the Spring semester significantly outperforms others in terms of median net income. Despite the higher sales in Winter, the Fall semester may yield greater profits, potentially due to variations in student population. A more comprehensive analysis could be conducted if data on student population for each semester were available. This would allow for a proportional normalization of the data, thereby providing a more accurate comparison across semesters."
  },
  {
    "objectID": "IBCspring.html.html#females-in-business",
    "href": "IBCspring.html.html#females-in-business",
    "title": "IBC Analysis",
    "section": "Females in Business",
    "text": "Females in Business\nFemale presence in companies\n\n\nCode\npander(summary(gender$females))\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n4\n5\n7\n6.598\n8\n9\n\n\n\n\n\nMale presence in companies\n\n\nCode\npander(summary(gender$males))\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n7\n8\n9\n9.256\n10\n12\n\n\n\n\n\n\n\nCode\ngender$`Business me`[is.na(gender$`Business me`)] &lt;- \"Unknown\"\n\ng &lt;- gender %&gt;% \n  group_by(`Business me`) %&gt;% \n  mutate(\n    total = females + males, \n    prop_female = females / total) %&gt;% \n  distinct(`Business me`, .keep_all = TRUE) %&gt;% \n  mutate(\n    median_rev = median(Revenue), \n    median_net = median(`Net Income`))\n\n\n\nProportion of Females vs. Median Revenue\n\n\nCode\nibc_lm2 &lt;- lm(median_rev ~ prop_female, data=g)\nsummary(ibc_lm2)\n\n\n\nCall:\nlm(formula = median_rev ~ prop_female, data = g)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -5917  -3923  -1340   2984  10088 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)     5700       4473   1.274    0.215\nprop_female     8897      10766   0.826    0.417\n\nResidual standard error: 4819 on 23 degrees of freedom\n  (1 observation deleted due to missingness)\nMultiple R-squared:  0.02883,   Adjusted R-squared:  -0.01339 \nF-statistic: 0.6829 on 1 and 23 DF,  p-value: 0.4171\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm2,which=1:2)\nplot(ibc_lm2$residuals)\n\n\n\n\n\n\n\n\n\nThe criteria for linear regression appear to be satisfactorily fulfilled. The Residuals vs Fitted plot exhibits a seemingly random distribution, indicating homoscedasticity. The Q-Q Plot, while demonstrating a slight right skew, largely adheres to the normality assumption. Furthermore, the Residuals vs Order plot suggests that the residuals are independent, reinforcing the validity of our model.\n\n\nCode\nchart9 &lt;- ggplot(g, aes(x=prop_female, y=median_rev)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Proportion of Females\", y = \"Median Revenue\", title=\"Females Bring In More Revenue\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -5, size = 10))\n\nchart9\n\n\n\n\n\n\n\n\n\nThe graph illustrates a linear escalation in revenue corresponding to an increase in the proportion of females. Nonetheless, the correlation between the proportion of females and median revenue does not appear to be significantly meaningful\n\n\nProportion of Females vs. Median Net Income\n\n\nCode\nibc_lm3 &lt;- lm(median_net ~ prop_female, data=g)\nsummary(ibc_lm3)\n\n\n\nCall:\nlm(formula = median_net ~ prop_female, data = g)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2938.6 -1322.9  -513.8   694.1  4798.4 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)   -307.2     1784.4  -0.172    0.865\nprop_female   3870.0     4295.3   0.901    0.377\n\nResidual standard error: 1922 on 23 degrees of freedom\n  (1 observation deleted due to missingness)\nMultiple R-squared:  0.03409,   Adjusted R-squared:  -0.007905 \nF-statistic: 0.8118 on 1 and 23 DF,  p-value: 0.3769\n\n\nCode\npar(mfrow=c(1,3))\nplot(ibc_lm3,which=1:2)\nplot(ibc_lm3$residuals)\n\n\n\n\n\n\n\n\n\nThe sole area of concern is that the Q-Q Plot exhibits a pronounced right skew.\n\n\nCode\nchart10 &lt;- ggplot(g, aes(x=prop_female, y=median_net)) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Proportion of Females\", y = \"Median Net Income\", title=\"Women Contribute to a Higher Net Income\") +\n  scale_y_continuous(labels = dollar_format()) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'),  \n        panel.background = element_rect(fill = \"white\"), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        panel.grid.major.y = element_line(color = \"grey\", linetype = 'solid'),\n        axis.title.y = element_text(vjust = 6, size = 10), \n        axis.title.x = element_text(vjust = -5, size = 10))\n\nchart10\n\n\n\n\n\n\n\n\n\nOnce again, the graph suggests that an increase in the proportion of females aligns with a rise in median net income. However, the statistical significance of this relationship appears to be negligible."
  },
  {
    "objectID": "Project.html.html",
    "href": "Project.html.html",
    "title": "Medicine Mosaic",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(plotly)\nlibrary(RColorBrewer)"
  },
  {
    "objectID": "Project.html.html#background",
    "href": "Project.html.html#background",
    "title": "Medicine Mosaic",
    "section": "Background",
    "text": "Background\nMy initial career aspiration was to become a pharmacist, and I pursued a major in biology during the first two years of my bachelor’s degree. However, I soon realized that chemistry wasn’t my strong suit. Nonetheless, my passion for pharmaceuticals and medicine continues to drive my curiosity. In an attempt to blend my interest in data analysis with pharmacy, I delved into a dataset containing information on thousands of medications. You can find the original dataset at: https://www.kaggle.com/datasets/singhnavjot2062001/11000-medicine-details. The original dataset contained nine columns: Medicine Name (string), Composition (string), Uses (string), Side Effects (string), Image Url (string), Manufacturer (string), Excellent Review (numeric), Average Review (numeric), and Poor Review (numeric). After putting in a lot of effort, I managed to create useful charts from the data.\n\n\nCode\ndrugs &lt;- read_csv(\"C:\\\\Users\\\\derek\\\\OneDrive - BYU-Idaho\\\\Documents\\\\DS 350\\\\DS350_SP24_Doelling_Dere\\\\week_14\\\\medicine info.csv\")\n\n\n\n\nCode\n# Makes new composition columns\n\nsplit_composition &lt;- function(df, column_to_split, separator) {\n  \n  max_compositions &lt;- max(str_count(df[[column_to_split]], separator) + 1)\n  \n  \n  new_columns &lt;- paste0(\"Composition_\", seq_len(max_compositions))\n  \n  \n  df %&gt;%\n    separate(column_to_split, into = new_columns, sep = separator, fill = \"right\", extra = \"merge\")\n\n}\n\n\ndrugs1 &lt;- split_composition(drugs, \"Composition\", \"\\\\+\")\n\ncols &lt;- c(\"Composition_1\", \"Composition_2\", \"Composition_3\", \"Composition_4\", \"Composition_5\", \"Composition_6\", \"Composition_7\", \"Composition_8\", \"Composition_9\")\n\ndrugs1 &lt;- drugs1 %&gt;% \n  mutate(across(all_of(cols), str_trim))\n\ndrugs1$Composition_Count &lt;- rowSums(!is.na(drugs1[cols]))\n\n\n\n\nCode\n# Split into dosages\n\nsplit_dosage &lt;- function(df, column_to_split, separator) {\n \n  df &lt;- df %&gt;%\n    separate(column_to_split, into = paste0(column_to_split, \"_amount\", seq_len(2)), sep = separator, remove = TRUE, fill = \"right\")\n  \n  return(df)\n}\n\ndrugs2 &lt;- split_dosage(drugs1, \"Composition_1\", \"\\\\(\") %&gt;% \n  rename(\"Composition_1\" = \"Composition_1_amount1\", \"Dosage_Amount_1\" = \"Composition_1_amount2\") %&gt;% \n  mutate(Dosage_Amount_1 = str_replace_all(Dosage_Amount_1, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_2\", \"\\\\(\") %&gt;% \n  rename(\"Composition_2\" = \"Composition_2_amount1\", \"Dosage_Amount_2\" = \"Composition_2_amount2\") %&gt;% \n  mutate(Dosage_Amount_2 = str_replace_all(Dosage_Amount_2, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_3\", \"\\\\(\") %&gt;% \n  rename(\"Composition_3\" = \"Composition_3_amount1\", \"Dosage_Amount_3\" = \"Composition_3_amount2\") %&gt;% \n  mutate(Dosage_Amount_3 = str_replace_all(Dosage_Amount_3, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_4\", \"\\\\(\") %&gt;% \n  rename(\"Composition_4\" = \"Composition_4_amount1\", \"Dosage_Amount_4\" = \"Composition_4_amount2\") %&gt;% \n  mutate(Dosage_Amount_4 = str_replace_all(Dosage_Amount_4, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_5\", \"\\\\(\") %&gt;% \n  rename(\"Composition_5\" = \"Composition_5_amount1\", \"Dosage_Amount_5\" = \"Composition_5_amount2\") %&gt;% \n  mutate(Dosage_Amount_5 = str_replace_all(Dosage_Amount_5, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_6\", \"\\\\(\") %&gt;% \n  rename(\"Composition_6\" = \"Composition_6_amount1\", \"Dosage_Amount_6\" = \"Composition_6_amount2\") %&gt;% \n  mutate(Dosage_Amount_6 = str_replace_all(Dosage_Amount_6, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_7\", \"\\\\(\") %&gt;% \n  rename(\"Composition_7\" = \"Composition_7_amount1\", \"Dosage_Amount_7\" = \"Composition_7_amount2\") %&gt;% \n  mutate(Dosage_Amount_7 = str_replace_all(Dosage_Amount_7, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_8\", \"\\\\(\") %&gt;% \n  rename(\"Composition_8\" = \"Composition_8_amount1\", \"Dosage_Amount_8\" = \"Composition_8_amount2\") %&gt;% \n  mutate(Dosage_Amount_8 = str_replace_all(Dosage_Amount_8, \"\\\\)\", \"\"))\n\ndrugs2 &lt;- split_dosage(drugs2, \"Composition_9\", \"\\\\(\") %&gt;% \n  rename(\"Composition_9\" = \"Composition_9_amount1\", \"Dosage_Amount_9\" = \"Composition_9_amount2\") %&gt;% \n  mutate(Dosage_Amount_9 = str_replace_all(Dosage_Amount_9, \"\\\\)\", \"\"))\n\n\n\n\nCode\n# Split dosage unit\n\nsplit_unit &lt;- function(df, unit_column) {\n  number &lt;- str_extract(unit_column, \"\\\\d+$\")  \n  new_column_name &lt;- paste0('Dosage_Amount_', number)\n  units_column_name &lt;- paste0('Units_', number)\n  \n  df &lt;- df %&gt;%\n    tidyr::separate(unit_column, into = c(new_column_name, units_column_name), sep = \"(?&lt;=\\\\d)(?=[%a-zA-Z])\", extra = \"merge\")\n  \n  \n  df[[new_column_name]] &lt;- as.numeric(df[[new_column_name]])\n  \n    df &lt;- df %&gt;%\n    mutate_all(~ifelse(. == \"None\", \"None\", .))\n  \n  return(df)\n}\n\ndrugs3 &lt;- split_unit(drugs2, \"Dosage_Amount_1\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_2\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_3\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_4\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_5\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_6\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_7\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_8\")\ndrugs3 &lt;- split_unit(drugs3, \"Dosage_Amount_9\")\n\n\n\n\nCode\n# Remove Treatment of and Prevention of\n\nsplit_treatment &lt;- function(df, uses_column) {\n  df &lt;- df %&gt;%\n    mutate({{uses_column}} := str_replace_all({{uses_column}}, \"Treatment of|Prevention of\", \"\")) %&gt;%\n    mutate({{uses_column}} := str_trim({{uses_column}}))\n}\n\ndrugs4 &lt;- split_treatment(drugs3, Uses)\n\n\n\n\nCode\n# Separate into multiple uses and counts side effects\n\ndrugs5 &lt;- drugs4 %&gt;% \n  mutate(Treats = str_split(Uses, pattern=\"(?&lt;=\\\\s)(?=[A-Z])\"),\n         count_side_effects = str_count(Side_effects, pattern=\"(?&lt;=\\\\s)(?=[A-Z])\")+1) %&gt;% \n  unnest(Treats)"
  },
  {
    "objectID": "Project.html.html#analysis",
    "href": "Project.html.html#analysis",
    "title": "Medicine Mosaic",
    "section": "Analysis",
    "text": "Analysis\n\nChart 1\n\n\nCode\ngraph &lt;- drugs5 %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE) %&gt;% \n  filter(`Poor Review %` == 100) %&gt;% \n  select(Manufacturer, `Poor Review %`) %&gt;% \n  group_by(Manufacturer) %&gt;% \n  mutate(bad_review = n()) %&gt;% \n  distinct(Manufacturer, .keep_all = TRUE) %&gt;% \n  arrange(desc(bad_review))\n\ngraph &lt;- graph[c(1, 2, 3, 4, 5), ] \n\ngraph &lt;- graph  %&gt;% \n  mutate(Manufacturer = fct_reorder(Manufacturer, bad_review)) %&gt;% \n  select(-`Poor Review %`)\n\n\n\n\nCode\ngraph$highlight &lt;- ifelse(graph$Manufacturer == \"Intas Pharmaceuticals Ltd\", \"red\", \"darkgrey\")\n\nggplot(graph, aes(x=reorder(Manufacturer, bad_review), y=bad_review, fill=highlight)) +\n  geom_col() +\n  scale_fill_identity() +\n  coord_flip() +\n  labs(x = \"\", y=\"Number of Poor Products\", title=\"Manufacturers with the Most Poor Rated Products\", subtitle = \"Intas Pharmaceuticals Ltd may produce many least favored medications\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        plot.subtitle = element_text(size = 10), \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.x = element_text(vjust = -3, size = 10))\n\n\n\n\n\n\n\n\n\nAccording to the graph, it seems that Intas Pharmaceuticals Ltd may be producing the least popular medications in terms of customer satisfaction. This could potentially have a negative impact on their business, as customers are more likely to choose medications from other manufacturers. Consequently, Intas Pharmaceuticals Ltd could incur losses from producing drugs that may not sell well.\n\n\nChart 2\n\n\nCode\ngraph1 &lt;- drugs5 %&gt;% \n  filter(Units_1 == \"mg\", \n         Treats == \"Pain relief\") %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE) %&gt;% \n  select(Composition_1, Dosage_Amount_1, `Excellent Review %`) %&gt;% \n  mutate(Composition_1 = as_factor(Composition_1)) %&gt;% \n  filter(Composition_1 == \"Etoricoxib \") %&gt;% \n  group_by(Dosage_Amount_1) %&gt;% \n  mutate(\n    avg_review = median(`Excellent Review %`), \n    Dosage_Amount_1 = fct_reorder(as_factor(Dosage_Amount_1), avg_review))\n\ngraph1 &lt;- graph1[c(1, 3, 11), ] \n\n\n\n\nCode\nggplot(graph1, aes(x = Dosage_Amount_1, y = avg_review)) +\n  geom_col() +\n  labs(x=\"Dosage Amount in mg\", y = \"Median Percentage of Excellent Reviews\", title = \"More the Merrier?\", subtitle = \"Comparing dosage amounts for Etoricoxib, a pain relief drug\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10)) +\n  annotate(\"segment\", x = \"60\", xend = \"90\", y = 40, yend = 55, colour = \"red\", size=1, alpha=1, arrow=arrow())\n\n\n\n\n\n\n\n\n\nI wanted to investigate if higher dosages would yield better results. I calculated the median percentage of positive reviews for each available dosage of Etoricoxib, a pain relief medication. I chose Etoricoxib because it had a reasonable number of dosage options. Based on the graph, it appears that this is indeed the case, at least for Etoricoxib.\n\n\nChart 3\n\n\nCode\ngraph2 &lt;- drugs5 %&gt;% \n  mutate(\n    Treats = as_factor(Treats)) %&gt;% \n  group_by(Treats) %&gt;% \n  select(Treats, count_side_effects) %&gt;% \n  distinct(Treats, .keep_all = TRUE) %&gt;% \n  mutate(\n    Treats = str_to_lower(Treats))\n\ncategorize_treats &lt;- function(input) {\n  if (str_detect(input, \"cancer\")) {\n    return(\"Cancer Treatments\") }\n  if (str_detect(input, \"anxiety|depression|obsessive|bipolar|schizophrenia|mood|eating|traumatic\")) {\n    return(\"Mental Health\") }\n  if (str_detect(input, \"heart|cholesterol|angina|hypotension|hypertension|cardiac\")) {\n    return(\"Heart Related\") }\n  if (str_detect(input, \"bacteria|infection|viral|virus\")) {\n    return(\"Bacterial/Viral\") }\n  if (str_detect(input, \"pain|inflammation|irritation|osteoporosis|vomit|headache|nausea|migraine|burn\")) {\n    return(\"Antimetics/Pain\") }\n  if (str_detect(input, \"disease|disorder\")) {\n    return(\"Disease Related/Disorder Related\") }\n  else return(\"Other\")\n}\n\ngraph2$Treats &lt;- sapply(graph2$Treats, categorize_treats)\n\ngraph3 &lt;- graph2 %&gt;% \n  mutate(\n    avg_sides = mean(count_side_effects), \n    Treats = fct_reorder(Treats, avg_sides)) %&gt;% \n  distinct(Treats, .keep_all = TRUE)\n\n\n\n\nCode\nggplot(graph3, aes(reorder(x=Treats, avg_sides), y=avg_sides, fill=Treats)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_brewer(palette = \"Spectral\") +\n  labs(y=\"Average Number of Side Effects\", x = \"Medication Class\", title=\"What Medication Class Causes the Most Side Effects?\", subtitle=\"Mental health medications and cancer treatments have\\n the most by far\") +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        legend.position = \"none\", \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10)) +\n  geom_hline(yintercept = 6.6, linetype=\"dashed\", color='black')\n\n\n\n\n\n\n\n\n\nIt’s noteworthy that medications for mental health conditions like anxiety, depression, and OCD, as well as cancer treatments, tend to cause almost double the amount of side effects compared to other types of drugs. This is likely because cancer treatments are usually more intensive and demanding, and targeting brain chemicals is not an easy task.\n\n\nChart 4\n\n\nCode\ngraph4 &lt;- drugs5 %&gt;% \n  distinct(`Medicine Name`, .keep_all = TRUE)\n\ngraph4$average_rating &lt;- (graph4$`Excellent Review %`* 3 + graph4$`Average Review %` * 2 + graph4$`Poor Review %`* 1) / 100\n\ngraph4$Composition_1 &lt;- replace_na(graph4$Composition_1, \"None\")\ngraph4$Composition_2 &lt;- replace_na(graph4$Composition_2, \"None\")\ngraph4$Composition_3 &lt;- replace_na(graph4$Composition_3, \"None\")\ngraph4$Composition_4 &lt;- replace_na(graph4$Composition_4, \"None\")\ngraph4$Composition_5 &lt;- replace_na(graph4$Composition_5, \"None\")\ngraph4$Composition_6 &lt;- replace_na(graph4$Composition_6, \"None\")\ngraph4$Composition_7 &lt;- replace_na(graph4$Composition_7, \"None\")\ngraph4$Composition_8 &lt;- replace_na(graph4$Composition_8, \"None\")\ngraph4$Composition_9 &lt;- replace_na(graph4$Composition_9, \"None\")\n\nfit &lt;- lm(average_rating ~ Composition_Count, data = graph4)\nnewdata &lt;- data.frame(Composition_Count = range(graph4$Composition_Count))\nnewdata$average_rating &lt;- predict(fit, newdata)\n\n\n\n\nCode\nchart &lt;- ggplot(graph4, aes(x=Composition_Count, y=average_rating, text = paste(\"Medication:\", `Medicine Name`, \"\\nUse:\", Treats, \"\\nChemicals:\", Composition_1, Composition_2, Composition_3, Composition_4, Composition_5, Composition_6, Composition_7, Composition_8, Composition_9))) +\n  geom_point() +\n  geom_smooth(method = lm, se = FALSE) +\n  labs(x=\"Number of Chemical Compositions\", y = \"Average Rating\", title = \"More Chemicals the Better\") +\n  scale_x_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9)) +\n  theme(plot.margin = unit(c(2,1,2,2), \"lines\"), \n        plot.title = element_text(hjust = 0.5, vjust = 6, face = 'bold'), \n        legend.position = \"none\", \n        panel.background = element_blank(),\n        panel.grid.major.y = element_blank(), \n        panel.grid.minor.y= element_blank(), \n        axis.ticks.length.x = unit(0, 'pt'),  \n        axis.ticks.length.y = unit(0, 'pt'), \n        axis.title.y = element_text(vjust= 6, size = 10), \n        axis.title.x = element_text(vjust= -2, size = 10))\n\nchart &lt;- ggplotly(chart)\nchart &lt;- chart %&gt;% add_lines(x = ~Composition_Count, y = ~average_rating, data = newdata)\n\nchart\n\n\n\n\n\n\nI conducted a study to investigate whether including more chemical compositions in a medication leads to higher customer satisfaction. I analyzed the average rating for each medication based on three review categories: excellent, average, and poor. To calculate the average rating, I multiplied the number of excellent reviews by 3, average reviews by 2, and poor reviews by 1. Then, I added these three numbers together and divided the sum by 100. After reviewing the data, it appears that, in general, medications with more chemical compositions tend to have slightly higher levels of customer satisfaction. One potential explanation for the increased customer satisfaction is that the additional chemicals may serve to stabilize the others or prevent them from producing adverse effects. However, it’s important to note that there are only a few medications with more than 5 chemicals compared to those with less than 5, which could be influencing the data."
  }
]